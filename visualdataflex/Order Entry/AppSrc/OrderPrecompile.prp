Compiling Program: A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\Order Entry\AppSrc\ORDERPRECOMPILE.PKG
Memory Available: 2147483646
1>Use DfAllent.pkg
Using pre-compiled package DFALLENT.PKG
Including file: dfallent.pkd    (C:\Program Files (x86)\DataFlex 18.2\Pkg\dfallent.pkd)
75288>Use cCJStandardCommandBarSystem.pkg
Including file: cCJStandardCommandBarSystem.pkg    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cCJStandardCommandBarSystem.pkg)
75288>>>// these are all the packages used in a standard MDI menubar/toolbar system
75288>>>
75288>>>Use cCJCommandBarSystem.pkg
75288>>>Use cCJStandardMenuItemClasses.pkg
Including file: cCJStandardMenuItemClasses.pkg    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cCJStandardMenuItemClasses.pkg)
75288>>>>>Use Dfpanel.pkg
75288>>>>>Use cCJCommandBarSystem.pkg
75288>>>>>Use LanguageText.pkg
75288>>>>>
75288>>>>>
75288>>>>>Class cCJUndoMenuItem is a cCJMenuItem
75289>>>>>    
75289>>>>>    Procedure Construct_Object
75291>>>>>        Forward Send Construct_Object
75293>>>>>        Set psCaption   to C_$CaptionUndo
75294>>>>>        Set psToolTip to C_$ToolTipUndo
75295>>>>>        Set psDescription to C_$DescUndo
75296>>>>>        Set psImage to "ActionUndo.ico"
75297>>>>>        Set pbActiveUpdate to True
75298>>>>>        Set psCategory to C_$CategoryEdit
75299>>>>>        Set psShortcut to C_$Key_Ctrl_Z
75300>>>>>    End_Procedure
75301>>>>>
75301>>>>>    Procedure OnExecute Variant vCommandBarControl
75303>>>>>        Send Undo of (focus(Self))
75304>>>>>    End_Procedure
75305>>>>>    
75305>>>>>    Function IsEnabled Returns Boolean
75307>>>>>        Boolean bEnabled
75307>>>>>        Get CanUndo of (Focus(Self)) to bEnabled
75308>>>>>        Function_Return bEnabled
75309>>>>>    End_Function
75310>>>>>         
75310>>>>>End_Class
75311>>>>>
75311>>>>>
75311>>>>>Class cCJDeleteEditMenuItem is a cCJMenuItem
75312>>>>>    
75312>>>>>    Procedure Construct_Object
75314>>>>>        Forward Send Construct_Object
75316>>>>>        Set psCaption   to C_$CaptionDelete
75317>>>>>        Set psToolTip to C_$ToolTipDelete
75318>>>>>        Set psDescription to C_$DescDelete
75319>>>>>        Set psImage to "actionDelete.ico"
75320>>>>>        Set psShortcut to C_$Key_Delete
75321>>>>>        Set pbActiveUpdate to True
75322>>>>>        Set psCategory to C_$CategoryEdit
75323>>>>>    End_Procedure
75324>>>>>
75324>>>>>
75324>>>>>    Procedure OnExecute Variant vCommandBarControl
75326>>>>>        Send Delete of (focus(Self))
75327>>>>>    End_Procedure
75328>>>>>    
75328>>>>>    Function IsEnabled Returns Boolean
75330>>>>>        Boolean bEnabled
75330>>>>>        Get CanDelete of (Focus(Self)) to bEnabled
75331>>>>>        Function_Return bEnabled
75332>>>>>    End_Function
75333>>>>>         
75333>>>>>End_Class
75334>>>>>
75334>>>>>
75334>>>>>Class cCJCutMenuItem is a cCJMenuItem
75335>>>>>    
75335>>>>>    Procedure Construct_Object
75337>>>>>        Forward Send Construct_Object
75339>>>>>        Set psCaption   to C_$CaptionCut
75340>>>>>        Set psToolTip to C_$TooltipCut
75341>>>>>        Set psDescription to C_$DescCut
75342>>>>>        Set psImage to "actionCut.ico"
75343>>>>>        Set psShortcut to C_$Key_Ctrl_X
75344>>>>>        Set pbActiveUpdate to True
75345>>>>>        Set psCategory to C_$CategoryEdit
75346>>>>>    End_Procedure
75347>>>>>
75347>>>>>
75347>>>>>    Procedure OnExecute Variant vCommandBarControl
75349>>>>>        Send Cut of (focus(Self))
75350>>>>>    End_Procedure
75351>>>>>    
75351>>>>>    Function IsEnabled Returns Boolean
75353>>>>>        Boolean bEnabled
75353>>>>>        Get CanCut of (Focus(Self)) to bEnabled
75354>>>>>        Function_Return bEnabled
75355>>>>>    End_Function
75356>>>>>         
75356>>>>>End_Class
75357>>>>>
75357>>>>>
75357>>>>>Class cCJCopyMenuItem is a cCJMenuItem
75358>>>>>    
75358>>>>>    Procedure Construct_Object
75360>>>>>        Forward Send Construct_Object
75362>>>>>        Set psCaption   to C_$CaptionCopy
75363>>>>>        Set psToolTip to C_$ToolTipCopy
75364>>>>>        Set psDescription to C_$DescCopy
75365>>>>>        Set psImage to "actionCopy.ico"
75366>>>>>        Set psShortcut to C_$Key_Ctrl_C
75367>>>>>        Set pbActiveUpdate to True
75368>>>>>        Set psCategory to C_$CategoryEdit
75369>>>>>    End_Procedure
75370>>>>>
75370>>>>>
75370>>>>>    Procedure OnExecute Variant vCommandBarControl
75372>>>>>        Send Copy of (focus(Self))
75373>>>>>    End_Procedure
75374>>>>>    
75374>>>>>    Function IsEnabled Returns Boolean
75376>>>>>        Boolean bEnabled
75376>>>>>        Get CanCopy of (Focus(Self)) to bEnabled
75377>>>>>        Function_Return bEnabled
75378>>>>>    End_Function
75379>>>>>         
75379>>>>>End_Class
75380>>>>>
75380>>>>>
75380>>>>>Class cCJPasteMenuItem is a cCJMenuItem
75381>>>>>    
75381>>>>>    Procedure Construct_Object
75383>>>>>        Forward Send Construct_Object
75385>>>>>        Set psCaption   to C_$CaptionPaste
75386>>>>>        Set psToolTip to C_$ToolTipPaste
75387>>>>>        Set psDescription to C_$DescPaste
75388>>>>>        Set psImage to "actionPaste.ico"
75389>>>>>        Set pbActiveUpdate to True
75390>>>>>        Set psShortcut to C_$Key_Ctrl_V
75391>>>>>        Set psCategory to C_$CategoryEdit
75392>>>>>    End_Procedure
75393>>>>>
75393>>>>>
75393>>>>>    Procedure OnExecute Variant vCommandBarControl
75395>>>>>        Send Paste of (focus(Self))
75396>>>>>    End_Procedure
75397>>>>>    
75397>>>>>    Function IsEnabled Returns Boolean
75399>>>>>        Boolean bEnabled
75399>>>>>        Get CanPaste of (Focus(Self)) to bEnabled
75400>>>>>        Function_Return bEnabled
75401>>>>>    End_Function
75402>>>>>         
75402>>>>>End_Class
75403>>>>>
75403>>>>>Class cCJSelectAllMenuItem is a cCJMenuItem
75404>>>>>    
75404>>>>>    Procedure Construct_Object
75406>>>>>        Forward Send Construct_Object
75408>>>>>        Set psCaption   to C_$CaptionSelectAll
75409>>>>>        Set psToolTip to C_$ToolTipSelectAll
75410>>>>>        Set psDescription to C_$DescSelectAll
75411>>>>>        Set pbActiveUpdate to True
75412>>>>>        Set psShortcut to C_$Key_Ctrl_A
75413>>>>>        Set psCategory to C_$CategoryEdit
75414>>>>>    End_Procedure
75415>>>>>
75415>>>>>
75415>>>>>    Procedure OnExecute Variant vCommandBarControl
75417>>>>>        Send Select_All of (focus(Self))
75418>>>>>    End_Procedure
75419>>>>>    
75419>>>>>    Function IsEnabled Returns Boolean
75421>>>>>        Boolean bEnabled
75421>>>>>        Get CanSelect of (Focus(Self)) to bEnabled
75422>>>>>        Function_Return bEnabled
75423>>>>>    End_Function
75424>>>>>         
75424>>>>>End_Class
75425>>>>>
75425>>>>> 
75425>>>>>Class cCJExitMenuItem is a cCJMenuItem
75426>>>>>
75426>>>>>    Procedure Construct_Object
75428>>>>>        Forward Send Construct_Object
75430>>>>>        Set psCaption to C_$CaptionExit
75431>>>>>        Set psToolTip to C_$ToolTipExit
75432>>>>>        Set psDescription to C_$ToolTipExit
75433>>>>>        Set psShortcut to C_$Key_Alt_F4
75434>>>>>        Set psCategory to C_$CategoryFile
75435>>>>>    End_Procedure
75436>>>>>
75436>>>>>    Procedure OnExecute Variant vCommandBarControl
75438>>>>>        Send Exit_Application of Desktop
75439>>>>>    End_Procedure
75440>>>>>
75440>>>>>End_Class           
75441>>>>>
75441>>>>>Class cCJHelpMenuItem is a cCJMenuItem    
75442>>>>>
75442>>>>>    Procedure Construct_Object
75444>>>>>        Forward Send Construct_Object
75446>>>>>        Set psCaption to C_$CaptionHelp
75447>>>>>        Set psDescription to C_$ToolTipHelp
75448>>>>>        Set psToolTip to C_$DescHelp
75449>>>>>        Set psImage to "ActionHelp.ico"
75450>>>>>        Set psShortcut to "F1"
75451>>>>>        Set psCategory to C_$CategoryHelp
75452>>>>>    End_Procedure
75453>>>>>    
75453>>>>>    Procedure OnExecute Variant vCommandBarControl
75455>>>>>        Send Help of (Focus(Self))
75456>>>>>    End_Procedure
75457>>>>>
75457>>>>>End_Class
75458>>>>>
75458>>>>>Class cCJStatusbarMenuItem is a cCJMenuItem
75459>>>>>
75459>>>>>    Procedure Construct_Object
75461>>>>>        Forward Send Construct_Object
75463>>>>>        Set psCaption to C_$CaptionAddStatusbar
75464>>>>>        Set psToolTip to C_$ToolTipAddStatusbar
75465>>>>>        Set psDescription to  C_$DescAddStatusbar
75466>>>>>        Set psCategory to C_$CategoryWindow
75467>>>>>    End_Procedure
75468>>>>>
75468>>>>>    Procedure OnExecute Variant vCommandBarControl
75470>>>>>        Handle hoCommandBars hoClientArea
75470>>>>>        Get CommandBarSystemObject to hoCommandBars
75471>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
75472>>>>>        If hoClientArea Begin
75474>>>>>            // the clientarea's parent panel has message
75474>>>>>            Send Toggle_StatusBar of (Parent(hoClientArea))
75475>>>>>        End
75475>>>>>>
75475>>>>>    End_Procedure
75476>>>>>
75476>>>>>     Function IsChecked Returns Boolean
75478>>>>>        Boolean bOn
75478>>>>>        Handle hoCommandBars hoClientArea
75478>>>>>        Get CommandBarSystemObject to hoCommandBars
75479>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
75480>>>>>        If hoClientArea Begin
75482>>>>>            // the clientarea's parent panel has message
75482>>>>>            Get StatusBar_State of (Parent(hoClientArea)) to bOn
75483>>>>>        End
75483>>>>>>
75483>>>>>        Function_Return bOn
75484>>>>>     End_Function
75485>>>>>End_Class
75486>>>>>
75486>>>>>Class cCJAutoArrangeIconsMenuItem is a cCJMenuItem
75487>>>>>
75487>>>>>    Procedure Construct_Object
75489>>>>>        Forward Send Construct_Object
75491>>>>>        Set psCaption to C_$CaptionAutoArrangeIcons
75492>>>>>        Set psToolTip to C_$ToolTipAutoArrangeIcons
75493>>>>>        Set psDescription to C_$DescAutoArrangeIcons
75494>>>>>        Set psCategory to C_$CategoryWindow
75495>>>>>    End_Procedure
75496>>>>>
75496>>>>>    Procedure OnExecute Variant vCommandBarControl
75498>>>>>        Handle hoCommandBars hoClientArea
75498>>>>>        Get CommandBarSystemObject to hoCommandBars
75499>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
75500>>>>>        If hoClientArea Begin
75502>>>>>            // the clientarea's parent panel has message
75502>>>>>            Send Toggle_Auto_Arrange_Icons of (Parent(hoClientArea))
75503>>>>>        End
75503>>>>>>
75503>>>>>    End_Procedure
75504>>>>>    
75504>>>>>     Function IsChecked Returns Boolean
75506>>>>>        Boolean bOn
75506>>>>>        Handle hoCommandBars hoClientArea
75506>>>>>        Get CommandBarSystemObject to hoCommandBars
75507>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
75508>>>>>        If hoClientArea Begin
75510>>>>>            // the clientarea's parent panel has message
75510>>>>>            Get Auto_Arrange_Icons_State of (Parent(hoClientArea)) to bOn
75511>>>>>        End
75511>>>>>>
75511>>>>>        Function_Return bOn
75512>>>>>     End_Function
75513>>>>>End_Class
75514>>>>>
75514>>>>>Class cCJRestoreMenusMenuItem is a cCJMenuItem
75515>>>>>
75515>>>>>    Procedure Construct_Object
75517>>>>>        Forward Send Construct_Object
75519>>>>>        Set psCaption to C_$CaptionRestoreMenus
75520>>>>>        Set psToolTip to C_$ToolTipRestoreMenus
75521>>>>>        Set psDescription to C_$DescRestoreMenus
75522>>>>>        Set psCategory to C_$CategoryWindow
75523>>>>>    End_Procedure
75524>>>>>
75524>>>>>    Procedure OnExecute Variant vCommandBarControl
75526>>>>>        Handle hoCommandBars
75526>>>>>        Get CommandBarSystemObject to hoCommandBars
75527>>>>>        Send RestoreLayout of hoCommandBars
75528>>>>>    End_Procedure
75529>>>>>    
75529>>>>>End_Class
75530>>>>>
75530>>>>>Class cCJCascadeMenuItem is a cCJMenuItem
75531>>>>>
75531>>>>>    Procedure Construct_Object
75533>>>>>        Forward Send Construct_Object
75535>>>>>        Set psCaption to C_$CaptionCascade
75536>>>>>        Set psToolTip to C_$ToolTipCascade
75537>>>>>        Set psDescription to  C_$DescCascade
75538>>>>>        Set psImage to "ActionCascade.ico"
75539>>>>>        Set psCategory to C_$CategoryWindow
75540>>>>>    End_Procedure
75541>>>>>    
75541>>>>>    Procedure OnExecute Variant vCommandBarControl
75543>>>>>        Handle hoCommandBars hoClientArea
75543>>>>>        Get CommandBarSystemObject to hoCommandBars
75544>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
75545>>>>>        If hoClientArea Begin
75547>>>>>            Send Cascade_Windows of hoClientArea
75548>>>>>        End
75548>>>>>>
75548>>>>>    End_Procedure
75549>>>>>End_Class
75550>>>>>
75550>>>>>Class cCJTileHorizontally is a cCJMenuItem
75551>>>>>
75551>>>>>    Procedure Construct_Object
75553>>>>>        Forward Send Construct_Object
75555>>>>>        Set psCaption to C_$CaptionTileHorizontally 
75556>>>>>        Set psToolTip to C_$ToolTipTileHorizontally  
75557>>>>>        Set psDescription to  C_$DescTileHorizontally
75558>>>>>        Set psImage to "ActionTileHorizontally.ico"
75559>>>>>        Set psCategory to C_$CategoryWindow
75560>>>>>    End_Procedure
75561>>>>>
75561>>>>>    Procedure OnExecute Variant vCommandBarControl
75563>>>>>        Handle hoCommandBars hoClientArea
75563>>>>>        Get CommandBarSystemObject to hoCommandBars
75564>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
75565>>>>>        If hoClientArea Begin
75567>>>>>            Send Tile_Windows_Horizontal of hoClientArea
75568>>>>>        End
75568>>>>>>
75568>>>>>    End_Procedure
75569>>>>>End_Class
75570>>>>>
75570>>>>>Class cCJTileVertically is a cCJMenuItem
75571>>>>>
75571>>>>>    Procedure Construct_Object
75573>>>>>        Forward Send Construct_Object
75575>>>>>        Set psCaption to C_$CaptionTileVertically  
75576>>>>>        Set psToolTip to C_$ToolTipTileVertically
75577>>>>>        Set psDescription to  C_$DescTileVertically
75578>>>>>        Set psImage to "ActionTileVertically.ico"
75579>>>>>        Set psCategory to C_$CategoryWindow
75580>>>>>    End_Procedure
75581>>>>>
75581>>>>>    Procedure OnExecute Variant vCommandBarControl
75583>>>>>        Handle hoCommandBars hoClientArea
75583>>>>>        Get CommandBarSystemObject to hoCommandBars
75584>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
75585>>>>>        If hoClientArea Begin
75587>>>>>            Send Tile_Windows_Vertical of hoClientArea
75588>>>>>        End
75588>>>>>>
75588>>>>>    End_Procedure
75589>>>>>End_Class
75590>>>>>
75590>>>>>Class cCJMinimizeWindowsMenuItem is a cCJMenuItem
75591>>>>>
75591>>>>>    Procedure Construct_Object
75593>>>>>        Forward Send Construct_Object
75595>>>>>        Set psCaption to C_$CaptionMinimizeWindows 
75596>>>>>        Set psToolTip to C_$ToolTipMinimizeWindows
75597>>>>>        Set psDescription to  C_$DescMinimizeWindows
75598>>>>>        Set psCategory to C_$CategoryWindow
75599>>>>>    End_Procedure
75600>>>>>
75600>>>>>    Procedure OnExecute Variant vCommandBarControl
75602>>>>>        Handle hoCommandBars hoClientArea
75602>>>>>        Get CommandBarSystemObject to hoCommandBars
75603>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
75604>>>>>        If hoClientArea Begin
75606>>>>>            // the clientarea's parent panel has message
75606>>>>>            Send Minimize_all_Windows of (Parent(hoClientArea))
75607>>>>>        End
75607>>>>>>
75607>>>>>    End_Procedure
75608>>>>>End_Class
75609>>>>>
75609>>>>>
75609>>>>>Class cCJRestoreWindowsMenuItem is a cCJMenuItem
75610>>>>>
75610>>>>>    Procedure Construct_Object
75612>>>>>        Forward Send Construct_Object
75614>>>>>        Set psCaption to C_$CaptionRestoreWindows
75615>>>>>        Set psToolTip to C_$ToolTipRestoreWindows
75616>>>>>        Set psDescription to  C_$DescRestoreWindows
75617>>>>>        Set psCategory to C_$CategoryWindow
75618>>>>>    End_Procedure
75619>>>>>
75619>>>>>    Procedure OnExecute Variant vCommandBarControl
75621>>>>>        Handle hoCommandBars hoClientArea
75621>>>>>        Get CommandBarSystemObject to hoCommandBars
75622>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
75623>>>>>        If hoClientArea Begin
75625>>>>>            // the clientarea's parent panel has message
75625>>>>>            Send Restore_all_Windows of (Parent(hoClientArea))
75626>>>>>        End
75626>>>>>>
75626>>>>>    End_Procedure
75627>>>>>End_Class
75628>>>>>
75628>>>>>Class cCJArrangeIconsMenuItem is a cCJMenuItem
75629>>>>>
75629>>>>>    Procedure Construct_Object
75631>>>>>        Forward Send Construct_Object
75633>>>>>        Set psCaption to C_$CaptionArrangeIcons  
75634>>>>>        Set psToolTip to C_$ToolTipArrangeIcons
75635>>>>>        Set psDescription to  C_$DescArrangeIcons
75636>>>>>        Set psCategory to C_$CategoryWindow
75637>>>>>    End_Procedure
75638>>>>>
75638>>>>>    Procedure OnExecute Variant vCommandBarControl
75640>>>>>        Handle hoCommandBars hoClientArea
75640>>>>>        Get CommandBarSystemObject to hoCommandBars
75641>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
75642>>>>>        If hoClientArea Begin
75644>>>>>            Send Arrange_Icons of hoClientArea
75645>>>>>        End
75645>>>>>>
75645>>>>>    End_Procedure
75646>>>>>
75646>>>>>End_Class
75647>>>>>    
75647>>>Use cCJAboutMenuItem.pkg
Including file: cCJAboutMenuItem.pkg    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cCJAboutMenuItem.pkg)
75647>>>>>Use cCJCommandBarSystem.pkg
75647>>>>>Use LanguageText.pkg
75647>>>>>
75647>>>>>// It is expected that if you use this class that you provide an about object that is
75647>>>>>// activated via activate_about such as DfAbout.pkg. We don't use this for you automatically
75647>>>>>// because you may wish to create your own custom about package.
75647>>>>>
75647>>>>>Class cCJAboutMenuItem is a cCJMenuItem    
75648>>>>>
75648>>>>>    Procedure Construct_Object
75650>>>>>        Forward Send Construct_Object
75652>>>>>        Set psCaption to C_$CaptionAbout
75653>>>>>        Set psDescription to C_$ToolTipAbout
75654>>>>>        Set psToolTip to C_$DescAbout
75655>>>>>        Set psImage to "ActionAbout.ico"
75656>>>>>        Set psCategory to C_$CategoryHelp
75657>>>>>    End_Procedure
75658>>>>>    
75658>>>>>    Procedure OnExecute Variant vCommandBarControl
75660>>>>>        Handle hoCommandBars hoClientArea
75660>>>>>        Get CommandBarSystemObject to hoCommandBars
75661>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
75662>>>>>        If hoClientArea Begin
75664>>>>>            Send Activate_About of hoClientArea
75665>>>>>        End
75665>>>>>>
75665>>>>>    End_Procedure
75666>>>>>
75666>>>>>End_Class
75667>>>>>
75667>>>>>
75667>>>Use cCJDeoMenuItemClasses.pkg
75667>>>Use cCJMDIWindowsMenuItem.pkg
Including file: cCJMDIWindowsMenuItem.pkg    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cCJMDIWindowsMenuItem.pkg)
75667>>>>>Use cCJCommandBarSystem.pkg
75667>>>>>
75667>>>>>Register_Function Client_ID Returns Integer
75667>>>>>
75667>>>>>// only used by cCJMDIWIndowsMenuItem
75667>>>>>Class cCJMDIWindowItem is a cCJMenuItem
75668>>>>>
75668>>>>>    Procedure Construct_Object
75670>>>>>        Forward Send Construct_Object
75672>>>>>        Property Handle phWindow 0 // object id of view
75673>>>>>        Set pbControlFlagNoMovable to True
75674>>>>>        Set pbActiveUpdate to True
75675>>>>>    End_Procedure
75676>>>>>    
75676>>>>>    Procedure OnExecute Variant vCommandBarControl
75678>>>>>        Handle hWindow
75678>>>>>        Get phWindow to hWindow
75679>>>>>        Send Activate_View of hWindow
75680>>>>>    End_Procedure
75681>>>>>    
75681>>>>>End_Class                
75682>>>>>
75682>>>>>
75682>>>>>Class cCJMDIWindowsMenuItem is a cCJMenuItem
75683>>>>>    
75683>>>>>    Procedure Construct_Object
75685>>>>>        Forward Send Construct_Object
75687>>>>>        Property Handle[] phArrayOfWindows
75688>>>>>        Set peControlType to xtpControlPopup
75689>>>>>        Set psCategory to C_$CategoryWindow
75690>>>>>    End_Procedure
75691>>>>>    
75691>>>>>     // This adds MDI windows to the existing menu items.
75691>>>>>     // This removes any existing windows menus and always adds a new set to the end
75691>>>>>
75691>>>>>     Procedure OnPopupInit Variant vCommandBarControl Handle hCommandBarControls
75693>>>>>        Handle  hClientArea hView
75693>>>>>        String  sLabel
75693>>>>>        Integer i iWindows
75693>>>>>        Handle[] hArrayOfWindows
75694>>>>>        Variant vItem
75694>>>>>        
75694>>>>>        // delete all windows actions and menu items. Assume we have an array of DF action objects for the windows
75694>>>>>        // also assume that destroying an action removes all menu instances of that action
75694>>>>>        Get phArrayOfWindows to hArrayOfWindows
75695>>>>>        Move (SizeOfArray(hArrayOfWindows)) to iWindows
75696>>>>>        For i from 0 to (iWindows-1)
75702>>>>>>
75702>>>>>            Send Destroy of hArrayOfWindows[i] // assume this removes all menu items of this action
75703>>>>>        Loop
75704>>>>>>
75704>>>>>        Move (ResizeArray(hArrayOfWindows,0)) to hArrayOfWindows
75705>>>>>
75705>>>>>        // Add all views to this menu. Create the action and add the item
75705>>>>>        Move 0 to i
75706>>>>>        Get Client_Id to hClientArea // object id of client area
75707>>>>>        If (hClientArea > 0) Begin
75709>>>>>            Get Next_Mdi_Dialog of hClientArea True to hView // find first view
75710>>>>>            While (hView <> 0)
75714>>>>>                If (Active_State(hView)) Begin
75716>>>>>                    // create the action
75716>>>>>                    Get Create U_cCJMDIWindowItem to hArrayOfWindows[i]
75717>>>>>                    Get Label of hView to sLabel // caption bar (name) of view
75718>>>>>                    Set psCaption of hArrayOfWindows[i] to sLabel
75719>>>>>                    Set psDescription of hArrayOfWindows[i] to ("Make this view (" - trim(sLabel) - ") the active window.")
75720>>>>>                    If (current_scope(desktop)=hView and View_mode(hView)<>VIEWMODE_ICONIZE) Begin
75722>>>>>                        Set pbChecked of hArrayOfWindows[i] to True
75723>>>>>                    End
75723>>>>>>
75723>>>>>                    Set phWindow of hArrayOfWindows[i] to hView // used by custom OnExecute
75724>>>>>                    If (i=0) Begin
75726>>>>>                        Set pbControlBeginGroup of hArrayOfWindows[i] to True
75727>>>>>                    End
75727>>>>>>
75727>>>>>                    // Create a menu item for this action
75727>>>>>                    Get AddDynamicControl of hArrayOfWindows[i] hCommandBarControls to vItem
75728>>>>>                    Increment i
75729>>>>>                End
75729>>>>>>
75729>>>>>                Get Next_Mdi_Dialog of hClientArea False to hView // find next
75730>>>>>            Loop
75731>>>>>>
75731>>>>>        End
75731>>>>>>
75731>>>>>
75731>>>>>        Set phArrayOfWindows to hArrayOfWindows
75732>>>>>
75732>>>>>     End_Procedure
75733>>>>>     
75733>>>>>End_Class
75734>>>>>
75734>
Summary
Memory Available: 2147483646
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 43469
Total Resources: 0
Total Commands : 75733
Total Windows  : 1
Total Pages    : 1
Static Data    : 454729
Message area   : 521956
Total Blocks   : 27140
