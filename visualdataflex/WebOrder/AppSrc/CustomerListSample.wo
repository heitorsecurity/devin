Use cWebView.pkg
Use cWebPanel.pkg
Use cWebForm.pkg
Use cWebRadio.pkg
Use cWebCheckbox.pkg
Use cWebForm.pkg
Use cWebButton.pkg
Use cWebLabel.pkg
Use cWebGroup.pkg

// Note: This sample does not actually run a DataFlex Reports report. The .pdf file that would normally
// be generated by DataFlex Reports is a previously generated file, which was installed with DataFlex.

// If you have an installed version of DataFlex Reports compatible with this version of DataFlex, then
// you could comment out the code below to generate a live DataFlex Reports report.
Object oCustomerListSample is a cWebView
    Set piWidth to 700
    Set psCaption to "Customer List (DataFlex Reports)"

// If you are using DataFlex Reports, here is how you would actually
// initialize, run and save the report to a PDF file.

//    Use cDRReport.pkg // Move this line to the other USE statement lines above the cWebView component
//
//    Object oReport is a cDRReport
//        Procedure OnInitializeReport
//            Send SetFilters
//            Send SetSortFields
//        End_Procedure
//
//        Procedure SetFilters
//            Integer[] iCustomerCustomerNumbers
//            String[] sCustomerNames
//            String sReportId
//
//            Get psReportId to sReportId
//            Send RemoveAllFilters sReportId  // clear any previous filters
//
//            WebGet psValue of oFromCustomerCustomerNumber to iCustomerCustomerNumbers[0]
//            WebGet psValue of oToCustomerCustomerNumber to iCustomerCustomerNumbers[1]
//
//            Move (SortArray (iCustomerCustomerNumbers)) to iCustomerCustomerNumbers
//            If (iCustomerCustomerNumbers[0] <> 0) Begin
//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Customer_Number}" C_DRGreaterThanOrEqual iCustomerCustomerNumbers[0]
//            End
//            If (iCustomerCustomerNumbers[1] <> 0) Begin
//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Customer_Number}" C_DRLessThanOrEqual iCustomerCustomerNumbers[1]
//            End
//
//            WebGet psValue of oFromCustomerName to sCustomerNames[0]
//            WebGet psValue of oToCustomerName to sCustomerNames[1]
//
//            Move (Trim (sCustomerNames[0])) to sCustomerNames[0]
//            Move (Trim (sCustomerNames[1])) to sCustomerNames[1]
//            Move (SortArray (sCustomerNames)) to sCustomerNames
//
//            If (sCustomerNames[0] <> "") Begin
//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Name}" C_DRGreaterThanOrEqual sCustomerNames[0]
//            End
//            If (sCustomerNames[1] <> "") Begin
//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Name}" C_DRLessThanOrEqual sCustomerNames[1]
//            End
//        End_Procedure
//
//        Procedure SetSortFields
//            Integer iRadio
//            Boolean bAscending
//
//            WebGet psValue of oSortNumber to iRadio
//            Get GetChecked of oSortAscending to bAscending
//            
//            Send RemoveAllRecordSortFields C_USEMAINDRREPORTID
//            If (iRadio=0) Begin
//                Send AddRecordSortField C_USEMAINDRREPORTID "{Customer.Customer_Number}" (If(bAscending, C_drAscending, C_drDescending))
//            End
//            Else Begin
//                Send AddRecordSortField C_USEMAINDRREPORTID "{Customer.Name}" (If(bAscending, C_DRAscending, C_DRDescending))
//            End
//        End_Procedure
//
//        Function GenerateReport Returns String
//            String sReportId sPath
//            DRPDFExportOptions PDFReportOptions
//            Boolean bCanceled
//
//            Set psReportName to "CustomerList.dr"
//            Get OpenReport to sReportId
//
//            If (sReportId <> "") Begin
//                Get DefaultPDFExportOptions to PDFReportOptions
//                Move C_drHigh to PDFReportOptions.iImageQuality
//                Set pPDFExportOptions to PDFReportOptions
//
//                Get ReportCacheFileName '.pdf' to sPath
//
//                If (sPath <> "") Begin
//                    Send ExportReport C_DRPDF sPath
//
//                    // see if report ran ok, if not return empty path
//                    Get pbCanceled to bCanceled
//                    If (bCanceled) Begin
//                        Move "" to sPath
//                    End
//                End
//
//                Send CloseReport sReportId
//            End
//            
//            Function_Return sPath
//        End_Function
//    End_Object

// This is a dummy object that is used in place of the report PDF that would have been
// generated using DataFlex Reports. Note that this also shows you how to download a
// static file (could be any kind of file) from a secure non-web location. In this case,
// the dummy report is located in \Data, which is not a web path.

    Object oReport is a cObject
        Function GenerateReport Returns String
            String sPath

            Get GetReportsCache of ghoWebApp True to sPath
            If (sPath <> "") Begin
                Move (sPath + "\CustomerListSample.pdf") to sPath
            End
            Function_Return sPath
        End_Function
    End_Object

    Procedure RunReport
        String sFile sUrl

        // generate the report file and return its full file path name (not a URL)
        Get GenerateReport of oReport to sFile

        If (sFile="") Begin
            Send ShowInfoBox "The Report could not be generated"
        End
        Else Begin
            Get DownloadURL of ghoWebResourceManager sFile to sUrl

            // this is used to show a PDF file in a new browser tab or window
            // use btNewTab to open a new browser tab page
            // use btNewWindow to open a new browser window
            Send NavigateToPage sUrl btNewTab

            // this is used to show a PDF file in an embedded viewer within this view
            //WebSet psUrl of oWebIFrame1 to sUrl
        End
    End_Procedure

    Object oWebMainPanel is a cWebPanel
        Set piColumnCount to 10

        Object oCustomerCustomerNumberGroup is a cWebGroup
            Set piColumnSpan to 3
            Set psCaption to "Customer Number:"
            Set piColumnCount to 10

            Object oFromCustomerCustomerNumber is a cWebform
               Set psLabel to "From:"
               Set piLabelOffset to 50
               Set piColumnSpan to 0
            End_Object

            Object oToCustomerCustomerNumber is a cWebform
               Set psLabel to "To:"
               Set piLabelOffset to 50
               Set piColumnSpan to 0
            End_Object
        End_Object

        Object oWebLabel1 is a cWebLabel
            Set piColumnSpan to 0
            Set psCaption to "Note: This view simply displays a static file ('CustomerListSample.pdf'), so these settings do not really change the output."
            Set piColumnIndex to 3
        End_Object

        Object oCustomerCustoNameGroup is a cWebGroup
            Set psCaption to "Customer Name:"
            Set piColumnSpan to 5
            Set piColumnCount to 10

            Object oFromCustomerName is a cWebform
               Set psLabel to "From:"
               Set piLabelOffset to 50
               Set piColumnSpan to 0
            End_Object

            Object oToCustomerName is a cWebform
               Set psLabel to "To:"
               Set piLabelOffset to 50
               Set piColumnSpan to 0
            End_Object
        End_Object

        Object oSortOrderGroup is a cWebGroup
            Set psCaption to "Order By:"
            Set piColumnSpan to 5

            Object oSortNumber is a cWebRadio
               Set psCaption to "Customer Number"
               Set psGroupName to "Sort"
               Set psRadioValue to "0"
            End_Object

            Object oSortName is a cWebRadio
               Set psCaption to "Customer Name"
               Set psGroupName to "Sort"
               Set psRadioValue to "1"
            End_Object

            Object oSortAscending is a cWebCheckbox
               Set psCaption to "Ascending"
               Set psChecked to 1
               Set psUnChecked to 0
               Set psValue to 1
            End_Object
        End_Object

        Object oRunButton is a cWebButton
            Set psCaption to "Run Report"
            Set piColumnSpan to 3

            Procedure OnClick
                Send RunReport
            End_Procedure
        End_Object

// this would be used if you wanted to output to an embedded window
//        Object oWebIFrame1 is a cWebIFrame
//           Set pbFillHeight to True
//           Set pbShowBorder to True
//        End_Object

   End_Object
End_Object
