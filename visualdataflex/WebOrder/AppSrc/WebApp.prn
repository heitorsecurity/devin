Compiling Program: A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\WebApp.src
Memory Available: 2147483646
1>Use AllWebAppClasses.pkg
Using pre-compiled package ALLWEBAPPCLASSES.PKG
Including file: AllWebAppClasses.pkd    (C:\Program Files (x86)\DataFlex 18.2\Pkg\AllWebAppClasses.pkd)
28717>Use WebAppBase.pkg
28717>Use cWebMenuBar.pkg
28717>Use cWebToolbar.pkg
28717>Use cWebCommandbar.pkg
28717>Use cWebPanel.pkg
28717>Use cWebButton.pkg
28717>Use cWebMenuItem.pkg
28717>Use cWebMenuItemLoadView.pkg
28717>
28717>Object oApplication is a cApplication
28719>End_Object
28720>
28720>Object oWebApp is a cWebApp
28722>    Set psTheme to "Df_Flat_Desktop"
28723>//    Set peLoginMode to lmLoginNone
28723>
28723>// this will do a manual login
28723>//    Procedure OnLoad
28723>//        Boolean bOk
28723>//        Get UserLogin of ghoWebSessionManager "john" "John" to bOk
28723>//    End_Procedure
28723>
28723>    Object oCommandbar is a cWebCommandBar
28725>        
28725>        Object oMenuBar is a cWebMenuBar
28727>            Object oFileMenu is a cWebMenuItem
28729>                Set psCaption to "File"
28730>                
28730>                Object oClearMenuItem is a cWebMenuClear
28732>                End_Object  
28733>                             
28733>                Object oClearAllMenuItem is a cWebMenuClearAll
28735>                End_Object  
28736>                
28736>                Object oPromptMenuItem is a cWebMenuPrompt
28738>                    Set pbBeginGroup to True
28739>                End_Object  
28740>                               
28740>                Object oFindMenuItem is a cWebMenuFind
28742>                End_Object  
28743>
28743>                Object oNextMenuItem is a cWebMenuFindNext
28745>                End_Object  
28746>
28746>                Object oPreviousMenuItem is a cWebMenuFindPrevious
28748>                End_Object  
28749>                
28749>                Object oLastMenuItem is a cWebMenuFindLast
28751>                End_Object                
28752>                                
28752>                Object oFirstMenuItem is a cWebMenuFindFirst
28754>                End_Object  
28755>                
28755>                Object oSaveMenuItem is a cWebMenuSave
28757>                    Set pbBeginGroup to True
28758>                End_Object  
28759>                
28759>                Object oDeleteMenuItem is a cWebMenuDelete
28761>                End_Object  
28762>                
28762>                Object oLoginMenuItem is a cWebMenuItem
28764>                    Set psCaption to "Log In"
28765>                    Set pbBeginGroup to True
28766>                    Set psCSSClass to "WebLoginMenuItem"
28767>
28767>                    Procedure OnClick
28770>                        Send RequestLogin to ghoWebSessionManager
28771>                    End_Procedure
28772>                    
28772>                    Procedure OnLoad
28775>                        Integer eLoginMode
28775>                        Handle hoLogin
28775>                        Get GetLoginView to hoLogin
28776>                        Get peLoginMode to eLoginMode
28777>                        WebSet pbRender to  (hoLogin and eLoginMode<>lmLoginNone)
28778>                    End_Procedure  // OnLoad
28779>                    
28779>                End_Object  
28780>
28780>                Object oLogoutMenuItem is a cWebMenuItem
28782>                    Set psCaption to "Log Out"
28783>                    Set psCSSClass to "WebLogoutMenuItem"
28784>
28784>                    Procedure OnClick
28787>                        Send RequestLogOut of ghoWebSessionManager
28788>                    End_Procedure
28789>
28789>                    Procedure OnLoad
28792>                        Integer eLoginMode
28792>                        Handle hoLogin
28792>                        Get GetLoginView to hoLogin
28793>                        Get peLoginMode to eLoginMode
28794>                        WebSet pbRender to  (hoLogin and eLoginMode<>lmLoginNone)
28795>                    End_Procedure  // OnLoad
28796>                End_Object  
28797>            End_Object  
28798>    
28798>            Object oViewMenu is a cWebMenuItem
28800>                Set psCaption to "Views"
28801>                
28801>                Object oCustomerMaintenanceMenuItem is a cWebMenuItemLoadView
28803>                    Set psCaption to "Customer Maintenance"
28804>                    Set psLoadViewOnClick to "oCustomer" 
28805>                End_Object
28806>
28806>                Object oOrderEntryMenuItem is a cWebMenuItemLoadView
28808>                    Set psCaption to "Order Entry"
28809>                    Set psLoadViewOnClick to "oOrder"
28810>                End_Object
28811>
28811>                Object oInventoryMaintenanceMenuItem is a cWebMenuItemLoadView
28813>                    Set psCaption to "Inventory Maintenance"
28814>                    Set psLoadViewOnClick to "oInventory"
28815>                End_Object
28816>
28816>                Object oVendorMaintenanceMenuItem is a cWebMenuItemLoadView
28818>                    Set psCaption to "Vendor Maintenance"
28819>                    Set psLoadViewOnClick to "oVendor"
28820>                End_Object
28821>
28821>                Object oSalesPersonMaintenanceMenuItem is a cWebMenuItemLoadView
28823>                    Set psCaption to "Sales Person Maintenance"
28824>                    Set psLoadViewOnClick to "oSalesPerson"
28825>                End_Object
28826>            End_Object
28827>            
28827>            Object oReportMenu is a cWebMenuItem
28829>                Set psCaption to "Reports"
28830>                
28830>                    
28830>                Object oCustomerListMenuItem is a cWebMenuItemLoadView
28832>                    Set psCaption to "Customer List"
28833>                    Set psLoadViewOnClick to "oCustomerListSample"
28834>                End_Object
28835>
28835>                Object oOrderListMenuItem is a cWebMenuItemLoadView
28837>                    Set psCaption to "Order List"
28838>                    Set psLoadViewOnClick to "oOrderListSample"
28839>                End_Object
28840>
28840>                Object oCustomerOrdersMenuItem is a cWebMenuItemLoadView
28842>                    Set psCaption to "Customer Orders"
28843>                    Set psLoadViewOnClick to "oCustomerOrdersSample"
28844>                End_Object  
28845>
28845>                Object oVRW_LiveMenuItem is a cWebMenuItem
28847>                    Set psCaption to "DataFlex Report Writer (Live)"
28848>                    Set pbBeginGroup to True
28849>                    Set psToolTip to "Opens a URL to a DataFlex Report Writer live demonstration."
28850>
28850>                    Procedure OnClick
28853>                        Forward Send OnClick 
28855>                        Send NavigateToPage "http://www.dataaccess.com/livevisualreportwriter" btNewTab
28856>                    End_Procedure
28857>                End_Object
28858>
28858>                Object oDAI_LiveMenuItem is a cWebMenuItem
28860>                    Set psCaption to "Dynamic AI (Live)"
28861>                    Set psToolTip to "Opens a URL to a Dynamic AI live demonstration."
28862>
28862>                    Procedure OnClick
28865>                        Forward Send OnClick
28867>                        Send NavigateToPage "http://www.dataaccess.com/livedynamicai" btNewTab
28868>                    End_Procedure
28869>                End_Object
28870>                
28870>            End_Object
28871>                
28871>            Object oDemoMenu is a cWebMenuItem
28873>                Set psCaption to "Demo"
28874>
28874>                Object oCardsMenuItem is a cWebMenuItemLoadView
28876>                    Set psCaption to "Cards"
28877>                    Set psLoadViewOnClick to "oDemoCards"
28878>                End_Object
28879>
28879>                Object oDemoColumnTypesMenuItem1 is a cWebMenuItemLoadView
28881>                    Set psCaption to "Column Types"
28882>                    Set psLoadViewOnClick to "oDemoColumnTypes"
28883>                End_Object
28884>
28884>                Object oConstrainedGridMenuItem is a cWebMenuItemLoadView
28886>                    Set psCaption to "Constrained Grid"
28887>                    Set psLoadViewOnClick to "oDemoConstrainedGrid"
28888>                End_Object
28889>
28889>                Object oDialogsMenuItem is a cWebMenuItemLoadView
28891>                    Set psCaption to "Dialogs"
28892>                    Set psLoadViewOnClick to "oDemoDialogs"
28893>                End_Object
28894>                
28894>                Object oDemoFileUploadMenuItem is a cWebMenuItemLoadView
28896>                    Set psCaption to "File Upload"
28897>                    Set psLoadViewOnClick to "oDemoFileUpload"
28898>                End_Object
28899>                
28899>                Object oManualDataAwareGridMenuItem is a cWebMenuItemLoadView
28901>                    Set psCaption to "Manual Data Aware Grid"
28902>                    Set psLoadViewOnClick to "oDemoManualDataAwareGrid"
28903>                End_Object
28904>
28904>                Object oManualGridMenuItem is a cWebMenuItemLoadView
28906>                    Set psCaption to "Manual Grid"
28907>                    Set psLoadViewOnClick to "oDemoManualGrid"
28908>                End_Object
28909>
28909>                Object oMultiDDOStructureMenuItem is a cWebMenuItemLoadView
28911>                    Set psCaption to "Multi DDO Structure"
28912>                    Set psLoadViewOnClick to "oDemoMultiDDOStructure"
28913>                End_Object
28914>
28914>                Object oPanelsMenuItem is a cWebMenuItemLoadView
28916>                    Set psCaption to "Panels + Allow Access"
28917>                    Set psLoadViewOnClick to "oDemoPanels"
28918>                End_Object
28919>
28919>                Object oSlidersMenuItem is a cWebMenuItemLoadView
28921>                    Set psCaption to "Sliders"
28922>                    Set psLoadViewOnClick to "oDemoSliders"
28923>                End_Object
28924>
28924>                Object oSubMenuItem is a cWebMenuItem
28926>                    Set psCaption to "Submenu"
28927>
28927>                    Object oSameWindowMenuItem is a cWebMenuItem
28929>                        Set psCaption to "Order.html (Same window)" 
28930>                        Set psImage to "Images/Order.png"
28931>                        
28931>                        Procedure OnClick
28934>                            Send NavigateToPage "Order.html" btCurrentWindow
28935>                        End_Procedure
28936>                    End_Object
28937>                    
28937>                    
28937>                    Object oSameNewTabMenuItem is a cWebMenuItem
28939>                        Set psCaption to "Order.html (New tab)" 
28940>                        Set psImage to "Images/Order.png"
28941>                        
28941>                        Procedure OnClick
28944>                            Send NavigateToPage "Order.html" btNewTab
28945>                        End_Procedure
28946>                    End_Object
28947>                    
28947>                    Object oSameNewWindowMenuItem is a cWebMenuItem
28949>                        Set psCaption to "Order.html (New window)" 
28950>                        Set psImage to "Images/Order.png"
28951>                        
28951>                        Procedure OnClick
28954>                            Send NavigateNewWindow "Order.html" 800 600
28955>                        End_Procedure
28956>                    End_Object
28957>            
28957>                    Object oGoogleSameWindowMenuItem is a cWebMenuItem
28959>                        Set psCaption to "Google.com (Same window)" 
28960>                        
28960>                        Procedure OnClick
28963>                            Send NavigateToPage "http://www.google.com/" btCurrentWindow
28964>                        End_Procedure
28965>                    End_Object
28966>                End_Object
28967>                
28967>                Object oSuggestionFormMenuItem is a cWebMenuItemLoadView
28969>                    Set psCaption to "Suggestion Form"
28970>                    Set psLoadViewOnClick to "oDemoSuggestionForm"
28971>                End_Object
28972>
28972>                Object oTreeViewOnSyncViewMenuItem is a cWebMenuItemLoadView
28974>                    Set psCaption to "TreeView + OnSyncView"
28975>                    Set psLoadViewOnClick to "oDemoTreeView"
28976>                End_Object
28977>
28977>                Object oConfigurationPanelMenuItem1 is a cWebMenuItemLoadView
28979>                    Set psCaption to "TreeView + Cards"
28980>                    Set psLoadViewOnClick to "oDemoTreeViewCards"
28981>                End_Object
28982>
28982>            End_Object              
28983>            
28983>            Object oThemesMenu is a cWebMenuItem
28985>                Set psCaption to "Themes"
28986>
28986>                Object oModernSky is a cWebMenuItem
28988>                    Set psCaption to "Modern Sky"
28989>                    
28989>                    Procedure OnClick 
28992>                        //  Change the theme at runtime
28992>                        WebSet psTheme of oWebApp to "Df_Modern_Sky"
28993>                        
28993>                        //  Update menu
28993>                        Send UpdateSelectedTheme
28994>                    End_Procedure
28995>                End_Object
28996>                                    
28996>                Object oWindowsLike is a cWebMenuItem
28998>                    Set psCaption to "Windows Like"
28999>                    
28999>                    Procedure OnClick 
29002>                        //  Change the theme at runtime
29002>                        WebSet psTheme of oWebApp to "Df_Windows_Like"
29003>                        
29003>                        //  Update menu
29003>                        Send UpdateSelectedTheme
29004>                    End_Procedure
29005>                End_Object
29006>                                                
29006>                Object oHighContrast is a cWebMenuItem
29008>                    Set psCaption to "High Contrast"
29009>                    
29009>                    Procedure OnClick 
29012>                        //  Change the theme at runtime
29012>                        WebSet psTheme of oWebApp to "Df_High_Contrast"
29013>                        
29013>                        //  Update menu
29013>                        Send UpdateSelectedTheme
29014>                    End_Procedure
29015>                End_Object
29016>                
29016>                Object oWebCremeItem is a cWebMenuItem
29018>                    Set psCaption to "Web Creme"
29019>                    Set pbEnabled to False
29020>                    
29020>                    Procedure OnClick
29023>                        //   Change the theme at runtime
29023>                        WebSet psTheme of oWebApp to "Df_Web_DataAccess"
29024>                        
29024>                        //  Update menu
29024>                        Send UpdateSelectedTheme
29025>                    End_Procedure
29026>                End_Object
29027>                
29027>                Object oFlatTouchItem is a cWebMenuItem
29029>                    Set psCaption to "Flat Touch"
29030>                    Set pbEnabled to False
29031>                    
29031>                    Procedure OnClick
29034>                        //   Change the theme at runtime
29034>                        WebSet psTheme of oWebApp to "Df_Flat_Touch"
29035>                        
29035>                        //  Update menu
29035>                        Send UpdateSelectedTheme
29036>                    End_Procedure
29037>                End_Object
29038>                
29038>                Object oFlatDesktopItem is a cWebMenuItem
29040>                    Set psCaption to "Flat Desktop"
29041>                    Set pbEnabled to False
29042>                    
29042>                    Procedure OnClick
29045>                        //   Change the theme at runtime
29045>                        WebSet psTheme of oWebApp to "Df_Flat_Desktop"
29046>                        
29046>                        //  Update menu
29046>                        Send UpdateSelectedTheme
29047>                    End_Procedure
29048>                End_Object
29049>                
29049>                Procedure UpdateSelectedTheme
29052>                    String sTheme
29052>                    
29052>                    //  Determine theme
29052>                    WebGet psTheme of oWebApp to sTheme
29053>
29053>                    //  Set enabled state
29053>                    WebSet pbEnabled of (oModernSky)        to (sTheme <> "Df_Modern_Sky")
29054>                    WebSet pbEnabled of (oWindowsLike)      to (sTheme <> "Df_Windows_Like")
29055>                    WebSet pbEnabled of (oHighContrast)     to (sTheme <> "Df_High_Contrast")
29056>                    WebSet pbEnabled of (oWebCremeItem)     to (sTheme <> "Df_Web_Creme")
29057>                    WebSet pbEnabled of (oFlatTouchItem)    to (sTheme <> "Df_Flat_Touch")
29058>                    WebSet pbEnabled of (oFlatDesktopItem)  to (sTheme <> "Df_Flat_Desktop")
29059>                End_Procedure
29060>                
29060>                Procedure OnLoad
29063>                    Send UpdateSelectedTheme
29064>                End_Procedure
29065>            End_Object
29066>            
29066>            
29066>            Object oRememberItems is a cWebMenuItem
29068>                Set psCaption to C_$Remember
29069>                
29069>                Object oRememberMenuItem is a cWebMenuItem
29071>                    Set psCaption to C_$CaptionRememberField
29072>                    
29072>                    Procedure OnClick
29075>                        Handle hoFocus
29075>                        Get DEOControlFocusObject to hoFocus
29076>                        If hoFocus Begin
29078>                            Send DDFieldRemember of hoFocus
29079>                        End
29079>                    End_Procedure
29080>                End_Object
29081>                
29081>                Object oRememberLastMenuItem is a cWebMenuItem
29083>                    Set psCaption to C_$CaptionRememberFieldLastValue
29084>                    
29084>                    Procedure OnClick
29087>                        Handle hoFocus
29087>                        Get DEOControlFocusObject to hoFocus
29088>                        If hoFocus Begin
29090>                            Send DDFieldRememberLast of hoFocus
29091>                        End
29091>                    End_Procedure
29092>                End_Object
29093>                
29093>                Object oUnRememberMenuItem is a cWebMenuItem
29095>                    Set psCaption to C_$CaptionUnRememberField
29096>                    
29096>                    Procedure OnClick
29099>                        Handle hoFocus
29099>                        Get DEOControlFocusObject to hoFocus
29100>                        If hoFocus Begin
29102>                            Send DDFieldUnRemember of hoFocus
29103>                        End
29103>                    End_Procedure
29104>                End_Object
29105>                
29105>                Object oRememberAllMenuItem is a cWebMenuItem
29107>                    Set psCaption to C_$CaptionClearAllAssignedDefaults
29108>                    
29108>                    Procedure OnClick
29111>                        Handle hoFocus hoDDO
29111>                        Get DEOControlFocusObject to hoFocus
29112>                        If hoFocus Begin
29114>                            Get Server of hoFocus to hoDDO
29115>                            If hoDDO Begin
29117>                                Send ClearAllRememberedDefaults of hoDDO
29118>                            End
29118>                        End
29118>                    End_Procedure
29119>                End_Object
29120>    
29120>            End_Object
29121>            
29121>        End_Object  
29122>        
29122>        Object oFindToolBar is a cWebToolBar
29124>            Object oFirstMenuItem is a cWebMenuFindFirst
29126>            End_Object  
29127>    
29127>            Object oPreviousMenuItem is a cWebMenuFindPrevious
29129>            End_Object  
29130>
29130>            Object oFindMenuItem is a cWebMenuFind
29132>            End_Object  
29133>
29133>            Object oNextMenuItem is a cWebMenuFindNext
29135>            End_Object  
29136>            
29136>            Object oLastMenuItem is a cWebMenuFindLast
29138>            End_Object
29139>                           
29139>            Object oPromptMenuItem is a cWebMenuPrompt
29141>            End_Object 
29142>        End_Object
29143>        
29143>        Object oFileToolBar is a cWebToolBar
29145>             Set pbShowCaption to True
29146>            
29146>            Object oClearMenuItem is a cWebMenuClear
29148>            End_Object              
29149>             
29149>            Object oClearAllMenuItem is a cWebMenuClearAll
29151>            End_Object   
29152>                        
29152>            Object oSaveMenuItem is a cWebMenuSave
29154>            End_Object  
29155>            
29155>            Object oDeleteMenuItem is a cWebMenuDelete
29157>            End_Object 
29158>        End_Object
29159>    End_Object
29160>
29160>
29160>    Use SessionManager.wo
Including file: SessionManager.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\SessionManager.wo)
29160>>>Use cWebSessionManagerStandard.pkg
Including file: cWebSessionManagerStandard.pkg    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cWebSessionManagerStandard.pkg)
29160>>>>>Use cWebSessionManager.pkg
29160>>>>>Use cWebAppSessionDataDictionary.dd
Including file: cWebAppSessionDataDictionary.dd    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cWebAppSessionDataDictionary.dd)
29160>>>>>>>Use DataDict.pkg
29160>>>>>>>
29160>>>>>>>Open WebAppSession
Including file: WebAppSession.fd    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\WebAppSession.fd)
29162>>>>>>>Open WebAppUser
Including file: WebAppUser.fd    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\WebAppUser.fd)
29164>>>>>>>
29164>>>>>>>Class cWebAppSessionDataDictionary is a DataDictionary
29165>>>>>>>    
29165>>>>>>>    Procedure Construct_Object
29167>>>>>>>        Forward Send Construct_Object
29169>>>>>>>        Set Main_File to WebAppSession.File_Number
29170>>>>>>>
29170>>>>>>>        Set Add_Server_File to WebAppUser.File_Number
29171>>>>>>>
29171>>>>>>>        Set ParentNullAllowed WebAppUser.File_Number to True
29172>>>>>>>
29172>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
29173>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
29174>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
29175>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
29176>>>>>>>
29176>>>>>>>        Set Field_Option Field WebAppSession.Active DD_RETAIN to True
29177>>>>>>>        Set Field_Checkbox_Values Field WebAppSession.Active to "Y" "N"
29178>>>>>>>        Set Field_Error Field WebAppSession.Active to 500 "Invalid WebAppSession Active State"
29179>>>>>>>
29179>>>>>>>    End_Procedure
29180>>>>>>>
29180>>>>>>>    Procedure Creating
29182>>>>>>>        DateTime dtCurrentDateTime
29182>>>>>>>        
29182>>>>>>>        Forward Send Creating
29184>>>>>>>        
29184>>>>>>>        //  Init usecounter
29184>>>>>>>        Move 0 to WebAppSession.UseCount
29185>>>>>>>        
29185>>>>>>>        //  Set the creation and access time to the current time
29185>>>>>>>        Move (CurrentDateTime()) to dtCurrentDateTime
29186>>>>>>>    
29186>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.CreateTime
29187>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.LastAccessTime
29188>>>>>>>        
29188>>>>>>>        Move dtCurrentDateTime to WebAppSession.CreateDate
29189>>>>>>>        Move dtCurrentDateTime to WebAppSession.LastAccessDate
29190>>>>>>>    End_Procedure
29191>>>>>>>    
29191>>>>>>>    
29191>>>>>>>    
29191>>>>>>>    //
29191>>>>>>>    //  Converts the given time to an string that can be saved in the database.
29191>>>>>>>    //
29191>>>>>>>    //  Params:
29191>>>>>>>    //      dtTime  Time to convert
29191>>>>>>>    //  Returns:
29191>>>>>>>    //      String with "HH:MM:SS" format
29191>>>>>>>    //
29191>>>>>>>    Function TimeToString DateTime dtTime Returns String
29193>>>>>>>        String sHours sMinutes sSeconds
29193>>>>>>>        
29193>>>>>>>        //  Extract parts
29193>>>>>>>        Move (String(DateGetHour(dtTime))) to sHours
29194>>>>>>>        Move (String(DateGetMinute(dtTime))) to sMinutes
29195>>>>>>>        Move (String(DateGetSecond(dtTime))) to sSeconds
29196>>>>>>>        
29196>>>>>>>        //  Fill out with 0
29196>>>>>>>        If (Length(sHours) = 1) Move ("0" + sHours) to sHours
29199>>>>>>>        If (Length(sMinutes) = 1) Move ("0" + sMinutes) to sMinutes
29202>>>>>>>        If (Length(sSeconds) = 1) Move ("0" + sSeconds) to sSeconds
29205>>>>>>>        
29205>>>>>>>        Function_Return (sHours + ":" + sMinutes + ":" + sSeconds)
29206>>>>>>>    End_Function
29207>>>>>>>    
29207>>>>>>>    //
29207>>>>>>>    //  Sets the time of the datetime variable to the time in the string.
29207>>>>>>>    //
29207>>>>>>>    //  Params:
29207>>>>>>>    //      dtTime  Datetime variable to add time to
29207>>>>>>>    //      sTimeString String with time in the format "HH:MM:SS"
29207>>>>>>>    //  Returns:
29207>>>>>>>    //      dtDateTime with the loaded time
29207>>>>>>>    //
29207>>>>>>>    Function StringToTime DateTime dtTime String sTimeString Returns DateTime
29209>>>>>>>        String sHours sMinutes sSeconds
29209>>>>>>>        
29209>>>>>>>        //  Extract parts
29209>>>>>>>        Move (Mid(sTimeString, 2, 1)) to sHours
29210>>>>>>>        Move (Mid(sTimeString, 2, 4)) to sMinutes
29211>>>>>>>        Move (Mid(sTimeString, 2, 7)) to sSeconds
29212>>>>>>>        
29212>>>>>>>        //  Set to DateTime
29212>>>>>>>        Move (DateSetHour(dtTime, (Integer(sHours)))) to dtTime
29213>>>>>>>        Move (DateSetMinute(dtTime, (Integer(sMinutes)))) to dtTime
29214>>>>>>>        Move (DateSetSecond(dtTime, (Integer(sSeconds)))) to dtTime
29215>>>>>>>        
29215>>>>>>>        Function_Return dtTime
29216>>>>>>>    End_Function
29217>>>>>>>
29217>>>>>>>End_Class
29218>>>>>Use cWebAppUserDataDictionary.dd
Including file: cWebAppUserDataDictionary.dd    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cWebAppUserDataDictionary.dd)
29218>>>>>>>Use DataDict.pkg
29218>>>>>>>Open WebAppUser
29220>>>>>>>Open WebAppSession
29222>>>>>>>
29222>>>>>>>Class cWebAppUserDataDictionary is a DataDictionary
29223>>>>>>>    
29223>>>>>>>    Procedure Construct_Object
29225>>>>>>>        Forward Send Construct_Object
29227>>>>>>>        Set Main_File to WebAppUser.File_Number
29228>>>>>>>
29228>>>>>>>        Set Add_Client_File to WebAppSession.File_Number
29229>>>>>>>
29229>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
29230>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
29231>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
29232>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
29233>>>>>>>    End_Procedure
29234>>>>>>>
29234>>>>>>>End_Class
29235>>>>>
29235>>>>>Class cWebSessionManagerStandard is a cWebSessionManager
29236>>>>>    
29236>>>>>    Procedure Construct_Object
29238>>>>>        Handle hoUserDD hoSessionDD
29238>>>>>        
29238>>>>>        Forward Send Construct_Object
29240>>>>>        
29240>>>>>        Property Handle phoUserDD 0      // Handle to the WebAppUser DDO
29241>>>>>        Property Handle phoSessionDD 0   // Handle to the WebAppSession DDO        
29242>>>>>        
29242>>>>>        Get Create (RefClass(cWebAppUserDataDictionary)) to hoUserDD
29243>>>>>        Get Create (RefClass(cWebAppSessionDataDictionary)) to hoSessionDD
29244>>>>>        Set DDO_Server of hoSessionDD to hoUserDD
29245>>>>>
29245>>>>>        Set phoUserDD to hoUserDD
29246>>>>>        Set phoSessionDD to hoSessionDD
29247>>>>>        Property Boolean pbCreatingNewSession False
29248>>>>>        Property Integer piSessionTimeout 480        
29249>>>>>        Property String psLoginName
29250>>>>>        Property String psUserName ""
29251>>>>>        Property Integer piUserRights 0
29252>>>>>    End_Procedure
29253>>>>>    
29253>>>>>    Function CreateSession String sRemoteAddress Returns String
29255>>>>>        String sSessionKey
29255>>>>>        Integer iErr
29255>>>>>        Boolean bLogWebSession
29255>>>>>        Handle hoSessionDD       
29255>>>>>        Get phoSessionDD to hoSessionDD
29256>>>>>        
29256>>>>>        //  Get session key
29256>>>>>        Forward Get CreateSession sRemoteAddress to sSessionKey
29258>>>>>        
29258>>>>>        Get pbLogWebSession to bLogWebSession
29259>>>>>        If not bLogWebSession Begin
29261>>>>>            Function_Return sSessionKey        
29262>>>>>        End
29262>>>>>>
29262>>>>>
29262>>>>>        //  Store session
29262>>>>>        Send Clear of hoSessionDD
29263>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.SessionKey to sSessionKey
29264>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.RemoteAddress to sRemoteAddress
29265>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "Y"
29266>>>>>        Get Request_Validate of hoSessionDD to iErr
29267>>>>>        If (iErr) Begin
29269>>>>>            // this should not happen. If it does its a programming error
29269>>>>>            Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
29270>>>>>>
29270>>>>>            Function_Return ""
29271>>>>>        End
29271>>>>>>
29271>>>>>        Send Request_Save of hoSessionDD
29272>>>>>       
29272>>>>>        Function_Return sSessionKey        
29273>>>>>    End_Function
29274>>>>>    
29274>>>>>    
29274>>>>>    Function ValidateSession String sSessionKey Returns Boolean
29276>>>>>        DateTime dtLastAccess dtCurrent
29276>>>>>        TimeSpan tsDiff
29276>>>>>        Integer iErr iSessionTimeout iSpanMinutes
29276>>>>>        Boolean bResult bCreatingNewSession
29276>>>>>        Boolean bLogWebSession 
29276>>>>>        Integer eLoginMode
29276>>>>>        String sTime
29276>>>>>        Handle hoSessionDD hoUserDD       
29276>>>>>        
29276>>>>>        Get phoSessionDD to hoSessionDD
29277>>>>>        Get phoUserDD to hoUserDD
29278>>>>>        
29278>>>>>        Get pbLogWebSession to bLogWebSession
29279>>>>>        Get peLoginMode to eLoginMode
29280>>>>>        
29280>>>>>        // for this object, you can only disable logging if login completely is disabled
29280>>>>>        If (not(bLogWebSession) and (eLoginMode<>lmLoginNone)) Begin
29282>>>>>            Error DFERR_PROGRAM C_$WebSessionLoggingMustBeEnabled
29283>>>>>>
29283>>>>>            Function_Return False
29284>>>>>        End
29284>>>>>>
29284>>>>>
29284>>>>>        //  Clear session properties
29284>>>>>        Send UpdateSessionProperties True
29285>>>>>        
29285>>>>>        If not bLogWebSession Begin
29287>>>>>            Forward Get ValidateSession sSessionKey to bResult
29289>>>>>            Function_Return bResult
29290>>>>>        End        
29290>>>>>>
29290>>>>>        
29290>>>>>        Move False to bResult
29291>>>>>        Get piSessionTimeout to iSessionTimeout 
29292>>>>>        
29292>>>>>        //  Check if session exists
29292>>>>>        Send Clear of hoSessionDD
29293>>>>>        Move sSessionKey to WebAppSession.SessionKey
29294>>>>>        Send Find of hoSessionDD EQ Index.1
29295>>>>>            
29295>>>>>        If (Found) Begin
29297>>>>>            //  Calculate timespan between now and last access time
29297>>>>>            Move (CurrentDateTime()) to dtCurrent
29298>>>>>            Move WebAppSession.LastAccessDate to dtLastAccess
29299>>>>>            Get StringToTime of hoSessionDD dtLastAccess WebAppSession.LastAccessTime to dtLastAccess
29300>>>>>            Move (dtCurrent - dtLastAccess) to tsDiff
29301>>>>>            Move (SpanTotalMinutes(tsDiff)) to iSpanMinutes
29302>>>>>            
29302>>>>>            //  Check if session didn't time out
29302>>>>>            If ((iSessionTimeout <= 0 or (iSpanMinutes < iSessionTimeout)) and WebAppSession.Active = "Y") Begin
29304>>>>>                Forward Get ValidateSession sSessionKey to bResult
29306>>>>>                   
29306>>>>>                If (bResult) Begin
29308>>>>>                    //  Update session record
29308>>>>>                    Get TimeToString of hoSessionDD dtCurrent to sTime 
29309>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessDate to dtCurrent
29310>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessTime to sTime
29311>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.UseCount to (WebAppSession.UseCount + 1)
29312>>>>>                    Get Request_Validate of hoSessionDD to iErr
29313>>>>>                    If (iErr) Begin
29315>>>>>                        // this should not happen. If it does its a programming error
29315>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
29316>>>>>>
29316>>>>>                        Function_Return False
29317>>>>>                    End
29317>>>>>>
29317>>>>>                    Send Request_Save of hoSessionDD
29318>>>>>                    
29318>>>>>                    //  Update user properties
29318>>>>>                    Send UpdateSessionProperties False
29319>>>>>                End
29319>>>>>>
29319>>>>>            End
29319>>>>>>
29319>>>>>            Else Begin
29320>>>>>                // Test the Creating New Session Flag to protect against infinite recursion....
29320>>>>>                Get pbCreatingNewSession to bCreatingNewSession
29321>>>>>                
29321>>>>>                If (not(bCreatingNewSession)) Begin
29323>>>>>                    Set pbCreatingNewSession to True                    
29324>>>>>                    Send RecreateSession to ghoWebApp
29325>>>>>                    Error DFERR_WEBAPP_SESSION_TIMEOUT "Your application session has timed out or is inactive, please login again."
29326>>>>>>
29326>>>>>                    Send NavigateRefresh of ghoWebApp          // refresh the WebApp at the client (triggers a login)
29327>>>>>                    Set pbCreatingNewSession to False
29328>>>>>                End
29328>>>>>>
29328>>>>>            End
29328>>>>>>
29328>>>>>        End
29328>>>>>>
29328>>>>>        Else Begin
29329>>>>>            Error DFERR_WEBAPP_BAD_SESSION_KEY "Session key not known (reload page to recreate session)"
29330>>>>>>
29330>>>>>        End
29330>>>>>>
29330>>>>>        
29330>>>>>        Function_Return bResult
29331>>>>>    End_Function
29332>>>>>    
29332>>>>>    Function UserLogin String sLoginName String sPassword Returns Boolean
29334>>>>>        String sSessionKey sUserPassword
29334>>>>>        Handle hoSessionDD hoUserDD
29334>>>>>        Boolean bMatch  
29334>>>>>        
29334>>>>>        Get phoSessionDD to hoSessionDD
29335>>>>>        Get phoUserDD to hoUserDD
29336>>>>>        Integer iErr eLoginMode
29336>>>>>        
29336>>>>>        // Refind session record
29336>>>>>        Get psSessionKey to sSessionKey
29337>>>>>        Send Clear of hoSessionDD
29338>>>>>        Move sSessionKey to WebAppSession.SessionKey
29339>>>>>        Send Find of hoSessionDD EQ Index.1
29340>>>>>        
29340>>>>>        If (Found and WebAppSession.SessionKey = sSessionKey) Begin
29342>>>>>            Get peLoginMode to eLoginMode
29343>>>>>            
29343>>>>>            //  Find the user
29343>>>>>            Move sLoginName to WebAppUser.LoginName
29344>>>>>            Send Find of hoUserDD EQ Index.1
29345>>>>>            
29345>>>>>            // Check username and password
29345>>>>>            If (Found and (Lowercase(sLoginName) = Lowercase(Trim(WebAppUser.LoginName)))) Begin
29347>>>>>                Get Field_Current_Value of hoUserDD Field WebAppUser.Password to sUserPassword
29348>>>>>                Get ComparePasswords (Trim(sUserPassword)) (Trim(sPassword)) to bMatch
29349>>>>>                
29349>>>>>                If (bMatch) Begin
29351>>>>>                    // Store the login
29351>>>>>                    Set Field_Changed_Value of hoUserDD Field WebAppUser.LastLogin to (CurrentDateTime())
29352>>>>>                    Get Request_Validate of hoSessionDD to iErr
29353>>>>>                    If (iErr) Begin
29355>>>>>                        // this should not happen. If it does its a programming error
29355>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
29356>>>>>>
29356>>>>>                        Function_Return False
29357>>>>>                    End
29357>>>>>>
29357>>>>>                    
29357>>>>>                    Send Request_Save of hoSessionDD
29358>>>>>                    
29358>>>>>                    // Update session properties
29358>>>>>                    Send UpdateSessionProperties False
29359>>>>>                    Send NotifyChangeRights
29360>>>>>                    Function_Return True
29361>>>>>                End
29361>>>>>>
29361>>>>>                Else Begin
29362>>>>>                    //  We should rely directly on this buffer elsewhere but just be sure
29362>>>>>                    Send Clear of hoUserDD
29363>>>>>                End
29363>>>>>>
29363>>>>>            End
29363>>>>>>
29363>>>>>        End
29363>>>>>>
29363>>>>>          
29363>>>>>        Function_Return False
29364>>>>>    End_Function
29365>>>>>    
29365>>>>>    Function IsLoggedIn Returns Boolean
29367>>>>>        String sLoginName
29367>>>>>        Boolean bLogWebSession bLoggedIn
29367>>>>>        
29367>>>>>        Get pbLogWebSession to bLogWebSession
29368>>>>>        If not bLogWebSession Begin
29370>>>>>            Forward Get IsLoggedIn to bLoggedIn
29372>>>>>            Function_Return bLoggedIn
29373>>>>>        End
29373>>>>>>
29373>>>>>        
29373>>>>>        Get psLoginName to sLoginName
29374>>>>>        
29374>>>>>        Function_Return (sLoginName <> "")
29375>>>>>    End_Function
29376>>>>>    
29376>>>>>    
29376>>>>>    //
29376>>>>>    // This procedure is called when validating a session and after logging in. Its purpose is to 
29376>>>>>    // update properties based on the session and user data. Augment this function to update 
29376>>>>>    // properties based on the session / user table. Note that WebAppUser and WebAppSession contain
29376>>>>>    // the right records when this procedure is called.
29376>>>>>    //
29376>>>>>    // Params:
29376>>>>>    //      bClear   True if the procedure is called before session validation to clear properties.
29376>>>>>    //
29376>>>>>    Procedure UpdateSessionProperties Boolean bClear
29378>>>>>        Handle hoUserDD
29378>>>>>        
29378>>>>>        Get phoUserDD to hoUserDD
29379>>>>>        
29379>>>>>        //  Update user properties
29379>>>>>        If (not(bClear) and HasRecord(hoUserDD)) Begin
29381>>>>>            Set psUsername to (Trim(WebAppUser.FullName))
29382>>>>>            Set psLoginName to (Trim(WebAppUser.LoginName))
29383>>>>>            Set piUserRights to WebAppUser.Rights
29384>>>>>            
29384>>>>>            Send OnSessionPropertiesSet 
29385>>>>>        End
29385>>>>>>
29385>>>>>        Else Begin
29386>>>>>            Set psUsername to ""
29387>>>>>            Set psLoginName to ""
29388>>>>>            Set piUserRights to 0
29389>>>>>            
29389>>>>>            Send OnSessionPropertiesClear
29390>>>>>        End
29390>>>>>>
29390>>>>>    End_Procedure
29391>>>>>    
29391>>>>>    //
29391>>>>>    // This function is called to perform the password comparison. It gets the entered password and
29391>>>>>    // the password value of the user table as parameters. The WebAppUser buffer will contain the
29391>>>>>    // right record. This function can be augmented to implement security features like storing the
29391>>>>>    // password as a hashed value.
29391>>>>>    //
29391>>>>>    // Params:
29391>>>>>    //      sUserPassword       Value of the WebAppUser.Password field.
29391>>>>>    //      sEnteredPassword    Value entered on the login screen during login.
29391>>>>>    //
29391>>>>>    Function ComparePasswords String sUserPassword String sEnteredPassword Returns Boolean
29393>>>>>        Function_Return (sUserPassword = sEnteredPassword)
29394>>>>>    End_Function
29395>>>>>    
29395>>>>>    Procedure OnSessionPropertiesSet
29397>>>>>        //  Empty event stub
29397>>>>>    End_Procedure
29398>>>>>    
29398>>>>>    Procedure OnSessionPropertiesClear
29400>>>>>        //  Empty event stub
29400>>>>>    End_Procedure
29401>>>>>    
29401>>>>>    Procedure EndSession
29403>>>>>        Integer iErr
29403>>>>>        Boolean bLogWebSession
29403>>>>>        Handle hoSessionDD       
29403>>>>>        
29403>>>>>        Get phoSessionDD to hoSessionDD
29404>>>>>        Get pbLogWebSession to bLogWebSession
29405>>>>>        If not bLogWebSession Begin
29407>>>>>            Forward Send EndSession
29409>>>>>            Procedure_Return
29410>>>>>        End
29410>>>>>>
29410>>>>>            
29410>>>>>        //  Check if session exists
29410>>>>>        Send Clear of hoSessionDD
29411>>>>>        Get psSessionKey to WebAppSession.SessionKey
29412>>>>>        
29412>>>>>        Send Find of hoSessionDD EQ Index.1
29413>>>>>        If (Found) Begin
29415>>>>>            Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "N"
29416>>>>>            Get Request_Validate of hoSessionDD to iErr
29417>>>>>            If (iErr) Begin
29419>>>>>                // this should not happen. If it does its a programming error
29419>>>>>                Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
29420>>>>>>
29420>>>>>                Procedure_Return
29421>>>>>            End
29421>>>>>>
29421>>>>>            Send Request_Save of hoSessionDD
29422>>>>>        End
29422>>>>>>
29422>>>>>    End_Procedure
29423>>>>>
29423>>>>>End_Class
29424>>>>>
29424>>>
29424>>>Object oSessionManager is a cWebSessionManagerStandard
29426>>>End_Object
29427>>>
29427>    Use WebResourceManager.wo
Including file: WebResourceManager.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\WebResourceManager.wo)
29427>>>Use cWebResourceManager.pkg
29427>>>
29427>>>Object oWebResourceManager is a cWebResourceManager
29429>>>End_Object
29430>    Use LoginDialog.wo
Including file: LoginDialog.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\LoginDialog.wo)
29430>>>Use cWebModalDialog.pkg
29430>>>Use cWebForm.pkg
29430>>>Use cWebButton.pkg
29430>>>Use cWebPanel.pkg
29430>>>Use cWebLabel.pkg
29430>>>
29430>>>Object oLoginDialog is a cWebModalDialog
29432>>>    Set piMinWidth to 360
29433>>>    Set piMinHeight to 200
29434>>>    Set psCaption to "Login"
29435>>>    Set pbShowClose to (peLoginMode(oWebApp) <> lmLoginRequired)
29436>>>    Set pbLoginModeEnforced to False
29437>>>    
29437>>>    Delegate Set phoLoginView to Self
29439>>>    
29439>>>    Object oTopPanel is a cWebPanel
29441>>>        Set peRegion to prTop
29442>>>        Set piHeight to 55       
29443>>>        
29443>>>        Object oDescription is a cWebLabel
29445>>>            Set psCaption to "Please enter your User ID and Password to login. (Hint: John, John)"
29446>>>            Set peAlign to alignCenter
29447>>>        End_Object
29448>>>    End_Object
29449>>>    
29449>>>    Object oRightPanel is a cWebPanel
29451>>>        Set peRegion to prRight
29452>>>        Set piWidth to 20
29453>>>    End_Object
29454>>>    
29454>>>    Object oMainPanel is a cWebPanel
29456>>>        Set peRegion to prCenter
29457>>>        
29457>>>        Object oLoginName is a cWebForm
29459>>>            Set psLabel to "User ID:"
29460>>>            Set peLabelPosition to C_WebDefault
29461>>>            Set peLabelAlign to alignRight
29462>>>            Set piMaxLength to 20
29463>>>            Set piLabelOffset to 90
29464>>>        End_Object
29465>>>        
29465>>>        Object oPassword is a cWebForm
29467>>>            Set psLabel to "Password:"
29468>>>            Set pbPassword to True
29469>>>            Set peLabelAlign to alignRight
29470>>>            Set piMaxLength to 20
29471>>>            Set piLabelOffset to 90
29472>>>        End_Object   
29473>>>    End_Object
29474>>>    
29474>>>    Object oButtonPanel is a cWebPanel
29476>>>        Set peRegion to prBottom
29477>>>        Set piColumnCount to 3
29478>>>        
29478>>>        Object oWarning is a cWebLabel
29480>>>            Set pbVisible to False
29481>>>            Set psCaption to "Invalid User ID or password. Hint: 'John' & 'John'."
29482>>>            Set psCSSClass to "Warning"
29483>>>            Set peAlign to alignCenter
29484>>>            Set piColumnSpan to 3
29485>>>        End_Object
29486>>>
29486>>>        Object oLoginButton is a cWebButton
29488>>>            Set pbShowLabel to False
29489>>>            Set piColumnIndex to 1
29490>>>            Set psCaption to "Login"
29491>>>            Set pbServerOnClick to True
29492>>>                        
29492>>>            Procedure OnClick
29495>>>                Send DoLogin
29496>>>            End_Procedure            
29497>>>        End_Object
29498>>>        
29498>>>    End_Object
29499>>>    
29499>>>    Procedure DoLogin
29502>>>        String sLoginName sPassword
29502>>>        Boolean bResult
29502>>>        Handle hoDefaultView
29502>>>        
29502>>>        WebGet psValue of oLoginName to sLoginName
29503>>>        WebGet psValue of oPassword to sPassword
29504>>>        
29504>>>        Get UserLogin of ghoWebSessionManager sLoginName sPassword to bResult
29505>>>        
29505>>>        If (bResult) Begin
29507>>>            Send Hide of oLoginDialog
29508>>>            Get GetDefaultView to hoDefaultView
29509>>>            If (hoDefaultView > 0) Begin
29511>>>                Send Show of hoDefaultView
29512>>>            End
29512>>>>
29512>>>            
29512>>>            // clear the login values. we don't want to return the login id & password as synchronized properties....
29512>>>            WebSet psValue of oLoginName to ""
29513>>>            WebSet psValue of oPassword  to ""
29514>>>            WebSet pbVisible of oWarning to False
29515>>>        End
29515>>>>
29515>>>        Else Begin
29516>>>            WebSet pbVisible of oWarning to True
29517>>>        End
29517>>>>
29517>>>    End_Procedure
29518>>>    
29518>>>    
29518>>>    Set pbServerOnSubmit to True
29519>>>    Procedure OnSubmit
29522>>>         Send DoLogin
29523>>>    End_Procedure
29524>>>End_Object
29525>>>
29525>>>
29525>    
29525>    Use Order.wo
Including file: Order.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\Order.wo)
29525>>>// Order Entry
29525>>>//
29525>>>
29525>>>Use cWebView.pkg
29525>>>Use cWebPanel.pkg
29525>>>Use cWebForm.pkg
29525>>>Use cWebCombo.pkg
29525>>>Use cWebGrid.pkg
29525>>>Use cWebColumn.pkg
29525>>>Use cWebDateForm.pkg
29525>>>
29525>>>Use Vendor.DD
Including file: Vendor.dd    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Vendor.dd)
29525>>>>>Use  Windows.pkg           // Basic Definitions
29525>>>>>Use  DataDict.pkg          // DataDictionary Class Definition
29525>>>>>Use  DDvalTbl.pkg          // Validation Table Class Definitions
29525>>>>>
29525>>>>>Open Vendor
Including file: Vendor.fd    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Vendor.fd)
29527>>>>>Open Invt
Including file: Invt.fd    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Invt.fd)
29529>>>>>Open OrdSys
Including file: OrdSys.fd    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\OrdSys.fd)
29531>>>>>
29531>>>>>
29531>>>>>Register_Object Vendor_State_VT
29531>>>>>
29531>>>>>Object Vendor_State_VT  is a CodeValidationTable
29533>>>>>    Set Type_Value        To "STATES"
29534>>>>>End_Object   // Vendor_State_VT
29535>>>>>Register_Object Vendor_sl
29535>>>>>Register_Object oVendorWebLookup
29535>>>>>
29535>>>>>Class Vendor_DataDictionary Is A DataDictionary
29536>>>>>
29536>>>>>    Procedure Construct_Object
29538>>>>>        Forward Send Construct_Object
29540>>>>>
29540>>>>>        Set Main_File To Vendor.File_Number
29541>>>>>        Set Cascade_Delete_State To False
29542>>>>>
29542>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
29543>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
29544>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
29545>>>>>
29545>>>>>        Set Add_Client_File to Invt.File_Number
29546>>>>>
29546>>>>>        Set Add_System_File to Ordsys.File_Number DD_LOCK_ON_NEW_SAVE
29547>>>>>
29547>>>>>        Set Field_Auto_Increment Field Vendor.Id to File_Field Ordsys.Vendor_Number
29548>>>>>
29548>>>>>
29548>>>>>        Set Field_Label_Long Field Vendor.ID To "Vendor ID"
29549>>>>>        Set Field_Label_Short Field Vendor.ID To "Vndr ID"
29550>>>>>        Set Field_Option Field Vendor.ID DD_AUTOFIND to True
29551>>>>>        Set Field_Option Field Vendor.ID DD_NOPUT to True
29552>>>>>        Set Field_Prompt_Object Field Vendor.ID to Vendor_sl
29553>>>>>        Set Key_Field_State Field Vendor.ID To True
29554>>>>>        Set Status_Help Field Vendor.ID To "Vendor Id Number (system assigned)."
29555>>>>>        Set Field_WebPrompt_Object Field Vendor.ID to oVendorWebLookup
29556>>>>>
29556>>>>>        Set Field_Label_Long Field Vendor.Name To "Vendor Name"
29557>>>>>        Set Field_Label_Short Field Vendor.Name To "Name"
29558>>>>>        Set Field_Option Field Vendor.Name DD_REQUIRED to True
29559>>>>>        Set Field_Prompt_Object Field Vendor.Name to Vendor_sl
29560>>>>>        Set Status_Help Field Vendor.Name To "Vendor Name."
29561>>>>>        Set Field_WebPrompt_Object Field Vendor.Name to oVendorWebLookup
29562>>>>>
29562>>>>>        Set Field_Label_Long Field Vendor.Address To "Street Address"
29563>>>>>        Set Field_Label_Short Field Vendor.Address To "Address"
29564>>>>>        Set Status_Help Field Vendor.Address To "Street Address."
29565>>>>>
29565>>>>>        Set Status_Help Field Vendor.City To "City Name."
29566>>>>>
29566>>>>>        Set Field_Class_Name Field Vendor.State To "dbComboForm"
29567>>>>>        Set Field_Label_Long Field Vendor.State To "State"
29568>>>>>        Set Field_Label_Short Field Vendor.State To "St."
29569>>>>>        Set Field_Option Field Vendor.State DD_CAPSLOCK to True
29570>>>>>        Set Field_Value_Table Field Vendor.State to Vendor_State_VT
29571>>>>>        Set Status_Help Field Vendor.State To "Two letter state ID."
29572>>>>>
29572>>>>>        Set Field_Label_Long Field Vendor.Zip To "Zip/Postal Code"
29573>>>>>        Set Field_Label_Short Field Vendor.Zip To "Zip"
29574>>>>>        Set Field_Mask Field Vendor.Zip To "#####-####"
29575>>>>>        Set Field_Mask_Type Field Vendor.Zip To MASK_WINDOW
29576>>>>>        Set Status_Help Field Vendor.Zip To "Zip or Postal Code."
29577>>>>>
29577>>>>>        Set Field_Label_Long Field Vendor.Phone_Number To "Phone Number"
29578>>>>>        Set Field_Label_Short Field Vendor.Phone_Number To "Phone"
29579>>>>>        Set Status_Help Field Vendor.Phone_Number To "Phone Number."
29580>>>>>
29580>>>>>        Set Field_Label_Long Field Vendor.Fax_Number To "Fax Number"
29581>>>>>        Set Field_Label_Short Field Vendor.Fax_Number To "Fax"
29582>>>>>        Set Status_Help Field Vendor.Fax_Number To "Fax Phone Number."
29583>>>>>
29583>>>>>
29583>>>>>    End_Procedure  //  Construct_Object
29584>>>>>
29584>>>>>
29584>>>>>
29584>>>>>    Procedure Field_Defaults
29586>>>>>        Forward Send Field_Defaults
29588>>>>>    End_Procedure    // Field_Defaults
29589>>>>>    
29589>>>>>End_Class    //  Vendor_DataDictionary
29590>>>>>Use VendorWebLookup.wo
Including file: VendorWebLookup.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\VendorWebLookup.wo)
29590>>>>>>>// Vendor Lookup List
29590>>>>>>>//
29590>>>>>>>
29590>>>>>>>Use cWebModalDialog
29590>>>>>>>Use cWebPanel.pkg
29590>>>>>>>Use cWebButton.pkg
29590>>>>>>>Use cWebPromptList.pkg
29590>>>>>>>Use cWebColumn.pkg
29590>>>>>>>
29590>>>>>>>Use Vendor.DD
29590>>>>>>>
29590>>>>>>>Object oVendorWebLookup is a cWebModalDialog
29592>>>>>>>    Set piColumnCount to 8
29593>>>>>>>    Set psCaption to "Vendor Lookup List"
29594>>>>>>>    Set piWidth to 700
29595>>>>>>>    Set piHeight to 400
29596>>>>>>>
29596>>>>>>>    Object oVendor_DD is a Vendor_DataDictionary
29598>>>>>>>    End_Object 
29599>>>>>>>
29599>>>>>>>    Set Main_DD To oVendor_DD
29600>>>>>>>    Set Server  To oVendor_DD
29601>>>>>>>
29601>>>>>>>
29601>>>>>>>    Object oWebMainPanel is a cWebPanel
29603>>>>>>>        Set piColumnCount to 8
29604>>>>>>>
29604>>>>>>>        Object oPromptList is a cWebPromptList
29606>>>>>>>            Set pbFillHeight to True
29607>>>>>>>            Set piColumnSpan to 8
29608>>>>>>>            
29608>>>>>>>            // Since there are only a few records, we set this property so all records are sent to 
29608>>>>>>>            // the client at once. This improves the performance of scrolling and searching and 
29608>>>>>>>            // enables sorting on all columns.
29608>>>>>>>            Set peDbGridType to gtAllData
29609>>>>>>>
29609>>>>>>>            Object oVendorID is a cWebColumn
29611>>>>>>>                Entry_Item Vendor.ID
29612>>>>>>>                Set psCaption to "Vndr ID"
29613>>>>>>>                Set piWidth to 63
29614>>>>>>>            End_Object 
29615>>>>>>>
29615>>>>>>>            Object oVendorName is a cWebColumn
29617>>>>>>>                Entry_Item Vendor.Name
29618>>>>>>>                Set psCaption to "Name"
29619>>>>>>>                Set piWidth to 315
29620>>>>>>>            End_Object 
29621>>>>>>>
29621>>>>>>>            Object oVendorCity is a cWebColumn
29623>>>>>>>                Entry_Item Vendor.City
29624>>>>>>>                Set psCaption to "City"
29625>>>>>>>                Set piWidth to 147
29626>>>>>>>            End_Object 
29627>>>>>>>        End_Object 
29628>>>>>>>
29628>>>>>>>        Object oOkButton is a cWebButton
29630>>>>>>>            Set psCaption to "OK"
29631>>>>>>>            Set piColumnSpan to 1
29632>>>>>>>            Set piColumnIndex to 5
29633>>>>>>>
29633>>>>>>>            Procedure OnClick
29636>>>>>>>                Send Ok of oPromptList
29637>>>>>>>            End_Procedure
29638>>>>>>>
29638>>>>>>>        End_Object 
29639>>>>>>>
29639>>>>>>>        Object oCancelButton is a cWebButton
29641>>>>>>>            Set psCaption to "Cancel"
29642>>>>>>>            Set piColumnSpan to 1
29643>>>>>>>            Set piColumnIndex to 6
29644>>>>>>>            Procedure OnClick
29647>>>>>>>                Send Cancel of oPromptList
29648>>>>>>>            End_Procedure
29649>>>>>>>
29649>>>>>>>        End_Object 
29650>>>>>>>
29650>>>>>>>        Object oSearchButton is a cWebButton
29652>>>>>>>            Set psCaption to "Search..."
29653>>>>>>>            Set piColumnSpan to 1
29654>>>>>>>            Set piColumnIndex to 7
29655>>>>>>>
29655>>>>>>>            Procedure OnClick
29658>>>>>>>                Send Search of oPromptList
29659>>>>>>>            End_Procedure
29660>>>>>>>
29660>>>>>>>        End_Object 
29661>>>>>>>    End_Object 
29662>>>>>>>
29662>>>>>>>    Set pbServerOnShow to True
29663>>>>>>>    Procedure OnShow 
29666>>>>>>>        Send InitializePromptList of oPromptList
29667>>>>>>>    End_Procedure 
29668>>>>>>>
29668>>>>>>>    Set pbServerOnSubmit to True
29669>>>>>>>    Procedure OnSubmit 
29672>>>>>>>        Send Ok of oPromptList
29673>>>>>>>    End_Procedure 
29674>>>>>>>
29674>>>>>>>End_Object 
29675>>>>>
29675>>>Use Invt.DD
Including file: Invt.dd    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Invt.dd)
29675>>>>>Use  Windows.pkg           // Basic Definitions
29675>>>>>Use  DataDict.pkg          // DataDictionary Class Definition
29675>>>>>Use  DDvalTbl.pkg          // Validation Table Class Definitions
29675>>>>>
29675>>>>>Open Invt
29677>>>>>Open OrderDtl
Including file: OrderDtl.fd    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\OrderDtl.fd)
29679>>>>>Open Vendor
29681>>>>>
29681>>>>>Register_Object Invt_sl
29681>>>>>Register_Object oInvtWebLookup
29681>>>>>
29681>>>>>Class Invt_DataDictionary Is A DataDictionary
29682>>>>>
29682>>>>>    Procedure Construct_Object
29684>>>>>        Forward Send Construct_Object
29686>>>>>
29686>>>>>        Set Main_File To Invt.File_Number
29687>>>>>        Set Cascade_Delete_State To False
29688>>>>>
29688>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
29689>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
29690>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
29691>>>>>
29691>>>>>        Set Add_Client_File to OrderDtl.File_Number
29692>>>>>
29692>>>>>        Set Add_Server_File to Vendor.File_Number
29693>>>>>
29693>>>>>
29693>>>>>        Set Field_Label_Long Field Invt.Item_ID To "Invt. Item ID"
29694>>>>>        Set Field_Label_Short Field Invt.Item_ID To "Item ID"
29695>>>>>        Set Field_Option Field Invt.Item_ID DD_AUTOFIND to True
29696>>>>>        Set Field_Option Field Invt.Item_ID DD_REQUIRED to True
29697>>>>>        Set Field_Option Field Invt.Item_ID DD_CAPSLOCK to True
29698>>>>>        Set Field_Prompt_Object Field Invt.Item_ID to Invt_sl
29699>>>>>        Set Field_WebPrompt_Object Field Invt.Item_ID to oInvtWebLookup
29700>>>>>        Set Key_Field_State Field Invt.Item_ID to True
29701>>>>>        Set Status_Help Field Invt.Item_ID To "Inventory Item Id - user defined identification"
29702>>>>>
29702>>>>>        Set Field_Label_Long Field Invt.Description To "Invt. Description"
29703>>>>>        Set Field_Label_Short Field Invt.Description To "Description"
29704>>>>>        Set Field_Option Field Invt.Description DD_REQUIRED to True
29705>>>>>        Set Status_Help Field Invt.Description To "Inventory Part Description"
29706>>>>>
29706>>>>>        Set Field_Option Field Invt.Vendor_ID DD_CAPSLOCK to True
29707>>>>>        Set Status_Help Field Invt.Vendor_ID To "Vendor Number"
29708>>>>>
29708>>>>>        Set Field_Option Field Invt.Vendor_Part_ID DD_REQUIRED to True
29709>>>>>        Set Status_Help Field Invt.Vendor_Part_ID To "Vendor ID name for this item"
29710>>>>>
29710>>>>>        Set Field_Mask_Type Field Invt.Unit_Price To MASK_CURRENCY_WINDOW
29711>>>>>        Set Field_Value_Range Field Invt.Unit_Price To 0 999999.99
29712>>>>>        Set Status_Help Field Invt.Unit_Price To "Retail unit price"
29713>>>>>
29713>>>>>        Set Field_Value_Range Field Invt.On_Hand To -999999 999999
29714>>>>>        Set Status_Help Field Invt.On_Hand To "Units currently available"
29715>>>>>
29715>>>>>    End_Procedure  //  Construct_Object
29716>>>>>  
29716>>>>>    Function Validate_Save Returns Integer
29718>>>>>        Integer iRetVal
29718>>>>>    
29718>>>>>        Forward Get Validate_Save to iRetVal
29720>>>>>        
29720>>>>>        If iRetVal Function_Return iRetVal
29723>>>>>    
29723>>>>>        If Invt.On_Hand Lt 0 Begin
29725>>>>>           Send UserError "Insufficient Inventory Stock" ""
29726>>>>>           Function_Return 1
29727>>>>>        End   
29727>>>>>>
29727>>>>>    End_Function  // Validate_Save
29728>>>>>
29728>>>>>
29728>>>>>    Procedure Field_Defaults
29730>>>>>        Forward Send Field_Defaults
29732>>>>>    End_Procedure    // Field_Defaults
29733>>>>>    
29733>>>>>End_Class    //  Invt_DataDictionary
29734>>>>>Use InvtWebLookup.wo
Including file: InvtWebLookup.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\InvtWebLookup.wo)
29734>>>>>>>// Invt Lookup List
29734>>>>>>>//
29734>>>>>>>
29734>>>>>>>Use cWebModalDialog
29734>>>>>>>Use cWebPanel.pkg
29734>>>>>>>Use cWebButton.pkg
29734>>>>>>>Use cWebPromptList.pkg
29734>>>>>>>Use cWebColumn.pkg
29734>>>>>>>
29734>>>>>>>Use Vendor.DD
29734>>>>>>>Use Invt.DD
29734>>>>>>>
29734>>>>>>>Object oInvtWebLookup is a cWebModalDialog
29736>>>>>>>    Set piColumnCount to 7
29737>>>>>>>    Set psCaption to "Invt Lookup List"
29738>>>>>>>    Set piWidth to 700
29739>>>>>>>    Set piHeight to 400
29740>>>>>>>
29740>>>>>>>    Object oVendor_DD is a Vendor_DataDictionary
29742>>>>>>>    End_Object 
29743>>>>>>>
29743>>>>>>>    Object oInvt_DD is a Invt_DataDictionary
29745>>>>>>>        Set DDO_Server To oVendor_DD
29746>>>>>>>    End_Object 
29747>>>>>>>
29747>>>>>>>    Set Main_DD To oInvt_DD
29748>>>>>>>    Set Server  To oInvt_DD
29749>>>>>>>
29749>>>>>>>
29749>>>>>>>    Object oWebMainPanel is a cWebPanel
29751>>>>>>>        Set piColumnCount to 7
29752>>>>>>>
29752>>>>>>>        Object oPromptList is a cWebPromptList
29754>>>>>>>            Set pbFillHeight to True
29755>>>>>>>            Set piColumnSpan to 7
29756>>>>>>>            
29756>>>>>>>            // Since there are only a few records, we set this property so all records are sent to 
29756>>>>>>>            // the client at once. This improves the performance of scrolling and searching and 
29756>>>>>>>            // enables sorting on all columns.
29756>>>>>>>            Set peDbGridType to gtAllData
29757>>>>>>>
29757>>>>>>>            Object oInvtItem_ID is a cWebColumn
29759>>>>>>>                Entry_Item Invt.Item_ID
29760>>>>>>>                Set psCaption to "Item ID"
29761>>>>>>>                Set piWidth to 147
29762>>>>>>>            End_Object 
29763>>>>>>>
29763>>>>>>>            Object oInvtDescription is a cWebColumn
29765>>>>>>>                Entry_Item Invt.Description
29766>>>>>>>                Set psCaption to "Description"
29767>>>>>>>                Set piWidth to 337
29768>>>>>>>            End_Object 
29769>>>>>>>
29769>>>>>>>            Object oInvtUnit_Price is a cWebColumn
29771>>>>>>>                Entry_Item Invt.Unit_Price
29772>>>>>>>                Set psCaption to "Unit Price"
29773>>>>>>>                Set piWidth to 94
29774>>>>>>>            End_Object 
29775>>>>>>>
29775>>>>>>>            Object oInvtOn_Hand is a cWebColumn
29777>>>>>>>                Entry_Item Invt.On_Hand
29778>>>>>>>                Set psCaption to "On Hand"
29779>>>>>>>                Set piWidth to 94
29780>>>>>>>            End_Object 
29781>>>>>>>        End_Object 
29782>>>>>>>
29782>>>>>>>        Object oOkButton is a cWebButton
29784>>>>>>>            Set psCaption to "OK"
29785>>>>>>>            Set piColumnSpan to 1
29786>>>>>>>            Set piColumnIndex to 4
29787>>>>>>>
29787>>>>>>>            Procedure OnClick
29790>>>>>>>                Send Ok of oPromptList
29791>>>>>>>            End_Procedure
29792>>>>>>>
29792>>>>>>>        End_Object 
29793>>>>>>>
29793>>>>>>>        Object oCancelButton is a cWebButton
29795>>>>>>>            Set psCaption to "Cancel"
29796>>>>>>>            Set piColumnSpan to 1
29797>>>>>>>            Set piColumnIndex to 5
29798>>>>>>>            Procedure OnClick
29801>>>>>>>                Send Cancel of oPromptList
29802>>>>>>>            End_Procedure
29803>>>>>>>
29803>>>>>>>        End_Object 
29804>>>>>>>
29804>>>>>>>        Object oSearchButton is a cWebButton
29806>>>>>>>            Set psCaption to "Search..."
29807>>>>>>>            Set piColumnSpan to 1
29808>>>>>>>            Set piColumnIndex to 6
29809>>>>>>>
29809>>>>>>>            Procedure OnClick
29812>>>>>>>                Send Search of oPromptList
29813>>>>>>>            End_Procedure
29814>>>>>>>
29814>>>>>>>        End_Object 
29815>>>>>>>    End_Object 
29816>>>>>>>
29816>>>>>>>    Set pbServerOnShow to True
29817>>>>>>>    Procedure OnShow 
29820>>>>>>>        Send InitializePromptList of oPromptList
29821>>>>>>>    End_Procedure 
29822>>>>>>>
29822>>>>>>>    Set pbServerOnSubmit to True
29823>>>>>>>    Procedure OnSubmit 
29826>>>>>>>        Send Ok of oPromptList
29827>>>>>>>    End_Procedure 
29828>>>>>>>
29828>>>>>>>End_Object 
29829>>>>>
29829>>>>>
29829>>>Use Customer.DD
Including file: Customer.dd    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Customer.dd)
29829>>>>>Use Windows.pkg           // Basic Definitions
29829>>>>>Use DataDict.pkg          // DataDictionary Class Definition
29829>>>>>Use DDvalTbl.pkg          // Validation Table Class Definitions
29829>>>>>
29829>>>>>Open Customer
Including file: Customer.fd    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Customer.fd)
29831>>>>>Open OrderHea
Including file: OrderHea.fd    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\OrderHea.fd)
29833>>>>>Open Ordsys
29835>>>>>
29835>>>>>
29835>>>>>Register_Object Customer_State_VT
29835>>>>>
29835>>>>>Object Customer_State_VT  is a CodeValidationTable
29837>>>>>    Set Type_Value        To "STATES"
29838>>>>>    Set Table_Title       To "States"
29839>>>>>End_Object   // Customer_State_VT
29840>>>>>
29840>>>>>Register_Function ValidateEmail Integer iColumn String sValue Returns Boolean
29840>>>>>
29840>>>>>Register_Object Customer_sl
29840>>>>>Register_Object oCustomerWebLookup
29840>>>>>
29840>>>>>Class Customer_DataDictionary Is A DataDictionary
29841>>>>>
29841>>>>>    Procedure Construct_Object
29843>>>>>        Forward Send Construct_Object
29845>>>>>
29845>>>>>        Set Main_File To Customer.File_Number
29846>>>>>        Set Cascade_Delete_State To False
29847>>>>>
29847>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
29848>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
29849>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
29850>>>>>
29850>>>>>        Set Add_Client_File to OrderHea.File_Number
29851>>>>>
29851>>>>>        Set Add_System_File to Ordsys.File_Number DD_LOCK_ON_NEW_SAVE
29852>>>>>
29852>>>>>        Set Field_Auto_Increment Field Customer.Customer_Number to File_Field Ordsys.Cust_Number
29853>>>>>        Set Field_Label_Long Field Customer.Customer_Number To "Customer Number"
29854>>>>>        Set Field_Label_Short Field Customer.Customer_Number To "Number"
29855>>>>>        Set Field_Option Field Customer.Customer_Number DD_AUTOFIND to True
29856>>>>>        Set Field_Option Field Customer.Customer_Number DD_NOPUT to True
29857>>>>>        Set Field_Prompt_Object Field Customer.Customer_Number to Customer_sl
29858>>>>>        Set Field_WebPrompt_Object Field Customer.Customer_Number to oCustomerWebLookup
29859>>>>>        Set Key_Field_State Field Customer.Customer_Number to True
29860>>>>>        Set Status_Help Field Customer.Customer_Number To "Customer Id Number (system assigned)."
29861>>>>>
29861>>>>>        Set Field_Label_Long Field Customer.Name To "Customer Name"
29862>>>>>        Set Field_Label_Short Field Customer.Name To "Customer Name"
29863>>>>>        Set Field_Option Field Customer.Name DD_REQUIRED to True
29864>>>>>        Set Field_Prompt_Object Field Customer.Name to Customer_sl
29865>>>>>        Set Field_WebPrompt_Object Field Customer.Name to oCustomerWebLookup
29866>>>>>        Set Status_Help Field Customer.Name to "Customer/Company Name."
29867>>>>>
29867>>>>>        Set Field_Label_Long Field Customer.Address To "Street Address"
29868>>>>>        Set Field_Label_Short Field Customer.Address To "Address"
29869>>>>>        Set Status_Help Field Customer.Address To "Street Address."
29870>>>>>
29870>>>>>        Set Status_Help Field Customer.City To "City Name."
29871>>>>>
29871>>>>>        Set Field_Class_Name Field Customer.State To "dbComboForm"
29872>>>>>        Set Field_Label_Long Field Customer.State To "State"
29873>>>>>        Set Field_Label_Short Field Customer.State To "St."
29874>>>>>        Set Field_Option Field Customer.State DD_CAPSLOCK to True
29875>>>>>        Set Field_Value_Table Field Customer.State to Customer_State_VT
29876>>>>>        Set Status_Help Field Customer.State To "Two letter state ID."
29877>>>>>
29877>>>>>        Set Field_Label_Long Field Customer.Zip To "Zip/Postal Code"
29878>>>>>        Set Field_Label_Short Field Customer.Zip To "Zip"
29879>>>>>        Set Field_Mask Field Customer.Zip To "#####-####"
29880>>>>>        Set Field_Mask_Type Field Customer.Zip To MASK_WINDOW
29881>>>>>        Set Status_Help Field Customer.Zip To "Zip or Postal Code."
29882>>>>>
29882>>>>>        Set Field_Label_Long Field Customer.Phone_Number To "Phone Number"
29883>>>>>        Set Field_Label_Short Field Customer.Phone_Number To "Phone"
29884>>>>>        Set Status_Help Field Customer.Phone_Number To "Phone Number."
29885>>>>>
29885>>>>>        Set Field_Label_Long Field Customer.Fax_Number To "Fax Number"
29886>>>>>        Set Field_Label_Short Field Customer.Fax_Number To "Fax"
29887>>>>>        Set Status_Help Field Customer.Fax_Number To "Fax Phone Number."
29888>>>>>
29888>>>>>        Set Field_Label_Long Field Customer.Email_Address To "E-Mail Address"
29889>>>>>        Set Field_Label_Short Field Customer.Email_Address To "E-Mail"
29890>>>>>        Set Status_Help Field Customer.Email_Address To "E-mail Address (internet)."
29891>>>>>        Set Field_Validate_msg Field Customer.EMail_Address to (RefFunc(ValidateEmail))
29892>>>>>        Set Field_Option Field Customer.EMail_Address DD_REQUIRED to True
29893>>>>>
29893>>>>>        Set Field_Class_Name Field Customer.Credit_Limit To "dbSpinForm"
29894>>>>>        Set Field_Mask_Type Field Customer.Credit_Limit To MASK_CURRENCY_WINDOW
29895>>>>>
29895>>>>>        Set Field_Label_Long Field Customer.Purchases To "Total Purchases"
29896>>>>>        Set Field_Label_Short Field Customer.Purchases To "Purchases"
29897>>>>>        Set Field_Mask_Type Field Customer.Purchases To MASK_CURRENCY_WINDOW
29898>>>>>        Set Field_Option Field Customer.Purchases DD_DISPLAYONLY to True
29899>>>>>
29899>>>>>        Set Field_Label_Long Field Customer.Balance To "Balance Due"
29900>>>>>        Set Field_Label_Short Field Customer.Balance To "Balance"
29901>>>>>        Set Field_Mask_Type Field Customer.Balance To MASK_CURRENCY_WINDOW
29902>>>>>        Set Field_Option Field Customer.Balance DD_DISPLAYONLY to True
29903>>>>>
29903>>>>>        Set Status_Help Field Customer.Comments To "Additional Comments and Notes."
29904>>>>>
29904>>>>>        Set Field_Checkbox_Values Field Customer.Status To "Y" "N"
29905>>>>>        Set Field_Label_Long Field Customer.Status To "Active Status"
29906>>>>>        Set Field_Label_Short Field Customer.Status To "Status"
29907>>>>>        Set Status_Help Field Customer.Status To "Active Inactive Status of customer"
29908>>>>>    End_Procedure  //  Construct_Object
29909>>>>>
29909>>>>>    Procedure Field_defaults
29911>>>>>        Forward Send Field_Defaults
29913>>>>>        Set Field_Changed_Value   Field Customer.State To "FL"
29914>>>>>        Set Field_Changed_Value   Field Customer.Credit_Limit To 1000
29915>>>>>        Set Field_Changed_Value   Field Customer.Status To "Y"
29916>>>>>    End_Procedure
29917>>>>>
29917>>>>>    //
29917>>>>>    //  Validates if the field contains a valid email address (it allows empty values too).
29917>>>>>    //
29917>>>>>    Function ValidateEmail Integer iColumn String sValue Returns Boolean
29919>>>>>        Integer iAt iDot
29919>>>>>        Boolean bResult
29919>>>>>        
29919>>>>>        If (Trim(sValue) <> "") Begin
29921>>>>>            Move (Pos("@", sValue)) to iAt
29922>>>>>            Move (RightPos(".", sValue)) to iDot
29923>>>>>            
29923>>>>>            If (not(iAt > 1 and iDot > 0 and iDot > iAt + 1 and iDot < Length(sValue))) Begin
29925>>>>>                Send Data_set_error iColumn DFERR_OPERATOR "Please enter a valid email address"
29926>>>>>                Move True to bResult
29927>>>>>            End
29927>>>>>>
29927>>>>>        End
29927>>>>>>
29927>>>>>        
29927>>>>>        Function_Return bResult
29928>>>>>    End_Function
29929>>>>>
29929>>>>>
29929>>>>>End_Class    //  Customer_DataDictionary
29930>>>>>
29930>>>>>Use CustomerWebLookup.wo
Including file: CustomerWebLookup.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\CustomerWebLookup.wo)
29930>>>>>>>// Customer Lookup List
29930>>>>>>>//
29930>>>>>>>
29930>>>>>>>Use cWebModalDialog
29930>>>>>>>Use cWebPanel.pkg
29930>>>>>>>Use cWebButton.pkg
29930>>>>>>>Use cWebPromptList.pkg
29930>>>>>>>Use cWebColumn.pkg
29930>>>>>>>
29930>>>>>>>Use Customer.DD
29930>>>>>>>
29930>>>>>>>Object oCustomerWebLookup is a cWebModalDialog
29932>>>>>>>    Set piColumnCount to 6
29933>>>>>>>    Set psCaption to "Customer Lookup List"
29934>>>>>>>    Set piWidth to 550
29935>>>>>>>    Set piHeight to 400
29936>>>>>>>
29936>>>>>>>    Object oCustomer_DD is a Customer_DataDictionary
29938>>>>>>>    End_Object 
29939>>>>>>>
29939>>>>>>>    Set Main_DD To oCustomer_DD
29940>>>>>>>    Set Server  To oCustomer_DD
29941>>>>>>>
29941>>>>>>>
29941>>>>>>>    Object oWebMainPanel is a cWebPanel
29943>>>>>>>        Set piColumnCount to 6
29944>>>>>>>
29944>>>>>>>        Object oPromptList is a cWebPromptList
29946>>>>>>>            Set pbFillHeight to True
29947>>>>>>>            Set piColumnSpan to 6
29948>>>>>>>
29948>>>>>>>            Object oCustomerCustomer_Number is a cWebColumn
29950>>>>>>>                Entry_Item Customer.Customer_Number
29951>>>>>>>                Set psCaption to "Number"
29952>>>>>>>                Set piWidth to 100
29953>>>>>>>            End_Object 
29954>>>>>>>
29954>>>>>>>            Object oCustomerName is a cWebColumn
29956>>>>>>>                Entry_Item Customer.Name
29957>>>>>>>                Set psCaption to "Customer Name"
29958>>>>>>>                Set piWidth to 315
29959>>>>>>>            End_Object 
29960>>>>>>>
29960>>>>>>>            Object oCustomerBalance is a cWebColumn
29962>>>>>>>                Entry_Item Customer.Balance
29963>>>>>>>                Set psCaption to "Balance"
29964>>>>>>>                Set piWidth to 110
29965>>>>>>>            End_Object 
29966>>>>>>>        End_Object 
29967>>>>>>>
29967>>>>>>>        Object oOkButton is a cWebButton
29969>>>>>>>            Set psCaption to "OK"
29970>>>>>>>            Set piColumnSpan to 1
29971>>>>>>>            Set piColumnIndex to 3
29972>>>>>>>
29972>>>>>>>            Procedure OnClick
29975>>>>>>>                Send Ok of oPromptList
29976>>>>>>>            End_Procedure
29977>>>>>>>        End_Object 
29978>>>>>>>
29978>>>>>>>        Object oCancelButton is a cWebButton
29980>>>>>>>            Set psCaption to "Cancel"
29981>>>>>>>            Set piColumnSpan to 1
29982>>>>>>>            Set piColumnIndex to 4
29983>>>>>>>            Procedure OnClick
29986>>>>>>>                Send Cancel of oPromptList
29987>>>>>>>            End_Procedure
29988>>>>>>>
29988>>>>>>>        End_Object 
29989>>>>>>>
29989>>>>>>>        Object oSearchButton is a cWebButton
29991>>>>>>>            Set psCaption to "Search..."
29992>>>>>>>            Set piColumnSpan to 1
29993>>>>>>>            Set piColumnIndex to 5
29994>>>>>>>
29994>>>>>>>            Procedure OnClick
29997>>>>>>>                Send Search of oPromptList
29998>>>>>>>            End_Procedure
29999>>>>>>>
29999>>>>>>>        End_Object 
30000>>>>>>>    End_Object 
30001>>>>>>>
30001>>>>>>>    Set pbServerOnShow to True
30002>>>>>>>    Procedure OnShow 
30005>>>>>>>        Send InitializePromptList of oPromptList
30006>>>>>>>    End_Procedure 
30007>>>>>>>
30007>>>>>>>    Set pbServerOnSubmit to True
30008>>>>>>>    Procedure OnSubmit 
30011>>>>>>>        Send Ok of oPromptList
30012>>>>>>>    End_Procedure 
30013>>>>>>>
30013>>>>>>>End_Object 
30014>>>>>
30014>>>Use SalesP.DD
Including file: SalesP.dd    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\SalesP.dd)
30014>>>>>Use  Windows.pkg           // Basic Definitions
30014>>>>>Use  DataDict.pkg          // DataDictionary Class Definition
30014>>>>>Use  DDvalTbl.pkg          // Validation Table Class Definitions
30014>>>>>
30014>>>>>Open Salesp
Including file: SalesP.fd    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\SalesP.fd)
30016>>>>>Open Orderhea
30018>>>>>
30018>>>>>Register_Object SalesP_sl
30018>>>>>Register_Object oSalesPWebLookup
30018>>>>>
30018>>>>>Class SalesP_DataDictionary Is A DataDictionary
30019>>>>>
30019>>>>>    Procedure Construct_Object
30021>>>>>        Forward Send Construct_Object
30023>>>>>
30023>>>>>        Set Main_File To Salesp.File_Number
30024>>>>>        Set Cascade_Delete_State To FALSE
30025>>>>>
30025>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
30026>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
30027>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
30028>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
30029>>>>>
30029>>>>>        Set Add_Client_File to Orderhea.File_Number
30030>>>>>
30030>>>>>
30030>>>>>        Set Field_Label_Long Field Salesp.Id To "Sales Person ID"
30031>>>>>        Set Field_Label_Short Field Salesp.Id To "ID"
30032>>>>>        Set Field_Option Field Salesp.Id DD_AUTOFIND to True
30033>>>>>        Set Field_Option Field Salesp.Id DD_REQUIRED to True
30034>>>>>        Set Field_Option Field Salesp.Id DD_CAPSLOCK to True
30035>>>>>        Set Field_Prompt_Object Field Salesp.Id to SalesP_sl
30036>>>>>        Set Field_WebPrompt_Object Field SalesP.ID to oSalesPWebLookup
30037>>>>>        Set Key_Field_State Field Salesp.Id To TRUE
30038>>>>>        Set Status_Help Field Salesp.Id To "Sales person ID code - Upper case alpha"
30039>>>>>
30039>>>>>        Set Field_Label_Long Field Salesp.Name To "Sales Person Name"
30040>>>>>        Set Field_Label_Short Field Salesp.Name To "Sales Person Name"
30041>>>>>        Set Field_Prompt_Object Field Salesp.Name to SalesP_sl
30042>>>>>        Set Status_Help Field Salesp.Name To "Sales person name - first and last"
30043>>>>>
30043>>>>>    End_Procedure  //  Construct_Object
30044>>>>>
30044>>>>>
30044>>>>>    Procedure Field_Defaults
30046>>>>>        Forward Send Field_Defaults
30048>>>>>    End_Procedure    // Field_Defaults
30049>>>>>    
30049>>>>>End_Class    //  Salesp_DataDictionary
30050>>>>>Use SalesPWebLookup.wo
Including file: SalesPWebLookup.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\SalesPWebLookup.wo)
30050>>>>>>>// Sales Person Lookup List
30050>>>>>>>//
30050>>>>>>>
30050>>>>>>>Use cWebModalDialog
30050>>>>>>>Use cWebPanel.pkg
30050>>>>>>>Use cWebButton.pkg
30050>>>>>>>Use cWebPromptList.pkg
30050>>>>>>>Use cWebColumn.pkg
30050>>>>>>>
30050>>>>>>>Use SalesP.DD
30050>>>>>>>
30050>>>>>>>Object oSalesPWebLookup is a cWebModalDialog
30052>>>>>>>    Set piColumnCount to 5
30053>>>>>>>    Set psCaption to "Sales Person Lookup List"
30054>>>>>>>    Set piWidth to 450
30055>>>>>>>    Set piHeight to 400
30056>>>>>>>
30056>>>>>>>    Object oSalesP_DD is a SalesP_DataDictionary
30058>>>>>>>    End_Object 
30059>>>>>>>
30059>>>>>>>    Set Main_DD To oSalesP_DD
30060>>>>>>>    Set Server  To oSalesP_DD
30061>>>>>>>
30061>>>>>>>
30061>>>>>>>    Object oWebMainPanel is a cWebPanel
30063>>>>>>>        Set piColumnCount to 5
30064>>>>>>>
30064>>>>>>>        Object oPromptList is a cWebPromptList
30066>>>>>>>            Set pbFillHeight to True
30067>>>>>>>            Set piColumnSpan to 5
30068>>>>>>>            
30068>>>>>>>            // Since there are only a few records, we set this property so all records are sent to 
30068>>>>>>>            // the client at once. This improves the performance of scrolling and searching and 
30068>>>>>>>            // enables sorting on all columns.
30068>>>>>>>            Set peDbGridType to gtAllData
30069>>>>>>>
30069>>>>>>>            Object oSalesPID is a cWebColumn
30071>>>>>>>                Entry_Item SalesP.ID
30072>>>>>>>                Set psCaption to "ID"
30073>>>>>>>                Set piWidth to 70
30074>>>>>>>            End_Object 
30075>>>>>>>
30075>>>>>>>            Object oSalesPName is a cWebColumn
30077>>>>>>>                Entry_Item SalesP.Name
30078>>>>>>>                Set psCaption to "Sales Person Name"
30079>>>>>>>                Set piWidth to 262
30080>>>>>>>            End_Object 
30081>>>>>>>        End_Object 
30082>>>>>>>
30082>>>>>>>        Object oOkButton is a cWebButton
30084>>>>>>>            Set psCaption to "OK"
30085>>>>>>>            Set piColumnSpan to 1
30086>>>>>>>            Set piColumnIndex to 2
30087>>>>>>>
30087>>>>>>>            Procedure OnClick
30090>>>>>>>                Send Ok of oPromptList
30091>>>>>>>            End_Procedure
30092>>>>>>>
30092>>>>>>>        End_Object 
30093>>>>>>>
30093>>>>>>>        Object oCancelButton is a cWebButton
30095>>>>>>>            Set psCaption to "Cancel"
30096>>>>>>>            Set piColumnSpan to 1
30097>>>>>>>            Set piColumnIndex to 3
30098>>>>>>>            Procedure OnClick
30101>>>>>>>                Send Cancel of oPromptList
30102>>>>>>>            End_Procedure
30103>>>>>>>
30103>>>>>>>        End_Object 
30104>>>>>>>
30104>>>>>>>        Object oSearchButton is a cWebButton
30106>>>>>>>            Set psCaption to "Search..."
30107>>>>>>>            Set piColumnSpan to 1
30108>>>>>>>            Set piColumnIndex to 4
30109>>>>>>>
30109>>>>>>>            Procedure OnClick
30112>>>>>>>                Send Search of oPromptList
30113>>>>>>>            End_Procedure
30114>>>>>>>
30114>>>>>>>        End_Object 
30115>>>>>>>    End_Object 
30116>>>>>>>
30116>>>>>>>    Set pbServerOnShow to True
30117>>>>>>>    Procedure OnShow 
30120>>>>>>>        Send InitializePromptList of oPromptList
30121>>>>>>>    End_Procedure 
30122>>>>>>>
30122>>>>>>>    Set pbServerOnSubmit to True
30123>>>>>>>    Procedure OnSubmit 
30126>>>>>>>        Send Ok of oPromptList
30127>>>>>>>    End_Procedure 
30128>>>>>>>
30128>>>>>>>End_Object 
30129>>>>>
30129>>>>>
30129>>>Use OrderHea.DD
Including file: OrderHea.dd    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\OrderHea.dd)
30129>>>>>Use  Windows.pkg           // Basic Definitions
30129>>>>>Use  DataDict.pkg          // DataDictionary Class Definition
30129>>>>>Use  DDvalTbl.pkg          // Validation Table Class Definitions
30129>>>>>
30129>>>>>Open OrderHea
30131>>>>>Open OrderDtl
30133>>>>>Open Customer
30135>>>>>Open SalesP
30137>>>>>Open OrdSys
30139>>>>>
30139>>>>>
30139>>>>>Register_Object Terms_table
30139>>>>>Register_Object Ship_Table
30139>>>>>
30139>>>>>Object Terms_table  is a DescriptionValidationTable
30141>>>>>
30141>>>>>    Procedure Fill_List
30144>>>>>        Forward Send Fill_List
30146>>>>>        Send Add_Table_Value  "NONE"  "None established"
30147>>>>>        Send Add_Table_Value  "COD"  "COD"
30148>>>>>        Send Add_Table_Value  "NET30"  "Net 30"
30149>>>>>        Send Add_Table_Value  "NET60"  "Net 60"
30150>>>>>        Send Add_Table_Value  "NET90"  "Net 90"
30151>>>>>        Send Add_Table_Value  "PREPAY"  "Pre-payment required"
30152>>>>>    End_Procedure    // Fill_List
30153>>>>>End_Object   // Terms_table
30154>>>>>
30154>>>>>Object Ship_Table  is a CodeValidationTable
30156>>>>>    Set Type_Value        To "SHIPPING"
30157>>>>>    Set Allow_Blank_State To True
30158>>>>>End_Object   // Ship_Table
30159>>>>>
30159>>>>>Register_Object OrderHea_sl
30159>>>>>Register_Object oOrderWebLookup
30159>>>>>
30159>>>>>Class OrderHea_DataDictionary is a DataDictionary
30160>>>>>
30160>>>>>    Procedure Construct_Object
30162>>>>>        Forward Send Construct_Object
30164>>>>>
30164>>>>>        Set Main_File To OrderHea.File_Number
30165>>>>>
30165>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
30166>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
30167>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
30168>>>>>
30168>>>>>        Set Add_Client_File to OrderDtl.File_Number
30169>>>>>
30169>>>>>        Set Add_Server_File to Customer.File_Number
30170>>>>>        Set Add_Server_File to SalesP.File_Number
30171>>>>>
30171>>>>>        Set ParentNoSwitchIfCommitted Customer.File_Number to True
30172>>>>>
30172>>>>>        Set Add_System_File to OrdSys.File_Number DD_LOCK_ON_NEW_SAVE_DELETE
30173>>>>>
30173>>>>>        Set Field_Auto_Increment Field OrderHea.Order_Number to File_Field OrdSys.Order_Number
30174>>>>>
30174>>>>>
30174>>>>>        Set Field_Option Field OrderHea.Order_Number DD_AUTOFIND to True
30175>>>>>        Set Field_Prompt_Object Field OrderHea.Order_Number to OrderHea_SL
30176>>>>>        Set Field_WebPrompt_Object Field OrderHea.Order_Number to oOrderWebLookup
30177>>>>>        
30177>>>>>        Set Key_Field_State Field OrderHea.Order_Number to True
30178>>>>>        Set Status_Help Field OrderHea.Order_Number To "Order Number - New orders are assigned numbers automatically"
30179>>>>>
30179>>>>>
30179>>>>>        Set Field_Class_Name Field OrderHea.Order_Date To "dbSpinForm"
30180>>>>>        Set Field_Entry_msg Field OrderHea.Order_Date To Entry_Order_Date
30181>>>>>        Set Field_Mask_Type Field OrderHea.Order_Date To MASK_DATE_WINDOW
30182>>>>>        Set Field_Prompt_Object Field OrderHea.Order_Date to OrderHea_SL
30183>>>>>        Set Field_WebPrompt_Object Field OrderHea.Order_Date to oOrderWebLookup
30184>>>>>
30184>>>>>        Set Status_Help Field OrderHea.Order_Date to "Date on which the order was placed"
30185>>>>>
30185>>>>>        Set Field_Class_Name Field OrderHea.Terms To "dbComboForm"
30186>>>>>        Set Field_Value_Table Field OrderHea.Terms to Terms_table
30187>>>>>        Set Status_Help Field OrderHea.Terms To "Payment terms"
30188>>>>>
30188>>>>>        Set Field_Class_Name Field OrderHea.Ship_Via To "dbComboForm"
30189>>>>>        Set Field_Value_Table Field OrderHea.Ship_Via to Ship_Table
30190>>>>>        Set Status_Help Field OrderHea.Ship_Via To "Shipping method"
30191>>>>>
30191>>>>>        Set Status_Help Field OrderHea.Ordered_By To "Order placed by"
30192>>>>>        Set Field_Option Field OrderHea.Ordered_By DD_COMMIT to True
30193>>>>>
30193>>>>>        Set Field_Label_Long Field OrderHea.Salesperson_ID To "Sales Person ID"
30194>>>>>        Set Field_Label_Short Field OrderHea.Salesperson_ID To "Sales ID"
30195>>>>>        Set Status_Help Field OrderHea.Salesperson_ID To "Sales Person who initiated the order"
30196>>>>>
30196>>>>>        Set Field_Mask_Type Field OrderHea.Order_Total To MASK_CURRENCY_WINDOW
30197>>>>>        Set Field_Option Field OrderHea.Order_Total DD_DISPLAYONLY to True
30198>>>>>
30198>>>>>
30198>>>>>    End_Procedure  // Construct_Object
30199>>>>>
30199>>>>>    Procedure Field_Defaults
30201>>>>>        Forward Send Field_Defaults
30203>>>>>    End_Procedure
30204>>>>>
30204>>>>>    // Add a default date if the field is blank
30204>>>>>    Procedure Entry_Order_Date Integer iField Date dDate
30206>>>>>         Integer iChanged
30206>>>>>         
30206>>>>>         Get Field_Changed_State iField To iChanged
30207>>>>>         If (iChanged=0 And dDate=0) Begin
30209>>>>>            SysDate dDate
30210>>>>>            Set Field_Default_Value iField To dDate
30211>>>>>         End
30211>>>>>>
30211>>>>>    End_Procedure
30212>>>>>
30212>>>>>    Procedure Update
30214>>>>>        Forward Send Update
30216>>>>>        Send Adjust_Balances OrderHea.Order_Total
30217>>>>>    End_Procedure
30218>>>>>
30218>>>>>    Procedure Backout
30220>>>>>        Forward Send Backout
30222>>>>>        Send Adjust_Balances (-OrderHea.Order_Total)
30223>>>>>    End_Procedure
30224>>>>>
30224>>>>>    Procedure Adjust_Balances Number Amt
30226>>>>>        Add Amt To Customer.Purchases
30227>>>>>        Add Amt To Customer.Balance
30228>>>>>    End_Procedure
30229>>>>>
30229>>>>>    Procedure Deleting
30231>>>>>        Forward Send Deleting
30233>>>>>        // see if we can decrement the order number in sys table...
30233>>>>>        // can only do this if this is the newest order.
30233>>>>>        If (OrderHea.Order_Number=OrdSys.Order_Number) Begin // if this is
30235>>>>>           Decrement OrdSys.Order_Number          // the last number,
30236>>>>>           Saverecord OrdSys                      // decrement and save.
30237>>>>>        End
30237>>>>>>
30237>>>>>    End_Procedure
30238>>>>>
30238>>>>>End_Class    //  OrderHea_DataDictionary
30239>>>>>Use OrderWebLookup.wo
Including file: OrderWebLookup.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\OrderWebLookup.wo)
30239>>>>>>>// Order Lookup List
30239>>>>>>>//
30239>>>>>>>
30239>>>>>>>Use cWebModalDialog
30239>>>>>>>Use cWebPanel.pkg
30239>>>>>>>Use cWebButton.pkg
30239>>>>>>>Use cWebPromptList.pkg
30239>>>>>>>Use cWebColumn.pkg
30239>>>>>>>
30239>>>>>>>Use Customer.DD
30239>>>>>>>Use SalesP.DD
30239>>>>>>>Use OrderHea.DD
30239>>>>>>>
30239>>>>>>>Object oOrderWebLookup is a cWebModalDialog
30241>>>>>>>    Set piColumnCount to 8
30242>>>>>>>    Set psCaption to "Order Lookup List"
30243>>>>>>>    Set piWidth to 700
30244>>>>>>>    Set piHeight to 400
30245>>>>>>>
30245>>>>>>>    Object oCustomer_DD is a Customer_DataDictionary
30247>>>>>>>    End_Object 
30248>>>>>>>
30248>>>>>>>    Object oSalesP_DD is a SalesP_DataDictionary
30250>>>>>>>    End_Object 
30251>>>>>>>
30251>>>>>>>    Object oOrderHea_DD is a OrderHea_DataDictionary
30253>>>>>>>        Set DDO_Server To oCustomer_DD
30254>>>>>>>        Set DDO_Server To oSalesP_DD
30255>>>>>>>    End_Object 
30256>>>>>>>
30256>>>>>>>    Set Main_DD To oOrderHea_DD
30257>>>>>>>    Set Server  To oOrderHea_DD
30258>>>>>>>
30258>>>>>>>
30258>>>>>>>    Object oWebMainPanel is a cWebPanel
30260>>>>>>>        Set piColumnCount to 8
30261>>>>>>>
30261>>>>>>>        Object oPromptList is a cWebPromptList
30263>>>>>>>            Set pbFillHeight to True
30264>>>>>>>            Set piColumnSpan to 8
30265>>>>>>>
30265>>>>>>>            Object oOrderHeaOrder_Number is a cWebColumn
30267>>>>>>>                Entry_Item OrderHea.Order_Number
30268>>>>>>>                Set psCaption to "Order Num"
30269>>>>>>>                Set piWidth to 115
30270>>>>>>>            End_Object 
30271>>>>>>>
30271>>>>>>>            Object oCustomerName is a cWebColumn
30273>>>>>>>                Entry_Item Customer.Name
30274>>>>>>>                Set psCaption to "Customer"
30275>>>>>>>                Set piWidth to 315
30276>>>>>>>            End_Object 
30277>>>>>>>
30277>>>>>>>            Object oSalesPName is a cWebColumn
30279>>>>>>>                Entry_Item SalesP.Name
30280>>>>>>>                Set psCaption to "Sales Person"
30281>>>>>>>                Set piWidth to 262
30282>>>>>>>            End_Object 
30283>>>>>>>
30283>>>>>>>            Object oOrderHeaOrder_Total is a cWebColumn
30285>>>>>>>                Entry_Item OrderHea.Order_Total
30286>>>>>>>                Set psCaption to "Price"
30287>>>>>>>                Set piWidth to 115
30288>>>>>>>            End_Object 
30289>>>>>>>        End_Object 
30290>>>>>>>
30290>>>>>>>        Object oOkButton is a cWebButton
30292>>>>>>>            Set psCaption to "OK"
30293>>>>>>>            Set piColumnSpan to 1
30294>>>>>>>            Set piColumnIndex to 5
30295>>>>>>>
30295>>>>>>>            Procedure OnClick
30298>>>>>>>                Send Ok of oPromptList
30299>>>>>>>            End_Procedure
30300>>>>>>>
30300>>>>>>>        End_Object 
30301>>>>>>>
30301>>>>>>>        Object oCancelButton is a cWebButton
30303>>>>>>>            Set psCaption to "Cancel"
30304>>>>>>>            Set piColumnSpan to 1
30305>>>>>>>            Set piColumnIndex to 6
30306>>>>>>>            Procedure OnClick
30309>>>>>>>                Send Cancel of oPromptList
30310>>>>>>>            End_Procedure
30311>>>>>>>
30311>>>>>>>        End_Object 
30312>>>>>>>
30312>>>>>>>        Object oSearchButton is a cWebButton
30314>>>>>>>            Set psCaption to "Search..."
30315>>>>>>>            Set piColumnSpan to 1
30316>>>>>>>            Set piColumnIndex to 7
30317>>>>>>>
30317>>>>>>>            Procedure OnClick
30320>>>>>>>                Send Search of oPromptList
30321>>>>>>>            End_Procedure
30322>>>>>>>
30322>>>>>>>        End_Object 
30323>>>>>>>    End_Object 
30324>>>>>>>
30324>>>>>>>    Set pbServerOnShow to True
30325>>>>>>>    Procedure OnShow 
30328>>>>>>>        Send InitializePromptList of oPromptList
30329>>>>>>>    End_Procedure 
30330>>>>>>>
30330>>>>>>>    Set pbServerOnSubmit to True
30331>>>>>>>    Procedure OnSubmit 
30334>>>>>>>        Send Ok of oPromptList
30335>>>>>>>    End_Procedure 
30336>>>>>>>
30336>>>>>>>End_Object 
30337>>>>>
30337>>>>>
30337>>>Use OrderDtl.DD
Including file: OrderDtl.dd    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\OrderDtl.dd)
30337>>>>>Use  Windows.pkg           // Basic Definitions
30337>>>>>Use  DataDict.pkg          // DataDictionary Class Definition
30337>>>>>Use  DDvalTbl.pkg          // Validation Table Class Definitions
30337>>>>>
30337>>>>>Open OrderDtl
30339>>>>>Open OrderHea
30341>>>>>Open Invt
30343>>>>>
30343>>>>>
30343>>>>>Class OrderDtl_DataDictionary Is A DataDictionary
30344>>>>>
30344>>>>>    Procedure Construct_Object
30346>>>>>        Forward Send Construct_Object
30348>>>>>
30348>>>>>        Set Main_File To OrderDtl.File_Number
30349>>>>>        Set Cascade_Delete_State To False
30350>>>>>
30350>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
30351>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
30352>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
30353>>>>>
30353>>>>>        Set Add_Server_File to OrderHea.File_Number
30354>>>>>        Set Add_Server_File to Invt.File_Number
30355>>>>>
30355>>>>>        Set Field_Auto_Increment Field OrderDtl.Detail_Number to File_Field OrderHea.Last_Detail_Num
30356>>>>>
30356>>>>>
30356>>>>>        Set Field_Option Field OrderDtl.Order_Number DD_NOPUT to True
30357>>>>>
30357>>>>>        Set Field_Option Field OrderDtl.Detail_Number DD_NOPUT to True
30358>>>>>
30358>>>>>
30358>>>>>        Set Field_Exit_msg Field OrderDtl.Qty_Ordered To Adjust_Display_Total
30359>>>>>        Set Field_Label_Long Field OrderDtl.Qty_Ordered To "Quantity Ordered"
30360>>>>>        Set Field_Label_Short Field OrderDtl.Qty_Ordered To "Quantity"
30361>>>>>        Set Field_Mask_Type Field OrderDtl.Qty_Ordered to Mask_Numeric_Window
30362>>>>>        Set Status_Help Field OrderDtl.Qty_Ordered To "Number of items ordered"
30363>>>>>
30363>>>>>        Set Field_Entry_msg Field OrderDtl.Price To Entering_Price
30364>>>>>        Set Field_Exit_msg Field OrderDtl.Price To Adjust_Display_Total
30365>>>>>        Set Field_Label_Long Field OrderDtl.Price To "Price per Unit"
30366>>>>>        Set Field_Label_Short Field OrderDtl.Price To "Price"
30367>>>>>        Set Field_Mask_Type Field OrderDtl.Price To MASK_CURRENCY_WINDOW
30368>>>>>        Set Status_Help Field OrderDtl.Price To "Price per Unit"
30369>>>>>
30369>>>>>        Set Field_Label_Long Field OrderDtl.Extended_Price To "Extended Price"
30370>>>>>        Set Field_Label_Short Field OrderDtl.Extended_Price To "Total"
30371>>>>>        Set Field_Mask_Type Field OrderDtl.Extended_Price To MASK_CURRENCY_WINDOW
30372>>>>>        Set Field_Option Field OrderDtl.Extended_Price DD_DISPLAYONLY to True
30373>>>>>        Set Status_Help Field OrderDtl.Extended_Price To "Total extended price"
30374>>>>>
30374>>>>>    End_Procedure  //  Construct_Object
30375>>>>>
30375>>>>>    // Update and Backout need to adjust the Invt.On_Hand quantity,
30375>>>>>    // the OrderDtl line's extended price and the OrderHea total.
30375>>>>>    // We will call the same procedure (Adjust_Balances) to insure that
30375>>>>>    // Backout and Update are inverses of each other.
30375>>>>>    // Note that Backout does not need to change the extended_price.
30375>>>>>    // This only gets changed as part of update.
30375>>>>>    Procedure Update
30377>>>>>        Forward Send Update
30379>>>>>        Move (OrderDtl.Price * OrderDtl.Qty_Ordered) To OrderDtl.Extended_Price
30380>>>>>        Send Adjust_Balances OrderDtl.Qty_Ordered OrderDtl.Extended_Price
30381>>>>>    End_Procedure
30382>>>>>    
30382>>>>>    Procedure Backout
30384>>>>>        Forward Send Backout
30386>>>>>        Send Adjust_Balances (-OrderDtl.Qty_Ordered) (-OrderDtl.Extended_Price)
30387>>>>>    End_Procedure
30388>>>>>
30388>>>>>    // Called by Backout and Update, passing the quantity and the extended price. 
30388>>>>>    // Subtract quantity from on-hand Invt and add extended Amt to order total.
30388>>>>>    Procedure Adjust_Balances Number Qty Number Amt
30390>>>>>        Subtract Qty From Invt.On_Hand
30391>>>>>        Add      Amt To   OrderHea.Order_Total
30392>>>>>    End_Procedure
30393>>>>>
30393>>>>>    // When entering the price field, we may wish to update the
30393>>>>>    // current field value with the standard unit price from the Invt table.
30393>>>>>    // Only do this if the current amount is zero and an item was actually picked.
30393>>>>>    // If non-zero or no item picked, we assume the field is being edited (and we make no assumptions).
30393>>>>>    Procedure Entering_Price Integer Field# Number nAmnt
30395>>>>>        Handle hoInvtDD
30395>>>>>        Boolean bHasRecord
30395>>>>>
30395>>>>>        Get Data_Set Invt.File_Number to hoInvtDD
30396>>>>>
30396>>>>>        If (hoInvtDD) Begin
30398>>>>>            Get HasRecord of hoInvtDD to bHasRecord
30399>>>>>        
30399>>>>>            If (nAmnt=0 and bHasRecord) Begin
30401>>>>>               Get File_Field_Current_Value File_Field Invt.Unit_Price to nAmnt
30402>>>>>               Set Field_Changed_Value Field# to nAmnt
30403>>>>>               Send Adjust_Display_Total
30404>>>>>            End
30404>>>>>>
30404>>>>>        End
30404>>>>>>
30404>>>>>    End_Procedure
30405>>>>>
30405>>>>>    // This updates the extended price field, which will update any display balances.
30405>>>>>    // This is only done for display purposes.
30405>>>>>    // The actual amount is updated to the field during the save.
30405>>>>>    Procedure Adjust_Display_total Integer iField String sValue
30407>>>>>        Integer iQty
30407>>>>>        Number  nAmnt
30407>>>>>        
30407>>>>>        Get Field_Current_Value Field OrderDtl.Qty_Ordered    To iQty
30408>>>>>        Get Field_Current_Value Field OrderDtl.Price          To nAmnt
30409>>>>>        Set Field_Current_Value Field OrderDtl.Extended_Price To (nAmnt * iQty)
30410>>>>>        // note: we set value, but not changed_state!
30410>>>>>    End_Procedure
30411>>>>>
30411>>>>>
30411>>>>>    Procedure Field_Defaults
30413>>>>>        Forward Send Field_Defaults
30415>>>>>        Set Field_Changed_Value Field OrderDtl.Qty_Ordered to 1
30416>>>>>    End_Procedure    // Field_Defaults
30417>>>>>    
30417>>>>>End_Class    //  OrderDtl_DataDictionary
30418>>>>>
30418>>>Use cWebParentCombo.pkg
30418>>>
30418>>>Object oOrder is a cWebView
30420>>>    Set piColumnCount to 10
30421>>>    Set psCaption to "Order Entry"
30422>>>    Set piWidth to 800
30423>>>    
30423>>>    Delegate Set phoDefaultView to Self      // Automatically load this view when starting the webapp
30425>>>
30425>>>    Object oVendor_DD is a Vendor_DataDictionary
30427>>>    End_Object 
30428>>>
30428>>>    Object oInvt_DD is a Invt_DataDictionary
30430>>>        Set DDO_Server To oVendor_DD
30431>>>        
30431>>>        Procedure OnPostFind Integer eMessage Boolean bFound
30434>>>            Boolean bSynching
30434>>>
30434>>>            // Each time an inventory item is selected, we use the unit price as the
30434>>>            // suggested price for the line item.
30434>>>            
30434>>>            Get AppSynching to bSynching
30435>>>            // Do not perform this action while synchronizing DDOs to the WebApp Client
30435>>>            If (not(bSynching)) Begin
30437>>>                Send SetPriceDefault of oOrderDtl_DD Invt.Unit_Price
30438>>>            End
30438>>>>
30438>>>        End_Procedure
30439>>>    End_Object 
30440>>>
30440>>>    Object oCustomer_DD is a Customer_DataDictionary
30442>>>    End_Object 
30443>>>
30443>>>    Object oSalesP_DD is a SalesP_DataDictionary
30445>>>    End_Object 
30446>>>
30446>>>    Object oOrderHea_DD is a OrderHea_DataDictionary
30448>>>        Set DDO_Server To oCustomer_DD
30449>>>        Set DDO_Server To oSalesP_DD
30450>>>        // this lets you save a new parent DD record from within child DD
30450>>>        Set Allow_Foreign_New_Save_State to True
30451>>>    End_Object 
30452>>>
30452>>>    Object oOrderDtl_DD is a OrderDtl_DataDictionary
30454>>>        Set DDO_Server To oOrderHea_DD
30455>>>        Set DDO_Server To oInvt_DD
30456>>>        Set Constrain_File To OrderHea.File_Number
30457>>>
30457>>>        // set the default price and adjust the display total
30457>>>        Procedure SetPriceDefault Number nNum
30460>>>            Set Field_Changed_Value Field OrderDtl.Price to nNum
30461>>>            Send Adjust_Display_total 
30462>>>        End_Procedure
30463>>>    End_Object 
30464>>>
30464>>>    Set Main_DD To oOrderHea_DD
30465>>>    Set Server  To oOrderHea_DD
30466>>>
30466>>>
30466>>>    Object oWebMainPanel is a cWebPanel
30468>>>        Set piColumnCount to 10
30469>>>
30469>>>        Object oOrderHeaOrder_Number is a cWebForm
30471>>>            Entry_Item OrderHea.Order_Number
30472>>>            Set piColumnSpan to 3
30473>>>            Set piColumnIndex to 0
30474>>>            Set psLabel to "Order Number:"
30475>>>            Set peLabelAlign to alignRight
30476>>>        End_Object 
30477>>>
30477>>>        Object oCustomerCustomer_Number is a cWebForm
30479>>>            Entry_Item Customer.Customer_Number
30480>>>            Set piColumnSpan to 3
30481>>>            Set piColumnIndex to 3
30482>>>            Set psLabel to "Customer Number:"
30483>>>            Set peLabelAlign to alignRight
30484>>>        End_Object 
30485>>>
30485>>>        Object oOrderHeaOrder_Date is a cWebDateForm
30487>>>            Entry_Item OrderHea.Order_Date
30488>>>            Set piColumnSpan to 4
30489>>>            Set piColumnIndex to 6
30490>>>            Set psLabel to "Order Date:"
30491>>>            Set peLabelAlign to alignRight
30492>>>        End_Object 
30493>>>
30493>>>        Object oCustomerName is a cWebForm
30495>>>            Entry_Item Customer.Name
30496>>>            Set piColumnSpan to 6
30497>>>            Set piColumnIndex to 0
30498>>>            Set psLabel to "Customer Name:"
30499>>>            Set peLabelAlign to alignRight
30500>>>        End_Object 
30501>>>
30501>>>        Object oCustomerAddress is a cWebForm
30503>>>            Entry_Item Customer.Address
30504>>>            Set piColumnSpan to 6
30505>>>            Set piColumnIndex to 0
30506>>>            Set psLabel to "Street Address:"
30507>>>            Set peLabelAlign to alignRight
30508>>>        End_Object 
30509>>>
30509>>>        Object oCustomerCity is a cWebForm
30511>>>            Entry_Item Customer.City
30512>>>            Set piColumnSpan to 3
30513>>>            Set piColumnIndex to 0
30514>>>            Set psLabel to "City:"
30515>>>            Set peLabelAlign to alignRight
30516>>>        End_Object 
30517>>>
30517>>>        Object oCustomerZip is a cWebForm
30519>>>            Entry_Item Customer.Zip
30520>>>            Set piColumnSpan to 3
30521>>>            Set piColumnIndex to 3
30522>>>            Set psLabel to "Zip:"
30523>>>            Set peLabelAlign to alignRight
30524>>>        End_Object 
30525>>>
30525>>>        Object oOrderHeaOrdered_By is a cWebForm
30527>>>            Entry_Item OrderHea.Ordered_By
30528>>>            Set piColumnSpan to 3
30529>>>            Set piColumnIndex to 7
30530>>>            Set psLabel to "Ordered By:"
30531>>>            Set peLabelAlign to alignRight
30532>>>        End_Object 
30533>>>
30533>>>        Object oCustomerState is a cWebCombo
30535>>>            Entry_Item Customer.State
30536>>>            Set piColumnSpan to 3
30537>>>            Set piColumnIndex to 0
30538>>>            Set psLabel to "State:"
30539>>>            Set peLabelAlign to alignRight
30540>>>        End_Object 
30541>>>
30541>>>        Object oSalesPID is a cWebParentCombo
30543>>>            Entry_Item SalesP.Name
30544>>>            Set piColumnSpan to 5
30545>>>            Set piColumnIndex to 5
30546>>>            Set psLabel to "Salesperson:"
30547>>>            Set peLabelAlign to alignRight
30548>>>        End_Object 
30549>>>
30549>>>        Object oOrderHeaTerms is a cWebCombo
30551>>>            Entry_Item OrderHea.Terms
30552>>>            Set piColumnSpan to 5
30553>>>            Set piColumnIndex to 0
30554>>>            Set psLabel to "Terms:"
30555>>>            Set peLabelAlign to alignRight
30556>>>        End_Object 
30557>>>
30557>>>        Object oOrderHeaShip_Via is a cWebCombo
30559>>>            Entry_Item OrderHea.Ship_Via
30560>>>            Set piColumnSpan to 5
30561>>>            Set piColumnIndex to 5
30562>>>            Set psLabel to "Ship Via:"
30563>>>            Set peLabelAlign to alignRight
30564>>>        End_Object 
30565>>>
30565>>>        Object oDetailGrid is a cWebGrid
30567>>>            Set Server to oOrderDtl_DD
30568>>>            Set piOrdering to 1
30569>>>            Set pbFillHeight to True
30570>>>            Set piColumnSpan to 10
30571>>>            Set piMinHeight to 200
30572>>>
30572>>>            Object oInvtItem_ID is a cWebColumn
30574>>>                Entry_Item Invt.Item_ID
30575>>>                Set psCaption to "Item ID"
30576>>>                Set piWidth to 130
30577>>>            End_Object 
30578>>>
30578>>>            Object oInvtDescription is a cWebColumn
30580>>>                Entry_Item Invt.Description
30581>>>                Set psCaption to "Description"
30582>>>                Set piWidth to 320
30583>>>            End_Object 
30584>>>
30584>>>            Object oInvtUnit_Price is a cWebColumn
30586>>>                Entry_Item Invt.Unit_Price
30587>>>                Set psCaption to "Unit Price"
30588>>>                Set piWidth to 94
30589>>>            End_Object 
30590>>>
30590>>>            Object oOrderDtlPrice is a cWebColumn
30592>>>                Entry_Item OrderDtl.Price
30593>>>                Set psCaption to "Price"
30594>>>                Set piWidth to 94
30595>>>                Set pbServerOnChange to True
30596>>>                
30596>>>                Procedure OnChange String sNewValue String sOldValue
30599>>>                    Send Adjust_Display_total of oOrderDtl_DD
30600>>>                End_Procedure
30601>>>            End_Object 
30602>>>
30602>>>            Object oOrderDtlQty_Ordered is a cWebColumn
30604>>>                Entry_Item OrderDtl.Qty_Ordered
30605>>>                Set psCaption to "Quantity"
30606>>>                Set piWidth to 94
30607>>>                Set pbServerOnChange to True
30608>>>                
30608>>>                Procedure OnChange String sNewValue String sOldValue
30611>>>                    Send Adjust_Display_total of oOrderDtl_DD
30612>>>                End_Procedure
30613>>>            End_Object 
30614>>>
30614>>>            Object oOrderDtlExtended_Price is a cWebColumn
30616>>>                Entry_Item OrderDtl.Extended_Price
30617>>>                Set psCaption to "Total"
30618>>>                Set piWidth to 115
30619>>>            End_Object 
30620>>>        End_Object 
30621>>>        Object oOrderHea_Order_Total is a cWebForm
30623>>>            Entry_Item OrderHea.Order_Total
30624>>>            Set psLabel to "Order Total:"
30625>>>            
30625>>>            Set piColumnIndex to 6
30626>>>            Set peLabelAlign to alignRight
30627>>>            Set piColumnSpan to 4
30628>>>        End_Object
30629>>>    End_Object 
30630>>>
30630>>>End_Object 
30631>    Use Customer.wo
Including file: Customer.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\Customer.wo)
30631>>>// Customer Maintenance
30631>>>//
30631>>>
30631>>>Use cWebView.pkg
30631>>>Use cWebPanel.pkg
30631>>>Use cWebForm.pkg
30631>>>Use cWebCheckBox.pkg
30631>>>Use cWebTabContainer.pkg
30631>>>Use cWebTabPage.pkg
30631>>>Use cWebCombo.pkg
30631>>>Use cWebEdit.pkg
30631>>>
30631>>>Use Customer.DD
30631>>>
30631>>>Object oCustomer is a cWebView
30633>>>    Set piColumnCount to 10
30634>>>    Set psCaption to "Customer Maintenance"
30635>>>    Set piWidth to 600
30636>>>
30636>>>
30636>>>    Object oCustomer_DD is a Customer_DataDictionary
30638>>>    End_Object 
30639>>>
30639>>>    Set Main_DD To oCustomer_DD
30640>>>    Set Server  To oCustomer_DD
30641>>>
30641>>>    Object oWebMainPanel is a cWebPanel
30643>>>        Set piColumnCount to 10
30644>>>
30644>>>        Object oCustomerCustomer_Number is a cWebForm
30646>>>            Entry_Item Customer.Customer_Number
30647>>>            Set piColumnSpan to 4
30648>>>            Set piColumnIndex to 0
30649>>>            Set psLabel to "Customer Num:"
30650>>>            Set peLabelAlign to alignRight
30651>>>        End_Object 
30652>>>
30652>>>        Object oCustomerName is a cWebForm
30654>>>            Entry_Item Customer.Name
30655>>>            Set piColumnSpan to 6
30656>>>            Set piColumnIndex to 4
30657>>>            Set psLabel to "Name:"
30658>>>            Set peLabelAlign to alignRight
30659>>>            Set piLabelOffset to 60
30660>>>        End_Object 
30661>>>
30661>>>        Object oWebTabContainer is a cWebTabContainer
30663>>>            Set piColumnSpan to 10
30664>>>            Set pbShowLabel to False
30665>>>
30665>>>            Object oAddress_page is a cWebTabPage
30667>>>                Set piColumnCount to 10
30668>>>                Set psCaption to "Address"
30669>>>
30669>>>                Object oCustomerAddress is a cWebForm
30671>>>                    Entry_Item Customer.Address
30672>>>                    Set piColumnSpan to 9
30673>>>                    Set piColumnIndex to 0
30674>>>                    Set psLabel to "Street Address:"
30675>>>                    Set peLabelAlign to alignRight
30676>>>                End_Object 
30677>>>
30677>>>                Object oCustomerCity is a cWebForm
30679>>>                    Entry_Item Customer.City
30680>>>                    Set piColumnSpan to 5
30681>>>                    Set piColumnIndex to 0
30682>>>                    Set psLabel to "City / State / Zip:"
30683>>>                    Set peLabelAlign to alignRight
30684>>>                End_Object 
30685>>>
30685>>>                Object oCustomerState is a cWebCombo
30687>>>                    Entry_Item Customer.State
30688>>>                    Set piColumnSpan to 2
30689>>>                    Set piColumnIndex to 5
30690>>>                    Set pbShowLabel to False
30691>>>                    Set peLabelAlign to alignRight
30692>>>                End_Object 
30693>>>
30693>>>                Object oCustomerZip is a cWebForm
30695>>>                    Entry_Item Customer.Zip
30696>>>                    Set piColumnSpan to 2
30697>>>                    Set piColumnIndex to 7
30698>>>                    Set pbShowLabel to False
30699>>>                    Set peLabelAlign to alignRight
30700>>>                End_Object 
30701>>>
30701>>>                Object oCustomerPhone_Number is a cWebForm
30703>>>                    Entry_Item Customer.Phone_Number
30704>>>                    Set piColumnSpan to 5
30705>>>                    Set piColumnIndex to 0
30706>>>                    Set psLabel to "Phone Number:"
30707>>>                    Set peLabelAlign to alignRight
30708>>>                End_Object 
30709>>>
30709>>>                Object oCustomerFax_Number is a cWebForm
30711>>>                    Entry_Item Customer.Fax_Number
30712>>>                    Set piColumnSpan to 4
30713>>>                    Set piColumnIndex to 5
30714>>>                    Set psLabel to "Fax:"
30715>>>                    Set peLabelAlign to alignRight
30716>>>                    Set piLabelOffset to 50
30717>>>                End_Object 
30718>>>
30718>>>                Object oCustomerEMail_Address is a cWebForm
30720>>>                    Entry_Item Customer.EMail_Address
30721>>>                    Set piColumnSpan to 8
30722>>>                    Set piColumnIndex to 0
30723>>>                    Set psLabel to "E-Mail Address:"
30724>>>                    Set peLabelAlign to alignRight
30725>>>                End_Object 
30726>>>
30726>>>                Object oCustomerStatus is a cWebCheckBox
30728>>>                    Entry_Item Customer.Status
30729>>>                    Set piColumnIndex to 0
30730>>>                    Set psCaption to "Active Customer"
30731>>>                    Set piColumnSpan to 8
30732>>>                    Set pbShowLabel to True
30733>>>                End_Object 
30734>>>            End_Object 
30735>>>
30735>>>            Object oBalances_page is a cWebTabPage
30737>>>                Set piColumnCount to 12
30738>>>                Set psCaption to "Balances"
30739>>>
30739>>>                Object oCustomerCredit_Limit is a cWebForm
30741>>>                    Entry_Item Customer.Credit_Limit
30742>>>                    Set piColumnSpan to 6
30743>>>                    Set piColumnIndex to 0
30744>>>                    Set psLabel to "Credit Limit:"
30745>>>                    Set peLabelAlign to alignRight
30746>>>                End_Object 
30747>>>
30747>>>                Object oCustomerPurchases is a cWebForm
30749>>>                    Entry_Item Customer.Purchases
30750>>>                    Set piColumnSpan to 6
30751>>>                    Set piColumnIndex to 0
30752>>>                    Set psLabel to "Total Purchases:"
30753>>>                    Set peLabelAlign to alignRight
30754>>>                End_Object 
30755>>>
30755>>>                Object oCustomerBalance is a cWebForm
30757>>>                    Entry_Item Customer.Balance
30758>>>                    Set piColumnSpan to 6
30759>>>                    Set piColumnIndex to 0
30760>>>                    Set psLabel to "Balance Due:"
30761>>>                    Set peLabelAlign to alignRight
30762>>>                End_Object 
30763>>>            End_Object 
30764>>>
30764>>>            Object oComments_page is a cWebTabPage
30766>>>                Set piColumnCount to 10
30767>>>                Set psCaption to "Comments"
30768>>>
30768>>>                Object oCustomerComments is a cWebEdit
30770>>>                    Entry_Item Customer.Comments
30771>>>                    Set piColumnSpan to 0
30772>>>                    Set piColumnIndex to 0
30773>>>                    Set pbShowLabel to False
30774>>>                    Set pbFillHeight to True
30775>>>                    Set peLabelAlign to alignRight
30776>>>                End_Object 
30777>>>            End_Object 
30778>>>        End_Object 
30779>>>    End_Object 
30780>>>
30780>>>End_Object 
30781>    Use Inventory.wo
Including file: Inventory.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\Inventory.wo)
30781>>>// Inventory Maintenance
30781>>>//
30781>>>
30781>>>Use cWebView.pkg
30781>>>Use cWebPanel.pkg
30781>>>Use cWebForm.pkg
30781>>>
30781>>>Use Vendor.DD
30781>>>Use Invt.DD
30781>>>
30781>>>Object oInventory is a cWebView
30783>>>    Set piColumnCount to 10
30784>>>    Set psCaption to "Inventory Maintenance"
30785>>>    Set piWidth to 700
30786>>>
30786>>>    Object oVendor_DD is a Vendor_DataDictionary
30788>>>    End_Object 
30789>>>
30789>>>    Object oInvt_DD is a Invt_DataDictionary
30791>>>        Set DDO_Server To oVendor_DD
30792>>>    End_Object 
30793>>>
30793>>>    Set Main_DD To oInvt_DD
30794>>>    Set Server  To oInvt_DD
30795>>>
30795>>>
30795>>>    Object oWebMainPanel is a cWebPanel
30797>>>        Set piColumnCount to 10
30798>>>
30798>>>        Object oInvtItem_ID is a cWebForm
30800>>>            Entry_Item Invt.Item_ID
30801>>>            Set piColumnSpan to 4
30802>>>            Set piColumnIndex to 0
30803>>>            Set psLabel to "Item ID:"
30804>>>            Set peLabelAlign to alignRight
30805>>>        End_Object 
30806>>>
30806>>>        Object oInvtDescription is a cWebForm
30808>>>            Entry_Item Invt.Description
30809>>>            Set piColumnSpan to 6
30810>>>            Set piColumnIndex to 4
30811>>>            Set psLabel to "Description:"
30812>>>            Set peLabelAlign to alignRight
30813>>>        End_Object 
30814>>>
30814>>>        Object oVendorID is a cWebForm
30816>>>            Entry_Item Vendor.ID
30817>>>            Set piColumnSpan to 4
30818>>>            Set piColumnIndex to 0
30819>>>            Set psLabel to "Vendor ID:"
30820>>>            Set peLabelAlign to alignRight
30821>>>        End_Object 
30822>>>
30822>>>        Object oVendorName is a cWebForm
30824>>>            Entry_Item Vendor.Name
30825>>>            Set piColumnSpan to 6
30826>>>            Set piColumnIndex to 4
30827>>>            Set psLabel to "Vendor Name:"
30828>>>            Set peLabelAlign to alignRight
30829>>>        End_Object 
30830>>>
30830>>>        Object oInvtVendor_Part_ID is a cWebForm
30832>>>            Entry_Item Invt.Vendor_Part_ID
30833>>>            Set piColumnSpan to 5
30834>>>            Set piColumnIndex to 0
30835>>>            Set psLabel to "Vendor Part ID:"
30836>>>            Set peLabelAlign to alignRight
30837>>>        End_Object 
30838>>>
30838>>>        Object oInvtUnit_Price is a cWebForm
30840>>>            Entry_Item Invt.Unit_Price
30841>>>            Set piColumnSpan to 4
30842>>>            Set piColumnIndex to 0
30843>>>            Set psLabel to "Unit Price:"
30844>>>            Set peLabelAlign to alignRight
30845>>>        End_Object 
30846>>>
30846>>>        Object oInvtOn_Hand is a cWebForm
30848>>>            Entry_Item Invt.On_Hand
30849>>>            Set piColumnSpan to 3
30850>>>            Set piColumnIndex to 4
30851>>>            Set psLabel to "Qty On Hand:"
30852>>>            Set peLabelAlign to alignRight
30853>>>        End_Object 
30854>>>    End_Object 
30855>>>
30855>>>End_Object 
30856>    Use Vendor.wo
Including file: Vendor.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\Vendor.wo)
30856>>>// Vendor Maintenance
30856>>>//
30856>>>
30856>>>Use cWebView.pkg
30856>>>Use cWebPanel.pkg
30856>>>Use cWebForm.pkg
30856>>>Use cWebCombo.pkg
30856>>>
30856>>>Use Vendor.DD
30856>>>
30856>>>Object oVendor is a cWebView
30858>>>    Set piColumnCount to 10
30859>>>    Set psCaption to "Vendor Maintenance"
30860>>>    Set piWidth to 700
30861>>>
30861>>>    Object oVendor_DD is a Vendor_DataDictionary
30863>>>    End_Object 
30864>>>
30864>>>    Set Main_DD To oVendor_DD
30865>>>    Set Server  To oVendor_DD
30866>>>
30866>>>
30866>>>    Object oWebMainPanel is a cWebPanel
30868>>>        Set piColumnCount to 10
30869>>>
30869>>>        Object oVendorID is a cWebForm
30871>>>            Entry_Item Vendor.ID
30872>>>            Set piColumnSpan to 4
30873>>>            Set piColumnIndex to 0
30874>>>            Set psLabel to "ID:"
30875>>>            Set peLabelAlign to alignRight
30876>>>        End_Object 
30877>>>
30877>>>        Object oVendorName is a cWebForm
30879>>>            Entry_Item Vendor.Name
30880>>>            Set piColumnSpan to 6
30881>>>            Set piColumnIndex to 4
30882>>>            Set psLabel to "Name:"
30883>>>            Set peLabelAlign to alignRight
30884>>>            Set piLabelOffset to 70
30885>>>        End_Object 
30886>>>
30886>>>        Object oVendorAddress is a cWebForm
30888>>>            Entry_Item Vendor.Address
30889>>>            Set piColumnSpan to 10
30890>>>            Set piColumnIndex to 0
30891>>>            Set psLabel to "Street:"
30892>>>            Set peLabelAlign to alignRight
30893>>>        End_Object 
30894>>>
30894>>>        Object oVendorCity is a cWebForm
30896>>>            Entry_Item Vendor.City
30897>>>            Set piColumnSpan to 5
30898>>>            Set piColumnIndex to 0
30899>>>            Set psLabel to "City \ State \ ZIP:"
30900>>>            Set peLabelAlign to alignRight
30901>>>        End_Object 
30902>>>
30902>>>        Object oVendorState is a cWebCombo
30904>>>            Entry_Item Vendor.State
30905>>>            Set piColumnSpan to 3
30906>>>            Set piColumnIndex to 5
30907>>>            Set peLabelAlign to alignRight
30908>>>            Set pbShowLabel to False
30909>>>        End_Object 
30910>>>
30910>>>        Object oVendorZip is a cWebForm
30912>>>            Entry_Item Vendor.Zip
30913>>>            Set piColumnSpan to 2
30914>>>            Set piColumnIndex to 8
30915>>>            Set peLabelAlign to alignRight
30916>>>            Set pbShowLabel to False
30917>>>        End_Object 
30918>>>
30918>>>        Object oVendorPhone_Number is a cWebForm
30920>>>            Entry_Item Vendor.Phone_Number
30921>>>            Set piColumnSpan to 5
30922>>>            Set piColumnIndex to 0
30923>>>            Set psLabel to "Phone:"
30924>>>            Set peLabelAlign to alignRight
30925>>>        End_Object 
30926>>>
30926>>>        Object oVendorFax_Number is a cWebForm
30928>>>            Entry_Item Vendor.Fax_Number
30929>>>            Set piColumnSpan to 5
30930>>>            Set piColumnIndex to 5
30931>>>            Set psLabel to "Fax:"
30932>>>            Set peLabelAlign to alignRight
30933>>>        End_Object 
30934>>>    End_Object 
30935>>>
30935>>>End_Object 
30936>    Use SalesPerson.wo
Including file: SalesPerson.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\SalesPerson.wo)
30936>>>// Sales Person Maintenance
30936>>>//
30936>>>
30936>>>Use cWebView.pkg
30936>>>Use cWebPanel.pkg
30936>>>Use cWebForm.pkg
30936>>>
30936>>>Use SalesP.DD
30936>>>
30936>>>Object oSalesPerson is a cWebView
30938>>>    Set piColumnCount to 10
30939>>>    Set psCaption to "Sales Person Maintenance"
30940>>>    Set piWidth to 600
30941>>>
30941>>>    Object oSalesP_DD is a SalesP_DataDictionary
30943>>>    End_Object 
30944>>>
30944>>>    Set Main_DD To oSalesP_DD
30945>>>    Set Server  To oSalesP_DD
30946>>>
30946>>>
30946>>>    Object oWebMainPanel is a cWebPanel
30948>>>        Set piColumnCount to 10
30949>>>
30949>>>        Object oSalesPID is a cWebForm
30951>>>            Entry_Item SalesP.ID
30952>>>            Set piColumnSpan to 3
30953>>>            Set piColumnIndex to 0
30954>>>            Set psLabel to "ID:"
30955>>>            Set peLabelAlign to alignRight
30956>>>            Set piLabelOffset to 50
30957>>>        End_Object 
30958>>>
30958>>>        Object oSalesPName is a cWebForm
30960>>>            Entry_Item SalesP.Name
30961>>>            Set piColumnSpan to 7
30962>>>            Set piColumnIndex to 3
30963>>>            Set psLabel to "Name:"
30964>>>            Set peLabelAlign to alignRight
30965>>>            Set piLabelOffset to 50
30966>>>        End_Object 
30967>>>    End_Object 
30968>>>
30968>>>End_Object 
30969>    
30969>    Use CustomerListSample.wo
Including file: CustomerListSample.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\CustomerListSample.wo)
30969>>>Use cWebView.pkg
30969>>>Use cWebPanel.pkg
30969>>>Use cWebForm.pkg
30969>>>Use cWebRadio.pkg
30969>>>Use cWebCheckbox.pkg
30969>>>Use cWebForm.pkg
30969>>>Use cWebButton.pkg
30969>>>Use cWebLabel.pkg
30969>>>Use cWebGroup.pkg
30969>>>
30969>>>// Note: This sample does not actually run a DataFlex Reports report. The .pdf file that would normally
30969>>>// be generated by DataFlex Reports is a previously generated file, which was installed with DataFlex.
30969>>>
30969>>>// If you have an installed version of DataFlex Reports compatible with this version of DataFlex, then
30969>>>// you could comment out the code below to generate a live DataFlex Reports report.
30969>>>Object oCustomerListSample is a cWebView
30971>>>    Set piWidth to 700
30972>>>    Set psCaption to "Customer List (DataFlex Reports)"
30973>>>
30973>>>// If you are using DataFlex Reports, here is how you would actually
30973>>>// initialize, run and save the report to a PDF file.
30973>>>
30973>>>//    Use cDRReport.pkg // Move this line to the other USE statement lines above the cWebView component
30973>>>//
30973>>>//    Object oReport is a cDRReport
30973>>>//        Procedure OnInitializeReport
30973>>>//            Send SetFilters
30973>>>//            Send SetSortFields
30973>>>//        End_Procedure
30973>>>//
30973>>>//        Procedure SetFilters
30973>>>//            Integer[] iCustomerCustomerNumbers
30973>>>//            String[] sCustomerNames
30973>>>//            String sReportId
30973>>>//
30973>>>//            Get psReportId to sReportId
30973>>>//            Send RemoveAllFilters sReportId  // clear any previous filters
30973>>>//
30973>>>//            WebGet psValue of oFromCustomerCustomerNumber to iCustomerCustomerNumbers[0]
30973>>>//            WebGet psValue of oToCustomerCustomerNumber to iCustomerCustomerNumbers[1]
30973>>>//
30973>>>//            Move (SortArray (iCustomerCustomerNumbers)) to iCustomerCustomerNumbers
30973>>>//            If (iCustomerCustomerNumbers[0] <> 0) Begin
30973>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Customer_Number}" C_DRGreaterThanOrEqual iCustomerCustomerNumbers[0]
30973>>>//            End
30973>>>//            If (iCustomerCustomerNumbers[1] <> 0) Begin
30973>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Customer_Number}" C_DRLessThanOrEqual iCustomerCustomerNumbers[1]
30973>>>//            End
30973>>>//
30973>>>//            WebGet psValue of oFromCustomerName to sCustomerNames[0]
30973>>>//            WebGet psValue of oToCustomerName to sCustomerNames[1]
30973>>>//
30973>>>//            Move (Trim (sCustomerNames[0])) to sCustomerNames[0]
30973>>>//            Move (Trim (sCustomerNames[1])) to sCustomerNames[1]
30973>>>//            Move (SortArray (sCustomerNames)) to sCustomerNames
30973>>>//
30973>>>//            If (sCustomerNames[0] <> "") Begin
30973>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Name}" C_DRGreaterThanOrEqual sCustomerNames[0]
30973>>>//            End
30973>>>//            If (sCustomerNames[1] <> "") Begin
30973>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Name}" C_DRLessThanOrEqual sCustomerNames[1]
30973>>>//            End
30973>>>//        End_Procedure
30973>>>//
30973>>>//        Procedure SetSortFields
30973>>>//            Integer iRadio
30973>>>//            Boolean bAscending
30973>>>//
30973>>>//            WebGet psValue of oSortNumber to iRadio
30973>>>//            Get GetChecked of oSortAscending to bAscending
30973>>>//            
30973>>>//            Send RemoveAllRecordSortFields C_USEMAINDRREPORTID
30973>>>//            If (iRadio=0) Begin
30973>>>//                Send AddRecordSortField C_USEMAINDRREPORTID "{Customer.Customer_Number}" (If(bAscending, C_drAscending, C_drDescending))
30973>>>//            End
30973>>>//            Else Begin
30973>>>//                Send AddRecordSortField C_USEMAINDRREPORTID "{Customer.Name}" (If(bAscending, C_DRAscending, C_DRDescending))
30973>>>//            End
30973>>>//        End_Procedure
30973>>>//
30973>>>//        Function GenerateReport Returns String
30973>>>//            String sReportId sPath
30973>>>//            DRPDFExportOptions PDFReportOptions
30973>>>//            Boolean bCanceled
30973>>>//
30973>>>//            Set psReportName to "CustomerList.dr"
30973>>>//            Get OpenReport to sReportId
30973>>>//
30973>>>//            If (sReportId <> "") Begin
30973>>>//                Get DefaultPDFExportOptions to PDFReportOptions
30973>>>//                Move C_drHigh to PDFReportOptions.iImageQuality
30973>>>//                Set pPDFExportOptions to PDFReportOptions
30973>>>//
30973>>>//                Get ReportCacheFileName '.pdf' to sPath
30973>>>//
30973>>>//                If (sPath <> "") Begin
30973>>>//                    Send ExportReport C_DRPDF sPath
30973>>>//
30973>>>//                    // see if report ran ok, if not return empty path
30973>>>//                    Get pbCanceled to bCanceled
30973>>>//                    If (bCanceled) Begin
30973>>>//                        Move "" to sPath
30973>>>//                    End
30973>>>//                End
30973>>>//
30973>>>//                Send CloseReport sReportId
30973>>>//            End
30973>>>//            
30973>>>//            Function_Return sPath
30973>>>//        End_Function
30973>>>//    End_Object
30973>>>
30973>>>// This is a dummy object that is used in place of the report PDF that would have been
30973>>>// generated using DataFlex Reports. Note that this also shows you how to download a
30973>>>// static file (could be any kind of file) from a secure non-web location. In this case,
30973>>>// the dummy report is located in \Data, which is not a web path.
30973>>>
30973>>>    Object oReport is a cObject
30975>>>        Function GenerateReport Returns String
30978>>>            String sPath
30978>>>
30978>>>            Get GetReportsCache of ghoWebApp True to sPath
30979>>>            If (sPath <> "") Begin
30981>>>                Move (sPath + "\CustomerListSample.pdf") to sPath
30982>>>            End
30982>>>>
30982>>>            Function_Return sPath
30983>>>        End_Function
30984>>>    End_Object
30985>>>
30985>>>    Procedure RunReport
30988>>>        String sFile sUrl
30988>>>
30988>>>        // generate the report file and return its full file path name (not a URL)
30988>>>        Get GenerateReport of oReport to sFile
30989>>>
30989>>>        If (sFile="") Begin
30991>>>            Send ShowInfoBox "The Report could not be generated"
30992>>>        End
30992>>>>
30992>>>        Else Begin
30993>>>            Get DownloadURL of ghoWebResourceManager sFile to sUrl
30994>>>
30994>>>            // this is used to show a PDF file in a new browser tab or window
30994>>>            // use btNewTab to open a new browser tab page
30994>>>            // use btNewWindow to open a new browser window
30994>>>            Send NavigateToPage sUrl btNewTab
30995>>>
30995>>>            // this is used to show a PDF file in an embedded viewer within this view
30995>>>            //WebSet psUrl of oWebIFrame1 to sUrl
30995>>>        End
30995>>>>
30995>>>    End_Procedure
30996>>>
30996>>>    Object oWebMainPanel is a cWebPanel
30998>>>        Set piColumnCount to 10
30999>>>
30999>>>        Object oCustomerCustomerNumberGroup is a cWebGroup
31001>>>            Set piColumnSpan to 3
31002>>>            Set psCaption to "Customer Number:"
31003>>>            Set piColumnCount to 10
31004>>>
31004>>>            Object oFromCustomerCustomerNumber is a cWebform
31006>>>               Set psLabel to "From:"
31007>>>               Set piLabelOffset to 50
31008>>>               Set piColumnSpan to 0
31009>>>            End_Object
31010>>>
31010>>>            Object oToCustomerCustomerNumber is a cWebform
31012>>>               Set psLabel to "To:"
31013>>>               Set piLabelOffset to 50
31014>>>               Set piColumnSpan to 0
31015>>>            End_Object
31016>>>        End_Object
31017>>>
31017>>>        Object oWebLabel1 is a cWebLabel
31019>>>            Set piColumnSpan to 0
31020>>>            Set psCaption to "Note: This view simply displays a static file ('CustomerListSample.pdf'), so these settings do not really change the output."
31021>>>            Set piColumnIndex to 3
31022>>>        End_Object
31023>>>
31023>>>        Object oCustomerCustoNameGroup is a cWebGroup
31025>>>            Set psCaption to "Customer Name:"
31026>>>            Set piColumnSpan to 5
31027>>>            Set piColumnCount to 10
31028>>>
31028>>>            Object oFromCustomerName is a cWebform
31030>>>               Set psLabel to "From:"
31031>>>               Set piLabelOffset to 50
31032>>>               Set piColumnSpan to 0
31033>>>            End_Object
31034>>>
31034>>>            Object oToCustomerName is a cWebform
31036>>>               Set psLabel to "To:"
31037>>>               Set piLabelOffset to 50
31038>>>               Set piColumnSpan to 0
31039>>>            End_Object
31040>>>        End_Object
31041>>>
31041>>>        Object oSortOrderGroup is a cWebGroup
31043>>>            Set psCaption to "Order By:"
31044>>>            Set piColumnSpan to 5
31045>>>
31045>>>            Object oSortNumber is a cWebRadio
31047>>>               Set psCaption to "Customer Number"
31048>>>               Set psGroupName to "Sort"
31049>>>               Set psRadioValue to "0"
31050>>>            End_Object
31051>>>
31051>>>            Object oSortName is a cWebRadio
31053>>>               Set psCaption to "Customer Name"
31054>>>               Set psGroupName to "Sort"
31055>>>               Set psRadioValue to "1"
31056>>>            End_Object
31057>>>
31057>>>            Object oSortAscending is a cWebCheckbox
31059>>>               Set psCaption to "Ascending"
31060>>>               Set psChecked to 1
31061>>>               Set psUnChecked to 0
31062>>>               Set psValue to 1
31063>>>            End_Object
31064>>>        End_Object
31065>>>
31065>>>        Object oRunButton is a cWebButton
31067>>>            Set psCaption to "Run Report"
31068>>>            Set piColumnSpan to 3
31069>>>
31069>>>            Procedure OnClick
31072>>>                Send RunReport
31073>>>            End_Procedure
31074>>>        End_Object
31075>>>
31075>>>// this would be used if you wanted to output to an embedded window
31075>>>//        Object oWebIFrame1 is a cWebIFrame
31075>>>//           Set pbFillHeight to True
31075>>>//           Set pbShowBorder to True
31075>>>//        End_Object
31075>>>
31075>>>   End_Object
31076>>>End_Object
31077>    Use OrderListSample.wo
Including file: OrderListSample.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\OrderListSample.wo)
31077>>>Use cWebView.pkg
31077>>>Use cWebPanel.pkg
31077>>>Use cWebForm.pkg
31077>>>Use cWebRadio.pkg
31077>>>Use cWebCheckbox.pkg
31077>>>Use cWebForm.pkg
31077>>>Use cWebButton.pkg
31077>>>Use cWebLabel.pkg
31077>>>Use cWebGroup.pkg
31077>>>
31077>>>// Note: This sample does not actually run a DataFlex Reports report. The .pdf file that would normally
31077>>>// be generated by DataFlex Reports is a previously generated file which was installed with DataFlex.
31077>>>
31077>>>// If you have an installed version of DataFlex Reports compatible with this version of DataFlex, then
31077>>>// you could comment out the code below to generate a live DataFlex Reports report.
31077>>>Object oOrderListSample is a cWebView
31079>>>    Set psCaption to "Order List (DataFlex Reports)"
31080>>>    Set piWidth to 700
31081>>>    Set piColumnCount to 10
31082>>>
31082>>>// If you are using DataFlex Reports, here is how you would actually
31082>>>// initialize, run and save the report to a PDF file.
31082>>>
31082>>>//    Use cDRReport.pkg // Move this line to the other USE statement lines above the cWebView component
31082>>>//
31082>>>//    Object oReport is a cDRReport
31082>>>//        Procedure OnInitializeReport
31082>>>//            Send SetFilters
31082>>>//        End_Procedure
31082>>>//
31082>>>//        Procedure SetFilters
31082>>>//            Number nMinOrderTotal
31082>>>//            String sReportId
31082>>>//
31082>>>//            Get psReportId to sReportId
31082>>>//            Send RemoveAllFilters sReportId  // clear any previous filters
31082>>>//
31082>>>//            WebGet psValue of oFromOrderHeaOrderTotal to nMinOrderTotal
31082>>>//            // Send AddFilter C_USEMAINDRREPORTID "{OrderHea.Order_Total}" C_DRGreaterThanOrEqual nMinOrderTotal
31082>>>//            // psFilterFunction is displayed in the report's page header so we use this instead of AddFilter
31082>>>//            Set psFilterFunction C_USEMAINDRREPORTID to ('return ({OrderHea.Order_Total} > ' + String(nMinOrderTotal) + ')')
31082>>>//        End_Procedure
31082>>>//
31082>>>//        Function GenerateReport Returns String
31082>>>//            String sReportId sPath
31082>>>//            DRPDFExportOptions PDFReportOptions
31082>>>//            Boolean bCanceled
31082>>>//
31082>>>//            Set psReportName to "OrderList.DR"
31082>>>//            Get OpenReport to sReportId
31082>>>//
31082>>>//            If (sReportId <> "") Begin
31082>>>//                Get DefaultPDFExportOptions to PDFReportOptions
31082>>>//                Move C_drHigh to PDFReportOptions.iImageQuality
31082>>>//                Set pPDFExportOptions to PDFReportOptions
31082>>>//
31082>>>//                Get ReportCacheFileName '.pdf' to sPath
31082>>>//
31082>>>//                If (sPath <> "") Begin
31082>>>//                    Send ExportReport C_DRPDF sPath
31082>>>//
31082>>>//                    // see if report ran ok, if not return empty path
31082>>>//                    Get pbCanceled to bCanceled
31082>>>//                    If (bCanceled) Begin
31082>>>//                        Move "" to sPath
31082>>>//                    End
31082>>>//                End
31082>>>//
31082>>>//                Send CloseReport sReportId
31082>>>//            End
31082>>>//
31082>>>//            Function_Return sPath
31082>>>//        End_Function
31082>>>//    End_Object
31082>>>
31082>>>// This is a dummy object that is used in place of a report PDF file that would have been
31082>>>// generated using DataFlex Reports. Note that this also shows you how to download a
31082>>>// static file (could be any kind of file) from a secure non-web location. In this case,
31082>>>// the dummy report is located in \Data, which is not a web path.
31082>>>
31082>>>    Object oReport is a cObject
31084>>>        Function GenerateReport Returns String
31087>>>            String sPath
31087>>>
31087>>>            Get GetReportsCache of ghoWebApp True to sPath
31088>>>            If (sPath <> "") Begin
31090>>>                Move (sPath + "\OrderListSample.pdf") to sPath
31091>>>            End
31091>>>>
31091>>>            Function_Return sPath
31092>>>        End_Function
31093>>>    End_Object
31094>>>
31094>>>    Procedure RunReport
31097>>>        String sFile sUrl
31097>>>
31097>>>        // generate the report file and return its full file path name (not a URL)
31097>>>        Get GenerateReport of oReport to sFile
31098>>>
31098>>>        If (sFile="") Begin
31100>>>            Send ShowInfoBox "The Report could not be generated"
31101>>>        End
31101>>>>
31101>>>        Else Begin
31102>>>            Get DownloadURL of ghoWebResourceManager sFile to sUrl
31103>>>
31103>>>            // this is used to show a PDF file in a new browser tab or window
31103>>>            // use btNewTab to open a new browser tab page
31103>>>            // use btNewWindow to open a new browser window
31103>>>            Send NavigateToPage sUrl btNewTab
31104>>>
31104>>>            // this is used to show a PDF file in an embedded viewer within this view
31104>>>            //WebSet psUrl of oWebIFrame1 to sUrl
31104>>>        End
31104>>>>
31104>>>    End_Procedure
31105>>>
31105>>>    Object oOrderTotalGroup is a cWebGroup
31107>>>        Set psCaption to "Minimum Order Total:"
31108>>>        Set piColumnSpan to 3
31109>>>        Set piColumnCount to 6
31110>>>
31110>>>        Object oFromOrderHeaOrderTotal is a cWebForm
31112>>>            Set psLabel to "From:"
31113>>>            Set psValue to 5000
31114>>>            Set piColumnSpan to 6
31115>>>            Set piLabelOffset to 50
31116>>>        End_Object
31117>>>    End_Object
31118>>>
31118>>>    Object oWebLabel1 is a cWebLabel
31120>>>        Set piColumnSpan to 0
31121>>>        Set psCaption to "Note: This view simply displays a static file ('OrderListSample.pdf'), so this setting does not really change the output."
31122>>>        Set piColumnIndex to 3
31123>>>    End_Object
31124>>>
31124>>>    Object oRunButton is a cWebButton
31126>>>        Set psCaption to "Run Report"
31127>>>        Set piColumnSpan to 3
31128>>>
31128>>>        Procedure OnClick
31131>>>            Send RunReport
31132>>>        End_Procedure
31133>>>    End_Object
31134>>>
31134>>>// this would be used if you wanted to output to an embedded window
31134>>>//        Object oWebIFrame1 is a cWebIFrame
31134>>>//           Set pbFillHeight to True
31134>>>//           Set pbShowBorder to True
31134>>>//        End_Object
31134>>>End_Object
31135>    Use CustomerOrdersSample.wo
Including file: CustomerOrdersSample.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\CustomerOrdersSample.wo)
31135>>>Use cWebView.pkg
31135>>>Use cWebPanel.pkg
31135>>>Use cWebForm.pkg
31135>>>Use cWebRadio.pkg
31135>>>Use cWebCheckbox.pkg
31135>>>Use cWebForm.pkg
31135>>>Use cWebButton.pkg
31135>>>Use cWebLabel.pkg
31135>>>Use cWebIFrame.pkg
31135>>>Use cWebSpacer.pkg
31135>>>Use cWebGroup.pkg
31135>>>
31135>>>// Note: This sample does not actually run a DataFlex Reports report. The .pdf file that would normally
31135>>>// be generated by DataFlex Reports is a previously generated file, which was installed with DataFlex.
31135>>>
31135>>>// If you have an installed version of DataFlex Reports compatible with this version of DataFlex, then
31135>>>// you could comment out the code below to generate a live DataFlex Reports report.
31135>>>Object oCustomerOrdersSample is a cWebView
31137>>>    Set psCaption to "Customer Orders (DataFlex Reports)"
31138>>>    Set piMinWidth to 800
31139>>>    Set piColumnCount to 10
31140>>>
31140>>>// If you are using DataFlex Reports, here is how you would actually
31140>>>// initialize, run and save the report to a PDF file.
31140>>>//
31140>>>//    Use cDRReport.pkg // Move this line to the other USE statement lines above the cWebView component
31140>>>//
31140>>>//    Object oReport is a cDRReport
31140>>>//        Procedure OnInitializeReport
31140>>>//            Send SetFilters
31140>>>//        End_Procedure
31140>>>//
31140>>>//        Procedure SetFilters
31140>>>//            Integer[] iCustomerCustomerNumbers
31140>>>//            String sReportId
31140>>>//
31140>>>//            Get psReportId to sReportId
31140>>>//            Send RemoveAllFilters sReportId  // clear any previous filters
31140>>>//
31140>>>//            WebGet psValue of oFromCustomerCustomerNumber to iCustomerCustomerNumbers[0]
31140>>>//            WebGet psValue of oToCustomerCustomerNumber to iCustomerCustomerNumbers[1]
31140>>>//
31140>>>//            Move (SortArray (iCustomerCustomerNumbers)) to iCustomerCustomerNumbers
31140>>>//            If (iCustomerCustomerNumbers[0] <> 0) Begin
31140>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Customer_Number}" C_DRGreaterThanOrEqual iCustomerCustomerNumbers[0]
31140>>>//            End
31140>>>//            If (iCustomerCustomerNumbers[1] <> 0) Begin
31140>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Customer_Number}" C_DRLessThanOrEqual iCustomerCustomerNumbers[1]
31140>>>//            End
31140>>>//        End_Procedure
31140>>>//
31140>>>//        Function GenerateReport Returns String
31140>>>//            String sReportId sPath
31140>>>//            DRPDFExportOptions PDFReportOptions
31140>>>//            Boolean bCanceled
31140>>>//
31140>>>//            Set psReportName to "CustomerOrders.DR"
31140>>>//            Get OpenReport to sReportId
31140>>>//
31140>>>//            If (sReportId <> "") Begin
31140>>>//                Get DefaultPDFExportOptions to PDFReportOptions
31140>>>//                Move C_drHigh to PDFReportOptions.iImageQuality
31140>>>//                Set pPDFExportOptions to PDFReportOptions
31140>>>//
31140>>>//                Get ReportCacheFileName '.pdf' to sPath
31140>>>//                If (sPath <> "") Begin
31140>>>//                    Send ExportReport C_DRPDF sPath
31140>>>//
31140>>>//                    // see if report ran ok, if not return empty path
31140>>>//                    Get pbCanceled to bCanceled
31140>>>//                    If (bCanceled) Begin
31140>>>//                        Move "" to sPath
31140>>>//                    End
31140>>>//                End
31140>>>//
31140>>>//                Send CloseReport sReportId
31140>>>//            End
31140>>>//
31140>>>//            Function_Return sPath
31140>>>//        End_Function
31140>>>//    End_Object
31140>>>
31140>>>// This is a dummy object that is used in place of a report PDF that would have been
31140>>>// generated using DataFlex Reports. Note that this also shows you how to download a
31140>>>// static file (could be any kind of file) from a secure non-web location. In this case,
31140>>>// the dummy report results is located in \ReportsCache folder, which is not a web path.
31140>>>
31140>>>    Object oReport is a cObject
31142>>>        Function GenerateReport Returns String
31145>>>            String sPath
31145>>>
31145>>>            Get GetReportsCache of ghoWebApp True to sPath
31146>>>            If (sPath <> "") Begin
31148>>>                Move (sPath + "\CustomerOrderSample.pdf") to sPath
31149>>>            End
31149>>>>
31149>>>            Function_Return sPath
31150>>>        End_Function
31151>>>    End_Object
31152>>>
31152>>>    Procedure RunReport
31155>>>        String sFile sUrl
31155>>>
31155>>>        // generate the report file and return its full file path name (not a URL)
31155>>>        Get GenerateReport of oReport to sFile
31156>>>
31156>>>        If (sFile="") Begin
31158>>>            Send ShowInfoBox "The Report could not be generated"
31159>>>        End
31159>>>>
31159>>>        Else Begin
31160>>>            Get DownloadURL of ghoWebResourceManager sFile to sUrl
31161>>>
31161>>>            // this is used to show a PDF file in a new browser tab or window
31161>>>            // use btNewTab to open a new browser tab page
31161>>>            // use btNewWindow to open a new browser window
31161>>>            //Send NavigateToPage sUrl btNewTab
31161>>>
31161>>>            // this is used to show PDF in an embedded viewer within this view
31161>>>            WebSet psUrl of oWebIFrame to sUrl
31162>>>        End
31162>>>>
31162>>>    End_Procedure
31163>>>
31163>>>    Object oWebPanelTop is a cWebPanel
31165>>>        Set peRegion to prTop
31166>>>
31166>>>        Object oWebPanelTopLeft is a cWebPanel
31168>>>            Set peRegion to prLeft
31169>>>            Set piWidth to 200
31170>>>
31170>>>            Object oCustomerCustomerNumberGroup is a cWebGroup
31172>>>                Set psCaption to "Customer Number:"
31173>>>                Set piColumnSpan to 0
31174>>>                Set piColumnCount to 10
31175>>>
31175>>>                Object oFromCustomerCustomerNumber is a cWebform
31177>>>                   Set psLabel to "From:"
31178>>>                   Set piLabelOffset to 50
31179>>>                   Set piColumnSpan to 0
31180>>>                End_Object
31181>>>
31181>>>                Object oToCustomerCustomerNumber is a cWebform
31183>>>                   Set psLabel to "To:"
31184>>>                   Set piLabelOffset to 50
31185>>>                   Set piColumnSpan to 0
31186>>>                End_Object
31187>>>            End_Object
31188>>>
31188>>>            Object oRunButton is a cWebButton
31190>>>                Set psCaption to "Run Report"
31191>>>                Set piColumnSpan to 0
31192>>>
31192>>>                Procedure OnClick
31195>>>                    Send RunReport
31196>>>                End_Procedure
31197>>>            End_Object
31198>>>        End_Object
31199>>>
31199>>>        Object oWebPanelTopCenter is a cWebPanel
31201>>>            Set peRegion to prCenter
31202>>>
31202>>>            Object oWebLabel1 is a cWebLabel
31204>>>                Set piColumnSpan to 0
31205>>>                Set psCaption to "Note: This view simply displays a static file ('CustomerOrderSample.pdf'), so these settings do not really change the output."
31206>>>                Set piColumnIndex to 3
31207>>>            End_Object
31208>>>        End_Object
31209>>>    End_Object
31210>>>
31210>>>    Object oWebPanelCenter is a cWebPanel
31212>>>        Set peRegion to prCenter
31213>>>
31213>>>        // output to an embedded window
31213>>>        Object oWebIFrame is a cWebIFrame
31215>>>           Set pbFillHeight to True
31216>>>           Set pbShowBorder to True
31217>>>        End_Object
31218>>>    End_Object
31219>>>End_Object
31220>    
31220>    Use DemoSliders.wo
Including file: DemoSliders.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoSliders.wo)
31220>>>Use cWebView.pkg
31220>>>Use cWebPanel.pkg
31220>>>Use cWebTabContainer.pkg
31220>>>Use cWebTabPage.pkg
31220>>>Use cWebForm.pkg
31220>>>Use cWebLabel.pkg
31220>>>Use cWebSlider.pkg
31220>>>Use cWebGroup.pkg
31220>>>
31220>>>Use Customer.dd
31220>>>
31220>>>Object oDemoSliders is a cWebView
31222>>>    Set piWidth to 700
31223>>>    Set psCaption to "Demo Sliders"
31224>>>    
31224>>>    Object oCustomer_DD is a Customer_DataDictionary
31226>>>    End_Object
31227>>>
31227>>>    Set Main_DD to oCustomer_DD
31228>>>    Set Server to oCustomer_DD
31229>>>
31229>>>    Object oWebMainPanel is a cWebPanel
31231>>>        Set piColumnCount to 10
31232>>>
31232>>>        Object oWebTabContainer is a cWebTabContainer
31234>>>            
31234>>>            
31234>>>            Object oVerticalPage is a cWebTabPage
31236>>>                Set piColumnCount to 10
31237>>>                Set psCaption to "Vertical"
31238>>>                
31238>>>                Object oLabel1 is a cWebLabel
31240>>>                    Set piColumnSpan to 1
31241>>>                    Set psCaption to "Default"
31242>>>                End_Object
31243>>>                
31243>>>                Object oLabel2 is a cWebLabel
31245>>>                    Set piColumnSpan to 1
31246>>>                    Set piColumnIndex to 1
31247>>>                    Set psCaption to "Markers"
31248>>>                End_Object
31249>>>                
31249>>>                Object oLabel3 is a cWebLabel
31251>>>                    Set piColumnSpan to 3
31252>>>                    Set piColumnIndex to 2
31253>>>                    Set psCaption to "Labels"
31254>>>                End_Object
31255>>>                
31255>>>                
31255>>>                Object oLabel4 is a cWebLabel
31257>>>                    Set piColumnSpan to 3
31258>>>                    Set piColumnIndex to 5
31259>>>                    Set psCaption to "Labels & Markers"
31260>>>                End_Object
31261>>>                
31261>>>                Object oLabel5 is a cWebLabel
31263>>>                    Set piColumnSpan to 1
31264>>>                    Set piColumnIndex to 8
31265>>>                    Set psCaption to "0 - 100"
31266>>>                End_Object
31267>>>                                
31267>>>                Object oLabel6 is a cWebLabel
31269>>>                    Set piColumnSpan to 1
31270>>>                    Set piColumnIndex to 9
31271>>>                    Set psCaption to "Range"
31272>>>                End_Object
31273>>>                                
31273>>>
31273>>>                Object oSlider1 is a cWebSlider
31275>>>                    Set piColumnSpan to 1
31276>>>                    Set pbVertical to True
31277>>>                    Set piHeight to 400
31278>>>                    Set pbShowLabel to False
31279>>>                End_Object
31280>>>                
31280>>>                
31280>>>                Object oSlider2 is a cWebSlider
31282>>>                    Set piColumnSpan to 1
31283>>>                    Set piColumnIndex to 1
31284>>>                    Set pbVertical to True
31285>>>                    Set piHeight to 400
31286>>>                    Set pbShowLabel to False
31287>>>                    Set pbShowMarkers to True
31288>>>                End_Object
31289>>>                
31289>>>                Object oSlider3 is a cWebSlider
31291>>>                    Set piMaxValue to 5
31292>>>                    Set piMinValue to 1
31293>>>                    Set piInterval to 1
31294>>>                    Set pbVertical to True
31295>>>                    Set piHeight to 400
31296>>>                    Set pbShowLabel to False
31297>>>                    Set piColumnIndex to 2
31298>>>                    Set piColumnSpan to 3
31299>>>                    Procedure OnFillLabels
31302>>>                        Send AddLabel 1 "First" 
31303>>>                        Send AddLabel 2 "Second" 
31304>>>                        Send AddLabel 3 "Third" 
31305>>>                        Send AddLabel 4 "Fourth" 
31306>>>                        Send AddLabel 5 "Fifth" 
31307>>>                    End_Procedure
31308>>>                End_Object
31309>>>                
31309>>>                Object oSlider4 is a cWebSlider
31311>>>                    Set pbVertical to True
31312>>>                    Set piHeight to 400
31313>>>                    Set pbShowLabel to False
31314>>>                    Set piColumnIndex to 5
31315>>>                    Set piColumnSpan to 3
31316>>>                    
31316>>>                    Set piMaxValue to 50
31317>>>                    Set piMinValue to 10
31318>>>                    Set piInterval to 1
31319>>>                    Set pbShowMarkers to True
31320>>>                    Procedure OnFillLabels
31323>>>                        Send AddLabel 10 "Ten" 
31324>>>                        Send AddLabel 20 "Twenty" 
31325>>>                        Send AddLabel 30 "Thirty" 
31326>>>                        Send AddLabel 40 "Forty" 
31327>>>                        Send AddLabel 50 "Fifty" 
31328>>>                    End_Procedure
31329>>>                End_Object
31330>>>                
31330>>>                Object oSlider5 is a cWebSlider
31332>>>                    Set pbVertical to True
31333>>>                    Set piHeight to 400
31334>>>                    Set pbShowLabel to False
31335>>>                    Set piColumnIndex to 8
31336>>>                    Set piColumnSpan to 1
31337>>>                    
31337>>>                    Set psLabel to "1 - 100"
31338>>>                    Set piMaxValue to 100
31339>>>                    Set piMinValue to 1
31340>>>                    Set piInterval to 1
31341>>>                    Set pbShowValue to True
31342>>>                    Set piSliderValue to 50
31343>>>                    Set pbShowMarkers to True
31344>>>                    Set pbShowRange to True
31345>>>                End_Object
31346>>>                
31346>>>                Object oSlider6 is a cWebSlider
31348>>>                    Set pbVertical to True
31349>>>                    Set piHeight to 400
31350>>>                    Set pbShowLabel to False
31351>>>                    Set piColumnIndex to 9
31352>>>                    Set piColumnSpan to 1
31353>>>                    
31353>>>                    Set psLabel to "Range 0 - 100"
31354>>>                    Set piMaxValue to 100
31355>>>                    Set piMinValue to 0
31356>>>                    Set piInterval to 1
31357>>>                    Set piFrom to 20
31358>>>                    Set piTo to 50
31359>>>                    Set pbShowValue to True
31360>>>                    Set pbRanged to True
31361>>>                    Set pbShowRange to True
31362>>>                End_Object
31363>>>            End_Object 
31364>>>
31364>>>            Object oHorizontalPage is a cWebTabPage
31366>>>                Set piColumnCount to 10
31367>>>                Set psCaption to "Horizontal"
31368>>>                
31368>>>                Object oSlider1 is a cWebSlider
31370>>>                    Set psLabel to "Default"
31371>>>                    Set piColumnSpan to 0
31372>>>                End_Object               
31373>>>                
31373>>>                Object oSlider2 is a cWebSlider
31375>>>                    Set psLabel to "Markers"
31376>>>                    Set piColumnSpan to 0
31377>>>                    Set pbShowMarkers to True
31378>>>                End_Object     
31379>>>                
31379>>>                Object oSlider3 is a cWebSlider
31381>>>                    Set psLabel to "Labels"
31382>>>                    Set piMaxValue to 5
31383>>>                    Set piMinValue to 1
31384>>>                    Set piInterval to 1
31385>>>                    Set pbShowMarkers to False
31386>>>                    Procedure OnFillLabels
31389>>>                        Send AddLabel 1 "First" 
31390>>>                        Send AddLabel 2 "Second" 
31391>>>                        Send AddLabel 3 "Third" 
31392>>>                        Send AddLabel 4 "Fourth" 
31393>>>                        Send AddLabel 5 "Fifth" 
31394>>>                    End_Procedure
31395>>>                End_Object
31396>>>                                
31396>>>                Object oSlider4 is a cWebSlider
31398>>>                    Set psLabel to "Labels & Markers"
31399>>>                    Set piMaxValue to 50
31400>>>                    Set piMinValue to 10
31401>>>                    Set piInterval to 1
31402>>>                    Set pbShowMarkers to True
31403>>>                    Procedure OnFillLabels
31406>>>                        Send AddLabel 10 "Ten" 
31407>>>                        Send AddLabel 20 "Twenty" 
31408>>>                        Send AddLabel 30 "Thirty" 
31409>>>                        Send AddLabel 40 "Forty" 
31410>>>                        Send AddLabel 50 "Fifty" 
31411>>>                    End_Procedure
31412>>>                End_Object
31413>>>                
31413>>>                Object oSlider5 is a cWebSlider
31415>>>                    Set psLabel to "1 - 100"
31416>>>                    Set piMaxValue to 100
31417>>>                    Set piMinValue to 1
31418>>>                    Set piInterval to 1
31419>>>                    Set pbShowValue to True
31420>>>                    Set piSliderValue to 50
31421>>>                    Set pbShowMarkers to True
31422>>>                    Set pbShowRange to True
31423>>>                End_Object
31424>>>                
31424>>>                Object oSlider6 is a cWebSlider
31426>>>                    Set psLabel to "Range 0 - 100"
31427>>>                    Set piMaxValue to 100
31428>>>                    Set piMinValue to 0
31429>>>                    Set piInterval to 1
31430>>>                    Set piFrom to 20
31431>>>                    Set piTo to 50
31432>>>                    Set pbShowValue to True
31433>>>                    Set pbRanged to True
31434>>>                    Set pbShowRange to True
31435>>>                End_Object
31436>>>
31436>>>                Object oCustomerCardContainer is a cWebGroup
31438>>>                    Set psCaption to "Customer Sliders:"
31439>>>                    Set piColumnCount to 10
31440>>>    
31440>>>                    Object oCustomer_Number is a cWebForm
31442>>>                        Entry_Item Customer.Customer_Number
31443>>>                        Set piColumnSpan to 4
31444>>>                        Set psLabel to "Customer:"
31445>>>                    End_Object
31446>>>    
31446>>>                    Object oCustomer_Name is a cWebForm
31448>>>                        Entry_Item Customer.Name
31449>>>                        Set piColumnSpan to 0
31450>>>                        Set piColumnIndex to 4
31451>>>                        Set pbShowLabel to False
31452>>>                        Set psLabel to "Customer Name:"
31453>>>                    End_Object
31454>>>                    
31454>>>                    Object oCustomer_Credit_Limit is a cWebSlider
31456>>>                        Entry_Item Customer.Credit_Limit
31457>>>                        Set psLabel to "Credit Limit:"
31458>>>                        Set piMinValue to 10000
31459>>>                        Set piMaxValue to 500000
31460>>>                        Set pbShowValue to True
31461>>>                        Set pbShowRange to True
31462>>>
31462>>>                        Procedure OnFillLabels
31465>>>                            Send AddLabel 100000 "Low"
31466>>>                            Send AddLabel 250000 "Medium" 
31467>>>                            Send AddLabel 400000 "High" 
31468>>>                        End_Procedure
31469>>>                    End_Object
31470>>>                    
31470>>>                    Object oCustomer_Purchases is a cWebSlider
31472>>>                        Entry_Item Customer.Purchases
31473>>>                        Set psLabel to "Purchases:"
31474>>>                        Set piMinValue to 10000
31475>>>                        Set piMaxValue to 500000
31476>>>                        Set pbShowValue to True
31477>>>                        Set pbShowRange to True
31478>>>                    End_Object
31479>>>                    
31479>>>                    Object oCustomer_Balance is a cWebSlider
31481>>>                        Entry_Item Customer.Balance
31482>>>                        Set psLabel to "Balance:"
31483>>>                        Set piMinValue to 10000
31484>>>                        Set piMaxValue to 500000
31485>>>                        Set pbShowValue to True
31486>>>                        Set pbShowRange to True
31487>>>                    End_Object
31488>>>                End_Object
31489>>>            End_Object
31490>>>        End_Object 
31491>>>    End_Object 
31492>>>End_Object
31493>    Use DemoConstrainedGrid.wo
Including file: DemoConstrainedGrid.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoConstrainedGrid.wo)
31493>>>Use cWebView.pkg
31493>>>Use cWebForm.pkg
31493>>>Use cWebCombo.pkg
31493>>>Use cWebButton.pkg
31493>>>Use cWebGrid.pkg
31493>>>Use cWebColumn.pkg
31493>>>Use cWebColumnCombo.pkg
31493>>>Use cWebColumnCheckbox.pkg
31493>>>Use cWebPanel.pkg
31493>>>Use Customer.DD
31493>>>
31493>>>
31493>>>Object oDemoConstrainedGrid is a cWebView
31495>>>    Object oCustomer_DD is a Customer_DataDictionary
31497>>>        Set Auto_Fill_State to True
31498>>>
31498>>>        Procedure OnConstrain
31501>>>            String sFilter sFrom sTo
31501>>>            Forward Send OnConstrain
31503>>>            
31503>>>            WebGet psFilter of oDemoConstrainedGrid to sFilter
31505>>>            WebGet psFilterFrom of oDemoConstrainedGrid to sFrom
31507>>>            WebGet psFilterTo of oDemoConstrainedGrid to sTo
31509>>>            
31509>>>            If (sFilter = "NUMBER") Begin
31511>>>                Constrain Customer.Customer_Number Between sFrom and sTo
31515>>>            End
31515>>>>
31515>>>            
31515>>>            If (sFilter = "NAME") Begin
31517>>>                Constrain Customer.Name Between sFrom and sTo
31521>>>            End
31521>>>>
31521>>>            
31521>>>        End_Procedure
31522>>>    End_Object
31523>>>
31523>>>    Set Main_DD to oCustomer_DD
31524>>>    Set Server to oCustomer_DD
31525>>>    
31525>>>    Set psCaption to "Constrained Grid"
31526>>>    
31526>>>    //  Web Properties used to store constraint values
31526>>>    Property String psFilter ""
31530>>>    Property String psFilterFrom ""
31534>>>    Property String psFilterTo ""
31538>>>    
31538>>>    //  Fill the grid on load
31538>>>    Procedure OnLoad
31541>>>        Send Find of oCustomer_DD FIRST_RECORD Index.1
31542>>>    End_Procedure
31543>>>    
31543>>>    Object oTopPanel is a cWebPanel
31545>>>        Set peRegion to prTop
31546>>>        Set piColumnCount to 4
31547>>>        
31547>>>        Object oFilterCombo is a cWebCombo
31549>>>            Set psLabel to "Filter on:"
31550>>>            
31550>>>            Procedure OnFill
31553>>>                Forward Send OnFill
31555>>>                
31555>>>                Send AddComboItem "" "None"
31556>>>                Send AddComboItem "NUMBER" "Number"
31557>>>                Send AddComboItem "NAME" "Name"
31558>>>            End_Procedure
31559>>>        End_Object
31560>>>        
31560>>>        Object oFromForm is a cWebForm
31562>>>            Set piColumnIndex to 1
31563>>>            Set psLabel to "From:"
31564>>>        End_Object
31565>>>        
31565>>>        Object oToForm is a cWebForm
31567>>>            Set piColumnIndex to 2
31568>>>            Set psLabel to "To:"
31569>>>        End_Object
31570>>>        
31570>>>        Object oUpdate is a cWebButton
31572>>>            Set psCaption to "Update"
31573>>>            Set piColumnIndex to 3
31574>>>            
31574>>>            Set pbServerOnClick to True
31575>>>            Procedure OnClick
31578>>>                String sVal
31578>>>                
31578>>>                WebGet psValue of oFilterCombo to sVal
31579>>>                WebSet psFilter of oDemoConstrainedGrid to sVal
31580>>>                
31580>>>                WebGet psValue of oFromForm to sVal
31581>>>                WebSet psFilterFrom of oDemoConstrainedGrid to sVal
31582>>>                
31582>>>                WebGet psValue of oToForm to sVal
31583>>>                WebSet psFilterTo of oDemoConstrainedGrid to sVal
31584>>>                
31584>>>                Send Rebuild_Constraints of oCustomer_DD
31585>>>
31585>>>                // make sure buffer has correct (old) record
31585>>>                // and rebuild list around valid record close to this one
31585>>>                Send Refind_Records of oCustomer_DD
31586>>>                Send FindDDRecordInBuffer of oList
31587>>>            End_Procedure
31588>>>        End_Object
31589>>>    End_Object
31590>>>    
31590>>>    Object oMainPanel is a cWebPanel
31592>>>        Set peRegion to prCenter
31593>>>            
31593>>>        
31593>>>        Object oList is a cWebGrid
31595>>>            Set pbFillHeight to True
31596>>>            Set pbShowLabel to False
31597>>>            Set piOrdering to 1
31598>>>            
31598>>>            Object oCustomerNumber is a cWebColumn
31600>>>                Set piWidth to 10
31601>>>                Set psCaption to "Number"
31602>>>                Set pbPromptButton to False
31603>>>                
31603>>>                Entry_Item Customer.Customer_Number
31604>>>            End_Object
31605>>>            
31605>>>            Object oCustomerName is a cWebColumn
31607>>>                Set piWidth to 20
31608>>>                Set psCaption to "Name"
31609>>>                Set pbPromptButton to False
31610>>>                
31610>>>                Entry_Item Customer.Name
31611>>>            End_Object
31612>>>            
31612>>>            Object oCustomerAddress is a cWebColumn
31614>>>                Set piWidth to 20
31615>>>                Set psCaption to "Address"
31616>>>                
31616>>>                Entry_Item Customer.Address 
31617>>>            End_Object
31618>>>            
31618>>>            Object oCustomerState is a cWebColumnCombo
31620>>>                Set piWidth to 14
31621>>>                Set psCaption to "State"
31622>>>                
31622>>>                Entry_Item Customer.State
31623>>>            End_Object
31624>>>            
31624>>>            Object oCustomerStatus is a cWebColumnCheckbox
31626>>>                Set piWidth to 8
31627>>>                Set psCaption to "Status"
31628>>>                                
31628>>>                Entry_Item Customer.Status
31629>>>            End_Object
31630>>>            
31630>>>            Object oCalculated is a cWebColumn
31632>>>                Set piWidth to 6
31633>>>                Set psCaption to "Calc"
31634>>>                Set pbEnabled to False
31635>>>                
31635>>>                //  The OnSetCalculatedValue procedure can be used on any data entry object (DEO)
31635>>>                Procedure OnSetCalculatedValue String ByRef sValue
31638>>>                    Move ("$" + string(Customer.Credit_Limit)) to sValue
31639>>>                End_Procedure
31640>>>            End_Object
31641>>>        End_Object
31642>>>    End_Object
31643>>>End_Object
31644>>>
31644>>>
31644>    Use DemoDialogs.wo
Including file: DemoDialogs.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoDialogs.wo)
31644>>>Use cWebView.pkg
31644>>>Use cWebButton.pkg
31644>>>Use cWebApp.pkg
31644>>>Use cWebHorizontalLine.pkg
31644>>>
31644>>>Use DemoActionDialog.wo
Including file: DemoActionDialog.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoActionDialog.wo)
31644>>>>>Use cWebModalDialog.pkg
31644>>>>>Use cWebButton.pkg
31644>>>>>Use cWebLabel.pkg
31644>>>>>Use cWebPanel.pkg
31644>>>>>Use cWebForm.pkg
31644>>>>>
31644>>>>>Object oDemoActionDialog is a cWebModalDialog
31646>>>>>    Set psCaption to "Question.."
31647>>>>>    Set pbResizable to False
31648>>>>>    Set piWidth to 400
31649>>>>>    Set piColumnCount to 4
31650>>>>>    
31650>>>>>    Property String psReturnMsg ""
31654>>>>>    
31654>>>>>    Property String psReturnObj ""
31658>>>>>    
31658>>>>>    Object oMainPanel is a cWebPanel
31660>>>>>        Set peRegion to prCenter
31661>>>>>        
31661>>>>>        Object oQuestionLbl is a cWebLabel
31663>>>>>            Set psCaption to "Are you sure that you want to do this?"
31664>>>>>        End_Object
31665>>>>>        
31665>>>>>        Object oResponseFrm is a cWebForm
31667>>>>>            Set pbShowLabel to False
31668>>>>>        End_Object
31669>>>>>    End_Object
31670>>>>>    
31670>>>>>    Object oButtonPanel is a cWebPanel
31672>>>>>        Set peRegion to prBottom
31673>>>>>        Set piColumnCount to 4
31674>>>>>        
31674>>>>>        Object oOkBtn is a cWebButton
31676>>>>>            Set pbShowLabel to False
31677>>>>>            Set psCaption to "Ok"
31678>>>>>            Set piColumnIndex to 1
31679>>>>>            
31679>>>>>            Procedure OnClick
31682>>>>>                Send SendResponse True
31683>>>>>            End_Procedure
31684>>>>>        End_Object
31685>>>>>        
31685>>>>>        Object oCancelBtn is a cWebButton
31687>>>>>            Set pbShowLabel to False
31688>>>>>            Set psCaption to "Cancel"
31689>>>>>            Set piColumnIndex to 2
31690>>>>>            
31690>>>>>            Procedure OnClick
31693>>>>>                Send SendResponse False
31694>>>>>            End_Procedure
31695>>>>>        End_Object
31696>>>>>    End_Object
31697>>>>>    
31697>>>>>    Set pbServerOnSubmit to True
31698>>>>>    Procedure OnSubmit
31701>>>>>        Send SendResponse True
31702>>>>>    End_Procedure
31703>>>>>    
31703>>>>>    Procedure AskQuestion String sTitle String sQuestion Handle hReturnObj Handle hReturnMsg
31706>>>>>        String sWO sMethod
31706>>>>>        
31706>>>>>        Get WebObjectName of hReturnObj to sWO
31707>>>>>        Get WebMethodName of hReturnObj hReturnMsg to sMethod
31708>>>>>        If (sMethod <> "") Begin
31710>>>>>            WebSet psReturnObj to sWO
31711>>>>>            WebSet psReturnMsg to sMethod
31712>>>>>            
31712>>>>>            WebSet psCaption of oDemoActionDialog to sTitle
31713>>>>>            WebSet psCaption of oQuestionLbl to sQuestion
31714>>>>>            
31714>>>>>            WebSet psValue of oResponseFrm to ""
31715>>>>>                    
31715>>>>>            Send Show of oDemoActionDialog
31716>>>>>        End
31716>>>>>>
31716>>>>>    End_Procedure
31717>>>>>    
31717>>>>>    Procedure SendResponse Boolean bOk
31720>>>>>        Handle hReturnMsg hReturnObj
31720>>>>>        String sName sResponse
31720>>>>>        
31720>>>>>        //  Get handle to web object
31720>>>>>        WebGet psReturnObj of oDemoActionDialog to sName
31721>>>>>        Get WebObjectByName sName to hReturnObj
31722>>>>>        
31722>>>>>        If (hReturnObj > 0) Begin
31724>>>>>            //  Get handle to return message
31724>>>>>            WebGet psReturnMsg of oDemoActionDialog to sName
31725>>>>>            Get WebMethodByName of hReturnObj sName to hReturnMsg
31726>>>>>                
31726>>>>>            If (hReturnMsg > 0) Begin
31728>>>>>                WebGet psValue of oResponseFrm to sResponse
31729>>>>>                Send Hide of oDemoActionDialog
31730>>>>>
31730>>>>>                //  Call handler method
31730>>>>>                Send hReturnMsg of hReturnObj bOk sResponse
31731>>>>>            End
31731>>>>>>
31731>>>>>        End
31731>>>>>>
31731>>>>>    End_Procedure
31732>>>>>End_Object
31733>>>>>
31733>>>>>
31733>>>>>
31733>>>Use DemoQuestionDialog.wo
Including file: DemoQuestionDialog.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoQuestionDialog.wo)
31733>>>>>Use cWebModalDialog.pkg
31733>>>>>Use cWebButton.pkg
31733>>>>>Use cWebLabel.pkg
31733>>>>>Use cWebPanel.pkg
31733>>>>>Use cWebForm.pkg
31733>>>>>
31733>>>>>Object oDemoQuestionDialog is a cWebModalDialog
31735>>>>>    Set psCaption to "Question.."
31736>>>>>    Set pbResizable to False
31737>>>>>    Set piWidth to 400
31738>>>>>    Set piColumnCount to 4
31739>>>>>    
31739>>>>>    // send reply on Esc or "x" as submit, which will send the callback on a cancel
31739>>>>>    Set pbServerOnEscape to True
31740>>>>>    
31740>>>>>    
31740>>>>>    Object oMainPanel is a cWebPanel
31742>>>>>        Set peRegion to prCenter
31743>>>>>        
31743>>>>>        Object oQuestionLbl is a cWebLabel
31745>>>>>            Set psCaption to "Are you sure that you want to do this?"
31746>>>>>        End_Object
31747>>>>>        
31747>>>>>        Object oResponseFrm is a cWebForm
31749>>>>>            Set pbShowLabel to False
31750>>>>>        End_Object
31751>>>>>    End_Object
31752>>>>>    
31752>>>>>    Object oButtonPanel is a cWebPanel
31754>>>>>        Set peRegion to prBottom
31755>>>>>        Set piColumnCount to 4
31756>>>>>        
31756>>>>>        Object oOkBtn is a cWebButton
31758>>>>>            Set pbShowLabel to False
31759>>>>>            Set psCaption to "Ok"
31760>>>>>            Set piColumnIndex to 1
31761>>>>>            
31761>>>>>            Procedure OnClick
31764>>>>>                Send Ok
31765>>>>>            End_Procedure
31766>>>>>        End_Object
31767>>>>>        
31767>>>>>        Object oCancelBtn is a cWebButton
31769>>>>>            Set pbShowLabel to False
31770>>>>>            Set psCaption to "Cancel"
31771>>>>>            Set piColumnIndex to 2
31772>>>>>            
31772>>>>>            Procedure OnClick
31775>>>>>                Send Cancel
31776>>>>>            End_Procedure
31777>>>>>        End_Object
31778>>>>>    End_Object
31779>>>>>    
31779>>>>>    Set pbServerOnSubmit to True
31780>>>>>   
31780>>>>>    Procedure OnSubmit
31783>>>>>        Send Ok
31784>>>>>    End_Procedure
31785>>>>>    
31785>>>>>    Procedure InitializeDialog String sTitle String sQuestion
31788>>>>>        WebSet psCaption of oDemoQuestionDialog to sTitle
31789>>>>>        WebSet psCaption of oQuestionLbl to sQuestion
31790>>>>>        WebSet psValue of oResponseFrm to ""
31791>>>>>    End_Procedure
31792>>>>>    
31792>>>>>    Procedure GetAnswers String ByRef sResponse Boolean ByRef bCancel
31795>>>>>        WebGet psValue of oResponseFrm to sResponse
31796>>>>>        WebGet pbCanceled to bCancel
31797>>>>>    End_Procedure
31798>>>>>
31798>>>>>    Procedure OnEscape
31801>>>>>        Forward Send OnEscape
31803>>>>>    End_Procedure
31804>>>>>    
31804>>>>>End_Object
31805>>>>>
31805>>>>>
31805>>>>>
31805>>>Use DemoFileDialog.wo
Including file: DemoFileDialog.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoFileDialog.wo)
31805>>>>>Use cWebModalDialog.pkg
31805>>>>>Use cWebButton.pkg
31805>>>>>Use cWebTreeView.pkg
31805>>>>>Use cWebImage.pkg
31805>>>>>Use cWebPanel.pkg
31805>>>>>Use cWebList.pkg
31805>>>>>Use cWebColumn.pkg
31805>>>>>
31805>>>>>Define C_FileAttributeDirectory for |CI$0010
31805>>>>>
31805>>>>>// tFileTime
31805>>>>>// ---------
31805>>>>>
31805>>>>>// A 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 (UTC).
31805>>>>>Struct tFileTime
31805>>>>>    DWord dwLowDateTime    // Low-order part of the file time.
31805>>>>>    DWord dwHighDateTime   // High-order part of the file time.
31805>>>>>End_Struct
31805>>>>>
31805>>>>>// tWin32FindData
31805>>>>>// --------------
31805>>>>>
31805>>>>>// This structure describes a file that the FindFirstFile, FindFirstFileEx, or FindNextFile functions find.
31805>>>>>Struct tWin32FindData
31805>>>>>    DWord     dwFileAttributes                
31805>>>>>    tFileTime ftCreationTime    
31805>>>>>    tFileTime ftCreationTime    
31805>>>>>    tFileTime ftLastAccessTime  
31805>>>>>    tFileTime ftLastAccessTime  
31805>>>>>    tFileTime ftLastWriteTime   
31805>>>>>    tFileTime ftLastWriteTime   
31805>>>>>    DWord     nFileSizeHigh
31805>>>>>    DWord     nFileSizeLow
31805>>>>>    DWord     dwReserved0
31805>>>>>    DWord     dwReserved1
31805>>>>>    Char[MAX_PATH] cFileName         
31805>>>>>    Char[14]       cAlternateFileName
31805>>>>>End_Struct
31805>>>>>
31805>>>>>External_Function FindClose "FindClose" Kernel32.dll Handle hOpenFile Returns Integer
31806>>>>>External_Function FindFirstFile "FindFirstFileA" Kernel32.dll String sFileSpec Pointer lpWin32FindData Returns Handle
31807>>>>>External_Function FindNextFile "FindNextFileA" Kernel32.dll Handle hFindFile Pointer lpWin32FindData Returns Handle
31808>>>>>
31808>>>>>Object oDemoFileDialog is a cWebModalDialog
31810>>>>>    Set piColumnCount to 3
31811>>>>>    Set piWidth to 900
31812>>>>>    Set piHeight to 600
31813>>>>>    Set psCaption to "Select folder.." 
31814>>>>>
31814>>>>>    
31814>>>>>    Object oLeftPanel is a cWebPanel
31816>>>>>        Set peRegion to prLeft
31817>>>>>        Set pbResizable to True
31818>>>>>        Set piWidth to 300
31819>>>>>        
31819>>>>>        Object oTreeView is a cWebTreeView
31821>>>>>            Set pbFillHeight to True
31822>>>>>            Property String psStartupPath "C:\Users\Harm\Pictures\"
31824>>>>>//            Send RegisterDownloadFolder of ghoWebResourceManager "C:\Users\Harm\Pictures\"
31824>>>>>            
31824>>>>>            // To fill the tree with items, we implement the OnLoadChildNodes event that is called
31824>>>>>            // by the tree engine. It returns sub tree items based on the parent id, value or the 
31824>>>>>            // current level. In this implementation we look at the file system and generate
31824>>>>>            // items for that.
31824>>>>>            Function OnLoadChildNodes String sId String sValue Integer iLevel Returns tWebTreeItem[]
31827>>>>>                tWebTreeItem[] aItems
31827>>>>>                tWebTreeItem[] aItems
31828>>>>>                Integer iCount iDrive iDriveStatus
31828>>>>>                String sLoc sLine
31828>>>>>                
31828>>>>>                String sDirectory sFileName sSize
31828>>>>>                Integer iRow iAttributes iSize iVoid
31828>>>>>                Number nSize
31828>>>>>                Boolean bIsDirectory
31828>>>>>                Pointer lpWin32FindData
31828>>>>>                Handle hFileFind hMoreFiles
31828>>>>>                tWin32FindData Win32FindData
31828>>>>>                tWin32FindData Win32FindData
31828>>>>>                
31828>>>>>                Move 0 to iCount
31829>>>>>                
31829>>>>>                If (iLevel = 0) Begin
31831>>>>>                    //  At the root level, we display the drives that are available
31831>>>>>                    For iDrive from 1 to 26
31837>>>>>>
31837>>>>>                        GetDskInfo iDrive iDriveStatus
31838>>>>>                        If (iDriveStatus > Drive_root_not_exist) Begin
31840>>>>>                            Move (Character (iDrive + 64) + ":\") to sLoc
31841>>>>>                            Move sLoc   to aItems[iCount].sName
31842>>>>>                            Move sLoc   to aItems[iCount].sValue        //  Store the full path as value
31843>>>>>                            Move sLoc   to aItems[iCount].sAltText
31844>>>>>                            Move True   to aItems[iCount].bFolder
31845>>>>>                            Move True   to aItems[iCount].bLoadChildren
31846>>>>>                            
31846>>>>>                            //  We need to generate a unique ID here without special characters, since we want to return multiple levels at initialization
31846>>>>>                            Move (Replaces(":", Replaces("\", sLoc, ""), "")) to aItems[iCount].sId
31847>>>>>                            Move sId to aItems[iCount].sParentId
31848>>>>>                            
31848>>>>>                            //  We have different icons for some of the drive types
31848>>>>>                            Case Begin
31848>>>>>                                Case (iDriveStatus = Drive_fixed)
31850>>>>>                                    Move "Images/Harddisk.png" to aItems[iCount].sIcon
31851>>>>>                                    Case Break
31852>>>>>                                Case (iDriveStatus = Drive_cdrom)
31855>>>>>                                    Move "Images/CDRom.png" to aItems[iCount].sIcon
31856>>>>>                                    Case Break
31857>>>>>                                Case (iDriveStatus = Drive_remote)
31860>>>>>                                    Move "Images/NetworkDrive.png" to aItems[iCount].sIcon
31861>>>>>                                    Case Break
31862>>>>>                            Case End
31862>>>>>                            
31862>>>>>                            Increment iCount
31863>>>>>                        End
31863>>>>>>
31863>>>>>                    Loop
31864>>>>>>
31864>>>>>                End
31864>>>>>>
31864>>>>>                Else Begin
31865>>>>>                    
31865>>>>>                    // Test if this is actually a valid directory.... 
31865>>>>>                    Delegate Get IsDirectory sValue to bIsDirectory
31867>>>>>                    
31867>>>>>                    If (bIsDirectory) Begin
31869>>>>>                
31869>>>>>                        // Iterate all the files in this directory....
31869>>>>>                        Move (AddressOf(Win32FindData)) to lpWin32FindData
31870>>>>>                        Move (FindFirstFile(sValue - "*.*", lpWin32FindData)) to hFileFind
31871>>>>>                
31871>>>>>                        If (hFileFind <> -1) Begin
31873>>>>>                            Repeat
31873>>>>>>
31873>>>>>                                Get CharArrayToString Win32FindData.cFileName to sFileName
31874>>>>>                                Move Win32FindData.dwFileAttributes to iAttributes
31875>>>>>                
31875>>>>>                                // Is it a file or a directory?....
31875>>>>>                                If (IsFlagIn(C_FileAttributeDirectory, iAttributes)) Begin
31877>>>>>                                    If (sFileName <> "" and sFileName <> "." and sFileName <> "..") Begin
31879>>>>>                                        Get CharArrayToString Win32FindData.cFileName to sFileName
31880>>>>>                                        Move Win32FindData.dwFileAttributes to iAttributes
31881>>>>>                    
31881>>>>>                                        Move (sValue + sFileName + "\") to sLoc
31882>>>>>                                
31882>>>>>                                        Move sFileName      to aItems[iCount].sName
31883>>>>>                                        Move sLoc           to aItems[iCount].sValue    //  Store the full path as value
31884>>>>>                                        Move sLoc           to aItems[iCount].sAltText
31885>>>>>                                        Move True           to aItems[iCount].bFolder
31886>>>>>                                        Move True           to aItems[iCount].bLoadChildren
31887>>>>>    
31887>>>>>                                        //  We need to generate a unique ID here without special characters, since we want to return multiple levels at initialization
31887>>>>>                                        Move (Replaces(":", Replaces("\", sLoc, ""), "")) to aItems[iCount].sId
31888>>>>>                                        Move sId to aItems[iCount].sParentId
31889>>>>>    
31889>>>>>                                        Increment iCount
31890>>>>>                                    End
31890>>>>>>
31890>>>>>                                End
31890>>>>>>
31890>>>>>                
31890>>>>>                                Move (FindNextFile(hFileFind, lpWin32FindData)) to hMoreFiles
31891>>>>>                            Until (hMoreFiles = 0)
31893>>>>>                
31893>>>>>                            Move (FindClose(hFileFind)) to iVoid
31894>>>>>                        End
31894>>>>>>
31894>>>>>                    End
31894>>>>>>
31894>>>>>                    
31894>>>>>                    
31894>>>>>//                    //  At sub levels we read the contents of the folder and return those as tree items
31894>>>>>//                    Direct_Input ("dir: " + sValue)
31894>>>>>//    
31894>>>>>//                    Repeat
31894>>>>>//                        Readln sLine
31894>>>>>//                        
31894>>>>>//                        Move (Trim(sLine)) to sLine
31894>>>>>//                        
31894>>>>>//                        If (sLine <> "" and sLine <> "[.]" and sLine <> "[..]") Begin
31894>>>>>//                            //  Switch between folders and files
31894>>>>>//                            If (Left(sLine, 1) = "[") Begin
31894>>>>>//                                Move (Mid(sLine, Length(sLine) - 2, 2)) to sLine
31894>>>>>//                                
31894>>>>>//                                Move (sValue + Trim(sLine) + "\") to sLoc
31894>>>>>//                            
31894>>>>>//                                Move (Trim(sLine))  to aItems[iCount].sName
31894>>>>>//                                Move sLoc           to aItems[iCount].sValue    //  Store the full path as value
31894>>>>>//                                Move sLoc           to aItems[iCount].sAltText
31894>>>>>//                                Move True           to aItems[iCount].bFolder
31894>>>>>//                                Move True           to aItems[iCount].bLoadChildren
31894>>>>>//                            End
31894>>>>>//                            Else Begin
31894>>>>>//                                Move (sValue + Trim(sLine)) to sLoc
31894>>>>>//                                
31894>>>>>//                                Move (Trim(sLine))  to aItems[iCount].sName
31894>>>>>//                                Move sLoc           to aItems[iCount].sValue    //  Store the full path as value
31894>>>>>//                                Move sLoc           to aItems[iCount].sAltText
31894>>>>>//                                Move False          to aItems[iCount].bFolder
31894>>>>>//                                Move False          to aItems[iCount].bLoadChildren
31894>>>>>//                            End
31894>>>>>//                            
31894>>>>>//                            //  We need to generate a unique ID here without special characters, since we want to return multiple levels at initialization
31894>>>>>//                            Move (Replaces(":", Replaces("\", sLoc, ""), "")) to aItems[iCount].sId
31894>>>>>//                            Move sId to aItems[iCount].sParentId
31894>>>>>//                            
31894>>>>>//                            Increment iCount
31894>>>>>//                        End
31894>>>>>//                    Until (SeqEof) 
31894>>>>>                End
31894>>>>>>
31894>>>>>                
31894>>>>>                Function_Return aItems
31895>>>>>            End_Function
31896>>>>>            
31896>>>>>            Set pbServerOnSelect to True
31897>>>>>            
31897>>>>>            Procedure OnSelect String sId String sValue Integer iLevel
31900>>>>>
31900>>>>>                
31900>>>>>                // Now Refresh oFileList
31900>>>>>                WebSet psDirectory of oFileList to sValue
31902>>>>>                Send GridRefresh to oFileList
31903>>>>>            End_Procedure
31904>>>>>            
31904>>>>>            
31904>>>>>            //  We override the OnLoad event and manually fill the tree. We need to do this because
31904>>>>>            //  we want to expand it to our initial path and select the current item.
31904>>>>>            Procedure OnLoad
31907>>>>>                tWebTreeItem[] aTree aLevel
31907>>>>>                tWebTreeItem[] aTree aLevel
31909>>>>>                tWebTreeItem tItem
31909>>>>>                tWebTreeItem tItem
31909>>>>>                String sPath sCurPath sPart
31909>>>>>                Integer iPos iTo iLevel iItem
31909>>>>>                Boolean bContinue
31909>>>>>                
31909>>>>>                //  Load root level
31909>>>>>                Get OnLoadChildNodes "" "" 0 to aTree
31910>>>>>                
31910>>>>>                Get psStartupPath to sPath
31911>>>>>                Move 0 to iPos
31912>>>>>                Move 0 to iItem
31913>>>>>                Move 1 to iLevel
31914>>>>>                
31914>>>>>                //  Loop through the parts of the path (the different folders)
31914>>>>>                While (iPos < Length(sPath))                    
31918>>>>>                    //  Cut the current folder out of the full path string
31918>>>>>                    Move (Pos("\", sPath, iPos + 1)) to iTo
31919>>>>>                    If (iTo = 0) Begin
31921>>>>>                        Move (Length(sPath)) to iTo
31922>>>>>                    End
31922>>>>>>
31922>>>>>                    Move (Mid(sPath, iTo - iPos, iPos + 1)) to sPart
31923>>>>>                    
31923>>>>>                    If (Trim(sPart) <> "") Begin
31925>>>>>                        Move (Trim(sCurPath) + Trim(sPart)) to sCurPath
31926>>>>>                        Move True to bContinue
31927>>>>>                        
31927>>>>>                        //  Find the folder in the generated tree nodes
31927>>>>>                        While (iItem < SizeOfArray(aTree) and bContinue)
31931>>>>>                            If (aTree[iItem].sValue = sCurPath) Begin
31933>>>>>                                Move aTree[iItem] to tItem
31934>>>>>                                
31934>>>>>                                //  Mark as expanded
31934>>>>>                                Move True to aTree[iItem].bExpanded
31935>>>>>                                
31935>>>>>                                //  Generate the tree nodes for the new level
31935>>>>>                                Get OnLoadChildNodes aTree[iItem].sId aTree[iItem].sValue iLevel to aLevel
31936>>>>>                                Get ConcatArrays aTree aLevel to aTree
31937>>>>>                                
31937>>>>>                                Move False to bContinue
31938>>>>>                            End
31938>>>>>>
31938>>>>>                            
31938>>>>>                            Increment iItem
31939>>>>>                        Loop
31940>>>>>>
31940>>>>>                    End
31940>>>>>>
31940>>>>>                    
31940>>>>>                    Move iTo to iPos
31941>>>>>                    Increment iLevel
31942>>>>>                Loop
31943>>>>>>
31943>>>>>                
31943>>>>>                //  Update the tree with the new nodes
31943>>>>>                Send UpdateSubNodes "" aTree
31944>>>>>                
31944>>>>>                //  Mark the current item as selected
31944>>>>>                If (tItem.sId <> "") Begin
31946>>>>>                    Send Select tItem.sId
31947>>>>>                    
31947>>>>>                End
31947>>>>>>
31947>>>>>            End_Procedure
31948>>>>>            
31948>>>>>            Function ConcatArrays tWebTreeItem[] aMain tWebTreeItem[] aAdd Returns tWebTreeItem[]
31951>>>>>                Integer i iTo
31951>>>>>                
31951>>>>>                Move (SizeOfArray(aAdd) - 1) to iTo
31952>>>>>                For i from 0 to iTo
31958>>>>>>
31958>>>>>                    Move aAdd[i] to aMain[SizeOfArray(aMain)]
31959>>>>>                Loop
31960>>>>>>
31960>>>>>                    
31960>>>>>                Function_Return aMain
31961>>>>>            End_Function
31962>>>>>            
31962>>>>>        End_Object
31963>>>>>        
31963>>>>>        Object oRefresh is a cWebButton
31965>>>>>            Set psCaption to "Refresh"
31966>>>>>            Set pbShowLabel to False
31967>>>>>            Set pbServerOnClick to True
31968>>>>>            
31968>>>>>            Procedure OnClick
31971>>>>>                Forward Send OnClick
31973>>>>>                
31973>>>>>                Send FullRefresh of oTreeView
31974>>>>>            End_Procedure
31975>>>>>        End_Object
31976>>>>>    End_Object
31977>>>>>    
31977>>>>>    Object oCenter is a cWebPanel
31979>>>>>        Set peRegion to prCenter
31980>>>>>
31980>>>>>        Object oCenterPanel is a cWebPanel
31982>>>>>            Set peRegion to prCenter
31983>>>>>        
31983>>>>>            Object oPreview is a cWebImage
31985>>>>>                Set pbFillHeight to True
31986>>>>>                
31986>>>>>                Set pePosition to wiCenter
31987>>>>>                Set pbScroll to True
31988>>>>>                Set pbShowBorder to True
31989>>>>>                Set psUrl to "Images/PoweredByDataFlex.png"
31990>>>>>            End_Object
31991>>>>>        End_Object
31992>>>>>
31992>>>>>        
31992>>>>>        Object oBottomPanel is a cWebPanel
31994>>>>>            Set peRegion to prBottom
31995>>>>>            Set pbResizable to True
31996>>>>>            Set piHeight to 250
31997>>>>>            Set piMinHeight to 200
31998>>>>>            
31998>>>>>            Object oFileList is a cWebList
32000>>>>>                Property String psDirectory ""
32004>>>>>                
32004>>>>>                Set pbFillHeight to True
32005>>>>>                
32005>>>>>                Set pbDataAware to False
32006>>>>>                Set piSortColumn to 0
32007>>>>>                
32007>>>>>                Object oFileName is a cWebColumn
32009>>>>>                    Set psCaption to "File name"
32010>>>>>                    Set piWidth to 10
32011>>>>>                End_Object
32012>>>>>                
32012>>>>>                Object oFileSize is a cWebColumn
32014>>>>>                    Set psCaption to "Size"
32015>>>>>                    Set piWidth to 4
32016>>>>>                End_Object 
32017>>>>>                
32017>>>>>                Procedure OnChangeCurrentRow String sFromRowID String sToRowID
32020>>>>>                    //  If an item is selected in the tree, we want to update the previewer if it is an image.
32020>>>>>                    //  If no image is selected, we reset the previewer to the default image.
32020>>>>>                    String sExt sPath
32020>>>>>                    
32020>>>>>                    WebGet psDirectory to sPath
32021>>>>>                    If (Right(sPath, 1) <> "\") Move (sPath + "\") to sPath
32024>>>>>                    Move (sPath + sToRowID) to sPath
32025>>>>>                    
32025>>>>>                    Move (Lowercase(Trim(Right(sPath, Length(sPath) - RightPos(".", sPath))))) to sExt
32026>>>>>                    If (sExt = "jpg" or sExt = "png" or sExt = "gif" or sExt = "bmp" or sExt = "ico" or sExt = "jpeg" or sExt = "svg") Begin
32028>>>>>                        WebSet psUrl of (oPreview) to ""
32029>>>>>                        
32029>>>>>                        
32029>>>>>                        Send UpdateLocalImage of oPreview sPath
32030>>>>>                    End
32030>>>>>>
32030>>>>>                    Else Begin
32031>>>>>                        WebSet psUrl of (oPreview) to "Images/PoweredByDataFlex.png"
32032>>>>>                    End
32032>>>>>>
32032>>>>>                End_Procedure                
32033>>>>>                
32033>>>>>                
32033>>>>>                
32033>>>>>                Procedure OnManualLoadData tWebRow[] ByRef aTheRows String ByRef sCurrentRowID
32036>>>>>                    String sDirectory sFileName sSize
32036>>>>>                    Integer iRow iAttributes iSize iVoid
32036>>>>>                    Number nSize
32036>>>>>                    Boolean bIsDirectory
32036>>>>>                    Pointer lpWin32FindData
32036>>>>>                    Handle hFileFind hMoreFiles
32036>>>>>                    tWin32FindData Win32FindData
32036>>>>>                    tWin32FindData Win32FindData
32036>>>>>
32036>>>>>                    Move 0 to iRow
32037>>>>>                    WebGet psDirectory to sDirectory
32038>>>>>                    
32038>>>>>                    // Test if this is actually a valid directory.... 
32038>>>>>                    Delegate Get IsDirectory sDirectory to bIsDirectory
32040>>>>>                    
32040>>>>>                    If (bIsDirectory) Begin
32042>>>>>                        // Iterate all the files in this directory....
32042>>>>>                        Move (AddressOf(Win32FindData)) to lpWin32FindData
32043>>>>>                        Move (FindFirstFile(sDirectory - "*.*", lpWin32FindData)) to hFileFind
32044>>>>>                
32044>>>>>                        If (hFileFind <> -1) Begin
32046>>>>>                            Repeat
32046>>>>>>
32046>>>>>                                Get CharArrayToString Win32FindData.cFileName to sFileName
32047>>>>>                                Move Win32FindData.dwFileAttributes to iAttributes
32048>>>>>                
32048>>>>>                                // Is it a file or a directory?....
32048>>>>>                                If (not(IsFlagIn(C_FileAttributeDirectory, iAttributes))) Begin
32050>>>>>                                    // Get the Size string
32050>>>>>                                    Move Win32FindData.nFileSizeLow to iSize
32051>>>>>                                    If (iSize < 1000) Begin
32053>>>>>                                        Move (String(iSize) * "bytes") to sSize
32054>>>>>                                    End
32054>>>>>>
32054>>>>>                                    Else If (iSize < 1000000) Begin
32057>>>>>                                        Move (iSize / 1000.0) to nSize
32058>>>>>                                        Move (FormatNumber(nSize, 2) * "KB") to sSize
32059>>>>>                                    End
32059>>>>>>
32059>>>>>                                    Else Begin
32060>>>>>                                        Move (iSize / 1000000.0) to nSize
32061>>>>>                                        Move (FormatNumber(nSize, 2) * "MB") to sSize
32062>>>>>                                    End
32062>>>>>>
32062>>>>>                                    
32062>>>>>                                    
32062>>>>>                                    // Populate the row....
32062>>>>>                                    Move sFileName to aTheRows[iRow].sRowID    // RowId
32063>>>>>                                    Move sFileName to aTheRows[iRow].aCells[0].sValue    // File Name
32064>>>>>                                    Move sSize     to aTheRows[iRow].aCells[1].sValue    // File Size 
32065>>>>>                                    If (iRow = 0) Begin
32067>>>>>                                        Move sFileName to sCurrentRowID
32068>>>>>                                        Send OnChangeCurrentRow "" sFileName
32069>>>>>                                    End
32069>>>>>>
32069>>>>>                                    Increment iRow
32070>>>>>                                End
32070>>>>>>
32070>>>>>                
32070>>>>>                                Move (FindNextFile(hFileFind, lpWin32FindData)) to hMoreFiles
32071>>>>>                            Until (hMoreFiles = 0)
32073>>>>>                
32073>>>>>                            Move (FindClose(hFileFind)) to iVoid
32074>>>>>                        End
32074>>>>>>
32074>>>>>                    End
32074>>>>>>
32074>>>>>                    
32074>>>>>                End_Procedure
32075>>>>>            End_Object
32076>>>>>        End_Object
32077>>>>>    End_Object    
32078>>>>>    
32078>>>>>    
32078>>>>>    Set pbServerOnSubmit to True
32079>>>>>    Procedure OnSubmit
32082>>>>>        String sPath sFile
32082>>>>>        
32082>>>>>        WebGet psDirectory of oFileList to sPath
32083>>>>>        If (Right(sPath, 1) <> "\") Move (sPath + "\") to sPath
32086>>>>>        
32086>>>>>        WebGet psCurrentRowID of oFileList to sFile
32087>>>>>        Move (sPath + sFile) to sPath
32088>>>>>        
32088>>>>>        Send ShowInfoBox ("Selected path '" + sPath + "'")
32089>>>>>    End_Procedure
32090>>>>>
32090>>>>>    Function CharArrayToString Char[] ACharArray Returns String
32093>>>>>        // Converts an array of type Char into a DataFlex string. The returned string will not
32093>>>>>        // be null terminated.
32093>>>>>        String sReturn
32093>>>>>        Address pStr
32093>>>>>    
32093>>>>>        Move (AddressOf(ACharArray)) to pStr
32094>>>>>        Move pStr to sReturn         // use built-in DataFlex string address to string conversion
32095>>>>>        Move (CString(sReturn)) to sReturn
32096>>>>>        
32096>>>>>        Function_Return sReturn
32097>>>>>    End_Function
32098>>>>>    
32098>>>>>
32098>>>>>    Function IsDirectory String sPath Returns Boolean
32101>>>>>        // Returns True if the sPath is a directory.
32101>>>>>        Integer iAttributes
32101>>>>>        Move (GetFileAttributes(sPath)) to iAttributes
32102>>>>>        If (iAttributes <> -1) Begin
32104>>>>>            Function_Return  ((iAttributes iand C_FileAttributeDirectory) = C_FileAttributeDirectory)
32105>>>>>        End
32105>>>>>>
32105>>>>>        Function_Return False // File is not a directory (or doesn't exist)
32106>>>>>    End_Function
32107>>>>>End_Object
32108>>>>>
32108>>>>>
32108>>>
32108>>>Object oDemoDialogs is a cWebView
32110>>>    Set piWidth to 300
32111>>>    Set psCaption to "Dialogs"
32112>>>    
32112>>>    Object oInfoBtn is a cWebButton
32114>>>        Set psCaption to "Standard Info Dialog"
32115>>>        
32115>>>        Procedure OnClick
32118>>>            Send ShowInfoBox of oWebApp "Hello world!"
32119>>>        End_Procedure
32120>>>    End_Object
32121>>>    
32121>>>    Object oConfirmBtn is a cWebButton
32123>>>        Set psCaption to "Standard Confirmation Dialog"
32124>>>        
32124>>>        Procedure ConfirmResponse Integer eConfirmMode
32127>>>            If (eConfirmMode = cmYes) Begin
32129>>>                WebSet pbEnabled to False
32130>>>            End
32130>>>>
32130>>>        End_Procedure
32131>>>        //  Publish the response method (Security!)
32131>>>        WebPublishProcedure ConfirmResponse
32132>>>        
32132>>>        Procedure OnClick
32135>>>            Send ShowYesNo of oWebApp (Self) (RefProc(ConfirmResponse)) "Are you sure you want to disable this button?" "Question title!"
32136>>>        End_Procedure
32137>>>    End_Object
32138>>>    
32138>>>    Object oCustomMessage is a cWebButton
32140>>>        Set psCaption to "Custom Message Box"
32141>>>        
32141>>>        Procedure CustomResponse Integer eBtn
32144>>>            Send ShowInfoBox ("You liked " + String(eBtn) + "!")
32145>>>        End_Procedure
32146>>>        //  Publish the response method (Security!)
32146>>>        WebPublishProcedure CustomResponse
32147>>>
32147>>>        Procedure OnClick
32150>>>            String[] aButtons
32151>>>            
32151>>>            Move "One"      to aButtons[0]
32152>>>            Move "Two"      to aButtons[1]
32153>>>            Move "Three"    to aButtons[2]
32154>>>            Move "Four"     to aButtons[3]
32155>>>            
32155>>>            Send ShowMessageBox of oWebApp Self (RefProc(CustomResponse)) "Pick your favorite number!" "Multiple choice" "WebMsgBoxConfirm" 1  aButtons
32156>>>        End_Procedure        
32157>>>    End_Object
32158>>>
32158>>>    Object oWebHorizontalLine1 is a cWebHorizontalLine
32160>>>    End_Object
32161>>>
32161>>>    Object oStandardAction is a cWebButton
32163>>>        Set psCaption to "Standard Question Dialog"
32164>>>        
32164>>>        // Standard dialog calls OnCloseModalDialog callback upon completion
32164>>>        Procedure OnCloseModalDialog Handle hoModalDialog
32167>>>            Boolean bCancel
32167>>>            String sAnswer
32167>>>            Send GetAnswers of hoModalDialog (&sAnswer) (&bCancel) 
32168>>>            If (bCancel) Begin
32170>>>                Send ShowInfoBox ("You didn't want to answer, did you?")
32171>>>            End
32171>>>>
32171>>>            Else Begin
32172>>>                Send ShowInfoBox ("Your name is '" + sAnswer + "'!!!")
32173>>>            End
32173>>>>
32173>>>        End_Procedure
32174>>>
32174>>>        Procedure OnClick
32177>>>            Send InitializeDialog of oDemoQuestionDialog "Question" "What is your name?" 
32178>>>            Send Popup of oDemoQuestionDialog Self
32179>>>        End_Procedure
32180>>>        
32180>>>    End_Object
32181>>>    
32181>>>    Object oCustomAction is a cWebButton
32183>>>        Set psCaption to "Custom Question Dialog"
32184>>>        
32184>>>        Procedure HandleResponse Boolean bOk String sAnswer
32187>>>            If (bOk) Begin
32189>>>                Send ShowInfoBox ("Your name is '" + sAnswer + "'!!!")
32190>>>            End
32190>>>>
32190>>>            Else Begin
32191>>>                Send ShowInfoBox ("You didn't want to answer, did you?")
32192>>>            End
32192>>>>
32192>>>        End_Procedure
32193>>>        //  Publish the response method (Security!)
32193>>>        WebPublishProcedure HandleResponse
32194>>>
32194>>>        Procedure OnClick
32197>>>            Send AskQuestion of oDemoActionDialog "Question" "What is your name?" (Self) (RefProc(HandleResponse))
32198>>>        End_Procedure
32199>>>    End_Object
32200>>>    
32200>>>    Object oWebHorizontalLine2 is a cWebHorizontalLine
32202>>>    End_Object
32203>>>    
32203>>>    Object oErrorDialog is a cWebButton
32205>>>        Set psCaption to "Standard Error Dialog"
32206>>>        
32206>>>        Procedure OnClick
32209>>>            Error 150 "Demo error message shown as unhandled error!"
32210>>>>
32210>>>        End_Procedure
32211>>>    End_Object
32212>>>    
32212>>>    Object oUserErrorDialog is a cWebButton
32214>>>        Set psCaption to "User Error Dialog"
32215>>>        
32215>>>        Procedure OnClick
32218>>>            Send UserError "Friendly error message using the UserError procedure." "Friendly error message :-)"
32219>>>        End_Procedure
32220>>>    End_Object
32221>>>
32221>>>    Object oUnhandledClientError is a cWebButton
32223>>>        Set piColumnSpan to 0
32224>>>        Set psCaption to "Clientside Error Dialog"
32225>>>    
32225>>>        Set psClientOnClick to "DoesNotExist"
32226>>>        Set pbServerOnClick to False
32227>>>    End_Object
32228>>>
32228>>>    Object oWebHorizontalLine3 is a cWebHorizontalLine
32230>>>    End_Object
32231>>>    
32231>>>    
32231>>>    Object oOpenFile is a cWebButton
32233>>>        Set psCaption to "File Dialog"
32234>>>        
32234>>>        Procedure OnClick
32237>>>            Send Show of oDemoFileDialog
32238>>>        End_Procedure
32239>>>    End_Object
32240>>>End_Object
32241>>>
32241>>>
32241>    Use DemoManualDataAwareGrid.wo
Including file: DemoManualDataAwareGrid.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoManualDataAwareGrid.wo)
32241>>>// Inventory List
32241>>>//
32241>>>
32241>>>Use cWebView.pkg
32241>>>Use cWebPanel.pkg
32241>>>Use cWebGrid.pkg
32241>>>Use cWebColumn.pkg
32241>>>
32241>>>Use Vendor.DD
32241>>>Use Invt.DD
32241>>>
32241>>>
32241>>>Object oDemoManualDataAwareGrid is a cWebView
32243>>>    Set piColumnCount to 10
32244>>>    Set psCaption to "Manual Data Aware Grid"
32245>>>    Set piWidth to 750
32246>>>    
32246>>>
32246>>>    Object oVendor_DD is a Vendor_DataDictionary
32248>>>    End_Object 
32249>>>
32249>>>    Object oInvt_DD is a Invt_DataDictionary
32251>>>        Set DDO_Server To oVendor_DD
32252>>>    End_Object 
32253>>>
32253>>>    Set Main_DD To oInvt_DD
32254>>>    Set Server  To oInvt_DD
32255>>>
32255>>>    Object oGrid is a cWebGrid 
32257>>>        Set piHeight to 500
32258>>>        Set pbColumnSortable to True
32259>>>        Set peDbGridType to gtManual
32260>>>        
32260>>>        Object oInvt_Description is a cWebColumn
32262>>>            Entry_Item Invt.Description
32263>>>            Set psCaption to "Inventory Item"
32264>>>            Set piWidth to 75
32265>>>            
32265>>>            Set pbSortable to True
32266>>>        End_Object
32267>>>
32267>>>        Object oInvt_Vendor_Part_ID is a cWebColumn
32269>>>            Entry_Item Invt.Vendor_Part_ID
32270>>>            Set psCaption to "Part ID"
32271>>>            Set piWidth to 40
32272>>>            
32272>>>            Set pbSortable to True
32273>>>        End_Object
32274>>>        
32274>>>        Object oVendor_ID is a cWebColumn
32276>>>            Entry_Item Vendor.ID
32277>>>            Set psCaption to "Vendor"
32278>>>            Set piWidth to 30
32279>>>            
32279>>>            Set pbSortable to True
32280>>>        End_Object
32281>>>        
32281>>>        Object oVendor_Name is a cWebColumn
32283>>>            Entry_Item Vendor.Name
32284>>>            Set psCaption to "Vendor"
32285>>>            Set piWidth to 50
32286>>>            
32286>>>            Set pbSortable to True
32287>>>        End_Object
32288>>>        
32288>>>        Object oInvt_On_Hand is a cWebColumn
32290>>>            Entry_Item Invt.On_Hand
32291>>>            Set psCaption to "On Hand"
32292>>>            Set piWidth to 20
32293>>>            
32293>>>            Set pbSortable to True
32294>>>        End_Object
32295>>>
32295>>>        Object oInvt_Unit_Price is a cWebColumn
32297>>>            Entry_Item Invt.Unit_Price
32298>>>            Set psCaption to "Unit Price"
32299>>>            Set piWidth to 30
32300>>>            
32300>>>            Set pbSortable to True
32301>>>        End_Object
32302>>>
32302>>>
32302>>>        Procedure OnManualLoadData tWebRow[] ByRef aTheRows String ByRef sCurrentRowID
32305>>>            // Loads the first 10 inventory items.
32305>>>            Handle hoDD
32305>>>            RowID riRowID 
32305>>>            String sRowID
32305>>>            Integer iRow
32305>>>
32305>>>            // Establish the find ordering and find the first record.
32305>>>            Move 0 to iRow            
32306>>>            Get Server to hoDD
32307>>>            Get ReadDDFirstRecord hoDD 1 False to riRowID
32308>>>
32308>>>            //  Find remaining records....
32308>>>            While (Found and (iRow < 10))
32312>>>                //  We use the LoadGridRow function to fill the row struct based on the data entry object (DEO) values
32312>>>                Get LoadGridRow to aTheRows[iRow]
32313>>>                
32313>>>                Increment iRow
32314>>>                Send Locate_Next to hoDD
32315>>>            Loop
32316>>>>
32316>>>            
32316>>>            // Set the first row to be the selected row
32316>>>            If (IsNullRowID(riRowID)) Begin
32318>>>                Move "" to sCurrentRowID
32319>>>            End
32319>>>>
32319>>>            Else Begin
32320>>>                Send FindByRowId of oInvt_DD Invt.File_Number riRowID
32321>>>                Move (SerializeRowID(riRowID)) to sCurrentRowID
32322>>>            End
32322>>>>
32322>>>            
32322>>>            
32322>>>        End_Procedure
32323>>>
32323>>>        Procedure OnLoad
32326>>>            Send GridRefresh
32327>>>        End_Procedure
32328>>>    End_Object
32329>>>
32329>>>End_Object 
32330>    Use DemoManualGrid.wo
Including file: DemoManualGrid.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoManualGrid.wo)
32330>>>Use cWebView.pkg
32330>>>Use cWebPanel.pkg
32330>>>Use cWebForm.pkg 
32330>>>Use cWebGrid.pkg
32330>>>Use cWebColumn.pkg
32330>>>Use cWebLabel.pkg
32330>>>Use cWebButton.pkg
32330>>>Use cWebHtmlBox.pkg
32330>>>
32330>>>Object oDemoManualGrid is a cWebView
32332>>>    Set piWidth to 750
32333>>>    Set psCaption to "Manual Grid"
32334>>>    
32334>>>    Set piColumnCount to 10
32335>>>
32335>>>    Object oGrid is a cWebGrid
32337>>>        Set pbFillHeight to True
32338>>>
32338>>>        Set pbDataAware to False
32339>>>        Set pbOfflineEditing to True
32340>>>        
32340>>>        Set pbColumnSortable to True
32341>>>        Set piSortColumn to 0
32342>>>        
32342>>>        Object oArtistCol is a cWebColumn
32344>>>            Set psCaption to "Artist"
32345>>>            Set piWidth to 100
32346>>>        End_Object
32347>>>        
32347>>>        Object oAlbumCol is a cWebColumn
32349>>>            Set psCaption to "Album"
32350>>>            Set piWidth to 100
32351>>>        End_Object
32352>>>
32352>>>        Object oSizeCol is a cWebColumn
32354>>>            Set psCaption to "Size"
32355>>>            Set peDataType to typeNumber
32356>>>            Set piWidth to 40
32357>>>            Set psMask to ",*0.0 MB"
32358>>>            
32358>>>            Set piPrecision to 1
32359>>>            Set piMaxLength to 10
32360>>>        End_Object
32361>>>
32361>>>        Object oLengthCol is a cWebColumn
32363>>>            Set psCaption to "Length"
32364>>>            Set peDataType to typeNumber
32365>>>            Set piWidth to 40
32366>>>            Set psMask to ",*0.00 M"
32367>>>            
32367>>>            
32367>>>            Set piMaxLength to 10
32368>>>            Set piPrecision to 2
32369>>>        End_Object
32370>>>        
32370>>>        Procedure OnManualLoadData tWebRow[] ByRef aTheRows String ByRef sCurrentRowID
32373>>>            Integer iHigh
32373>>>            
32373>>>            Get LoadDataFromFile (&aTheRows) to iHigh
32374>>>        End_Procedure 
32375>>>        
32375>>>        Procedure OnProcessDataSet tWebRow[] aData Integer eOperation Integer iSelectedRowIndex
32378>>>            Send SaveDataToFile aData
32379>>>            
32379>>>            Send ShowInfoBox ("Saved " + String(SizeOfArray(aData)) + " lines!") "Confirm"
32380>>>        End_Procedure
32381>>>        
32381>>>        Procedure OnLoad
32384>>>            Forward Send OnLoad
32386>>>            
32386>>>            Send GridRefresh
32387>>>        End_Procedure
32388>>>    End_Object
32389>>>
32389>>>    Object oWebButton1 is a cWebButton
32391>>>        Set piColumnSpan to 0
32392>>>        Set psCaption to "Save Data!"
32393>>>    
32393>>>        Procedure OnClick
32396>>>            Send ProcessDataSet of oGrid 342
32397>>>        End_Procedure
32398>>>    End_Object
32399>>>    
32399>>>    Object oDescriptionLabel is a cWebHtmlBox
32401>>>        Set psHtml to "<h1>Loading</h1><p>The data shown inside the grid is manually loaded from a CSV file. The <b>pbDataAware</b> property is set to False, so that it is manually loaded and doesn't try to find and save on DDOs. The grid is triggered to fill itself by calling <b>GridRefresh</b> and, because <b>pbDataAware</b> is False, this causes <b>OnManualLoadData</b> to be called. The data is put in an array of <b>tWebRow</b> structs received by reference. The first string in the aValues array is the unique for each row, it is required to provide such an unique ID. The <b>ConvertToClient</b> function can be used to convert values to right format understood by the JavaScript engine.</p><h1>Saving</h1><p>Saving is done for the entire set at once. It is triggered by calling <b>ProcessDataSet</b>, which tells the client to send all rows to the server in a new call. This new call fires the <b>OnProcessDataSet</b> event that gets the data in an array of tWebRow structs. The <b>ConvertFromClient</b> function can be used to convert values back to native DataFlex types.</p>"
32402>>>        Set piColumnSpan to 0
32403>>>    End_Object
32404>>>        
32404>>>    Function LoadDataFromFile tWebRow[] ByRef aTheRows Returns Integer
32407>>>        String sArtist sAlbum sTrash
32407>>>        Number nSize nLength 
32407>>>        Integer iID iNum iDecSep iHighest
32407>>>        
32407>>>        
32407>>>        Direct_Input "ManualData.Csv"
32408>>>        
32408>>>        Get_Attribute DF_DECIMAL_SEPARATOR to iDecSep
32411>>>        Set_Attribute DF_DECIMAL_SEPARATOR to (Ascii("."))
32414>>>        
32414>>>        Move 0 to iNum
32415>>>        Move 0 to iHighest
32416>>>        Repeat
32416>>>>
32416>>>            Readln iID sArtist sAlbum nSize nLength sTrash
32422>>>            
32422>>>            If (Trim(sArtist) <> "") Begin
32424>>>                //  Decode data                             
32424>>>                Move iID                                    to aTheRows[iNum].sRowID
32425>>>                Move sArtist                                to aTheRows[iNum].aCells[0].sValue
32426>>>                Move sAlbum                                 to aTheRows[iNum].aCells[1].sValue
32427>>>                Move (ConvertToClient(typeNumber, nSize))   to aTheRows[iNum].aCells[2].sValue
32428>>>                Move (ConvertToClient(typeNumber, nLength)) to aTheRows[iNum].aCells[3].sValue
32429>>>                
32429>>>                If (iID > iHighest) Begin
32431>>>                    Move iID to iHighest                        
32432>>>                End
32432>>>>
32432>>>                
32432>>>                Increment iNum                                
32433>>>            End
32433>>>>
32433>>>        Until (SeqEof)// or iNum > 3)
32435>>>        
32435>>>        Set_Attribute DF_DECIMAL_SEPARATOR to iDecSep
32438>>>        
32438>>>        Close_Input
32439>>>        
32439>>>        WebSet piHighest to iHighest
32441>>>                
32441>>>        Function_Return iHighest
32442>>>    End_Function
32443>>>    
32443>>>    Property Integer piHighest 0
32447>>>    
32447>>>    Procedure SaveDataToFile tWebRow[] aData
32450>>>        //Send ShowInfoBox (SFormat("We are going to save %1 rows!", SizeOfArray(aData))) ("Yeeh!")
32450>>>        Integer iChOut iTo iRow iCol iDecSep iID iHigh
32450>>>        String sArtist sAlbum
32450>>>        Number nSize nLength 
32450>>>        
32450>>>        WebGet piHighest to iHigh
32451>>>        
32451>>>        Get_Attribute DF_DECIMAL_SEPARATOR to iDecSep
32454>>>        Set_Attribute DF_DECIMAL_SEPARATOR to (Ascii("."))
32457>>>        
32457>>>        EraseFile "Albums.csv"
32458>>>>
32458>>>        
32458>>>        Move (Seq_New_Channel()) to iChOut
32459>>>        Direct_Output channel iChOut "ManualData.csv"
32461>>>        
32461>>>        Move (SizeOfArray(aData) - 1) to iTo
32462>>>        
32462>>>        For iRow from 0 to iTo
32468>>>>
32468>>>            If (Left(aData[iRow].sRowID, 4) = "new_") Begin
32470>>>                //  Autonumber
32470>>>                Increment iHigh
32471>>>                Move iHigh to iID
32472>>>            End
32472>>>>
32472>>>            Else Begin
32473>>>                Move (aData[iRow].sRowID) to iID
32474>>>            End
32474>>>>
32474>>>            
32474>>>            //  Encode data
32474>>>            Move (Replaces('"', aData[iRow].aCells[0].sValue, '\"'))           to sArtist
32475>>>            Move (Replaces('"', aData[iRow].aCells[1].sValue, '\"'))           to sAlbum
32476>>>            Move (ConvertFromClient(typeNumber, aData[iRow].aCells[2].sValue)) to nSize
32477>>>            Move (ConvertFromClient(typeNumber, aData[iRow].aCells[3].sValue)) to nLength
32478>>>                
32478>>>            Writeln channel iChOut '"' iID '","' sArtist '","' sAlbum '","' nSize '","' nLength '"'
32491>>>        Loop
32492>>>>
32492>>>        
32492>>>        Close_Output channel iChOut
32494>>>        Send Seq_Release_Channel iChOut
32495>>>        
32495>>>        Set_Attribute DF_DECIMAL_SEPARATOR to iDecSep
32498>>>    End_Procedure
32499>>>
32499>>>End_Object
32500>    Use DemoMultiDDOStructure.wo
Including file: DemoMultiDDOStructure.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoMultiDDOStructure.wo)
32500>>>Use cWebView.pkg
32500>>>Use cWebPanel.pkg
32500>>>Use cWebForm.pkg 
32500>>>Use cWebTabContainer.pkg
32500>>>Use cWebTabPage.pkg
32500>>>Use cWebEdit.pkg
32500>>>Use cWebCheckbox.pkg
32500>>>Use cWebGroup.pkg
32500>>>
32500>>>Use Vendor.DD
32500>>>Use Customer.DD
32500>>>Use Invt.DD
32500>>>
32500>>>Object oDemoMultiDDOStructure is a cWebView
32502>>>    Set piWidth to 900
32503>>>    Set psCaption to "Multi DDO Structure"
32504>>>    Set piColumnCount to 10
32505>>>    
32505>>>    // DDO Structure 1: this will be the view's main DDO structure
32505>>>    Object oCustomer_DD is a Customer_DataDictionary
32507>>>    End_Object
32508>>>
32508>>>    Set Main_DD to oCustomer_DD
32509>>>    
32509>>>    // DDO Structure 2: We need to register this so it will be synchronized at the client
32509>>>    Object oInactiveCustomer_DD is a Customer_DataDictionary
32511>>>        Procedure OnConstrain
32514>>>            Constrain Customer.Status eq "N"
32516>>>        End_Procedure
32517>>>    End_Object
32518>>>    
32518>>>    Send AddDDOStructure oInactiveCustomer_DD
32519>>>    
32519>>>    // DDO Structure 3: We need to register this so it will be synchronized at the client
32519>>>    Object oVendor_DD is a Vendor_DataDictionary
32521>>>    End_Object
32522>>>    
32522>>>    Send AddDDOStructure oVendor_DD
32523>>>
32523>>>    // DDO Structure 4: We need to register this so it will be synchronized at the client
32523>>>    Object oVendorTwo_DD is a Vendor_DataDictionary
32525>>>    End_Object
32526>>>
32526>>>    Object oInvt_DD is a Invt_DataDictionary
32528>>>        Set DDO_Server to oVendorTwo_DD
32529>>>    End_Object
32530>>>
32530>>>    Send AddDDOStructure oInvt_DD
32531>>>
32531>>>    Object oCustomerContainer is a cWebGroup
32533>>>        Set psCaption to "All Customers:"
32534>>>        Set piColumnCount to 9
32535>>>        Set piColumnSpan to 5
32536>>>        
32536>>>        Set Server to oCustomer_DD
32537>>>
32537>>>        Object oCustomer_Customer_Number is a cWebForm
32539>>>            Entry_Item Customer.Customer_Number
32540>>>            Set piColumnSpan to 0
32541>>>            Set psLabel to "Customer Number:"
32542>>>            Set peAlign to alignLeft
32543>>>        End_Object
32544>>>
32544>>>        Object oCustomer_Name is a cWebForm
32546>>>            Entry_Item Customer.Name
32547>>>            Set piColumnSpan to 0
32548>>>            Set psLabel to "Customer Name:"
32549>>>        End_Object
32550>>>
32550>>>        Object oCustomer_Address is a cWebForm
32552>>>            Entry_Item Customer.Address
32553>>>            Set piColumnSpan to 0
32554>>>            Set psLabel to "Street Address:"
32555>>>        End_Object
32556>>>
32556>>>        Object oCustomer_City is a cWebForm
32558>>>            Entry_Item Customer.City
32559>>>            Set piColumnSpan to 0
32560>>>            Set psLabel to "City:"
32561>>>        End_Object
32562>>>
32562>>>        Object oCustomer_Comments is a cWebEdit
32564>>>            Entry_Item Customer.Comments
32565>>>            Set piColumnSpan to 0
32566>>>            Set pbShowLabel to False
32567>>>        End_Object           
32568>>>    End_Object
32569>>>
32569>>>    Object oInactiveCustomerContainer is a cWebGroup
32571>>>        Set psCaption to "Inactive Customers:"
32572>>>        Set piColumnIndex to 5
32573>>>        Set piColumnCount to 9
32574>>>        
32574>>>        Set Server to oInactiveCustomer_DD
32575>>>
32575>>>        Object oCustomer_Customer_Number is a cWebForm
32577>>>            Entry_Item Customer.Customer_Number
32578>>>            Set piColumnSpan to 0
32579>>>            Set psLabel to "Customer Number:"
32580>>>            Set peAlign to alignLeft
32581>>>        End_Object
32582>>>
32582>>>        Object oCustomer_Name is a cWebForm
32584>>>            Entry_Item Customer.Name
32585>>>            Set piColumnSpan to 0
32586>>>            Set psLabel to "Customer Name:"
32587>>>        End_Object
32588>>>
32588>>>        Object oCustomer_Address is a cWebForm
32590>>>            Entry_Item Customer.Address
32591>>>            Set piColumnSpan to 0
32592>>>            Set psLabel to "Street Address:"
32593>>>        End_Object
32594>>>
32594>>>        Object oCustomer_City is a cWebForm
32596>>>            Entry_Item Customer.City
32597>>>            Set piColumnSpan to 0
32598>>>            Set psLabel to "City:"
32599>>>        End_Object
32600>>>
32600>>>        Object oCustomer_Comments is a cWebEdit
32602>>>            Entry_Item Customer.Comments
32603>>>            Set piColumnSpan to 0
32604>>>            Set pbShowLabel to False
32605>>>        End_Object           
32606>>>
32606>>>        Object oCustomer_Status is a cWebCheckBox
32608>>>            Entry_Item Customer.Status
32609>>>            Set piColumnSpan to 0
32610>>>            Set psCaption to "Active Status"
32611>>>            Set pbShowLabel to True
32612>>>        End_Object
32613>>>    End_Object
32614>>>    
32614>>>    Object oVendorContainer is a cWebGroup
32616>>>        Set psCaption to "Vendor:"
32617>>>        Set piColumnSpan to 5
32618>>>        Set piColumnCount to 9
32619>>>            
32619>>>        Set Server to oVendor_DD
32620>>>
32620>>>        Object oVendor_ID is a cWebForm
32622>>>            Entry_Item Vendor.ID
32623>>>            Set piColumnSpan to 0
32624>>>            Set psLabel to "Vendor ID:"
32625>>>            Set peAlign to alignLeft
32626>>>        End_Object
32627>>>
32627>>>        Object oVendor_Name is a cWebForm
32629>>>            Entry_Item Vendor.Name
32630>>>            Set piColumnSpan to 0
32631>>>            Set psLabel to "Vendor Name:"
32632>>>        End_Object
32633>>>
32633>>>        Object oVendor_Address is a cWebForm
32635>>>            Entry_Item Vendor.Address
32636>>>            Set piColumnSpan to 0
32637>>>            Set psLabel to "Street Address:"
32638>>>        End_Object
32639>>>
32639>>>        Object oVendor_City is a cWebForm
32641>>>            Entry_Item Vendor.City
32642>>>            Set piColumnSpan to 0
32643>>>            Set psLabel to "City:"
32644>>>        End_Object            
32645>>>    End_Object
32646>>>    
32646>>>    Object oInventoryContainer is a cWebGroup
32648>>>        Set psCaption to "Inventory:"
32649>>>        Set piColumnIndex to 5
32650>>>        Set piColumnCount to 9
32651>>>        
32651>>>        Set Server to oInvt_DD
32652>>>
32652>>>        Object oInvt_Item_ID is a cWebForm
32654>>>            Entry_Item Invt.Item_ID
32655>>>            Set piColumnSpan to 0
32656>>>            Set psLabel to "Inventory Item:"
32657>>>            Set peAlign to alignLeft
32658>>>        End_Object
32659>>>
32659>>>        Object oInvt_Description is a cWebForm
32661>>>            Entry_Item Invt.Description
32662>>>            Set piColumnSpan to 0
32663>>>            Set psLabel to "Description:"
32664>>>        End_Object
32665>>>
32665>>>        Object oVendor_Name1 is a cWebForm
32667>>>            Entry_Item Vendor.Name
32668>>>            Set piColumnSpan to 0
32669>>>            Set psLabel to "Vendor:"
32670>>>        End_Object
32671>>>
32671>>>        Object oInvt_Unit_Price is a cWebForm
32673>>>            Entry_Item Invt.Unit_Price
32674>>>            Set piColumnSpan to 0
32675>>>            Set psLabel to "Unit Price:"
32676>>>            Set peAlign to alignLeft
32677>>>        End_Object
32678>>>
32678>>>        Object oInvt_On_Hand is a cWebForm
32680>>>            Entry_Item Invt.On_Hand
32681>>>            Set piColumnSpan to 0
32682>>>            Set psLabel to "On Hand:"
32683>>>            Set peAlign to alignLeft
32684>>>        End_Object
32685>>>        
32685>>>    End_Object
32686>>>End_Object
32687>    Use DemoTreeView.wo
Including file: DemoTreeView.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoTreeView.wo)
32687>>>Use cWebView.pkg
32687>>>Use cWebForm.pkg
32687>>>Use cWebLabel.pkg
32687>>>Use cWebTreeView.pkg
32687>>>
32687>>>Use Vendor.DD
32687>>>Use Invt.DD
32687>>>Use cWebSpacer.pkg
32687>>>Use cWebHorizontalLine.pkg
32687>>>
32687>>>
32687>>>Object oDemoTreeView is a cWebView
32689>>>    Set psCaption to "TreeView + OnSyncView"
32690>>>    Set piColumnCount to 3
32691>>>    Set pbClearAfterSave to False
32692>>>     
32692>>>    Object oVendor_DD is a Vendor_DataDictionary
32694>>>    End_Object // oVendor_DD
32695>>>
32695>>>    Object oInvt_DD is a Invt_DataDictionary
32697>>>        Set DDO_Server to oVendor_DD
32698>>>        
32698>>>        Procedure Creating
32701>>>            Forward Send Creating
32703>>>            
32703>>>            tWebTreeItem tNode
32703>>>            tWebTreeItem tNode
32703>>>            
32703>>>            //  Add tree item for the item
32703>>>            Move (Trim(Invt.Item_ID))               to tNode.sName
32704>>>            Move (Trim(Invt.Description))           to tNode.sAltText
32705>>>            Move (Trim(Invt.Item_ID))               to tNode.sId
32706>>>            Move (Trim(Vendor.ID))                  to tNode.sParentId
32707>>>            Move False                              to tNode.bLoadChildren
32708>>>            Move False                              to tNode.bFolder
32709>>>            
32709>>>            Send InsertNode of oItemsTree tNode
32710>>>        End_Procedure
32711>>>        
32711>>>        Procedure Deleting
32714>>>            String sId
32714>>>            
32714>>>            Move (Trim(Invt.Item_ID)) to sId
32715>>>            
32715>>>            Forward Send Deleting
32717>>>            
32717>>>            //  Remove node from tree
32717>>>            Send RemoveNode of oItemsTree sId
32718>>>        End_Procedure
32719>>>        
32719>>>        Procedure Update
32722>>>            Forward Send Update
32724>>>            
32724>>>            tWebTreeItem tNode
32724>>>            tWebTreeItem tNode
32724>>>            
32724>>>            //  Update item in tree
32724>>>            Move (Trim(Invt.Item_ID))               to tNode.sName
32725>>>            Move (Trim(Invt.Description))           to tNode.sAltText
32726>>>            Move (Trim(Invt.Item_ID))               to tNode.sId
32727>>>            Move (Trim(Vendor.ID))                  to tNode.sParentId
32728>>>            Move False                              to tNode.bLoadChildren
32729>>>            Move False                              to tNode.bFolder
32730>>>            
32730>>>            Send UpdateNode of oItemsTree tNode
32731>>>        End_Procedure
32732>>>    End_Object // oInvt_DD
32733>>>
32733>>>    Set Main_DD to oInvt_DD
32734>>>    Set Server  to oInvt_DD
32735>>>
32735>>>    Object oLeftPanel is a cWebPanel
32737>>>        Set peRegion to prLeft
32738>>>        Set piWidth to 400
32739>>>        Set piMinWidth to 100
32740>>>        Set pbResizable to True
32741>>>            
32741>>>        Object oItemsTree is a cWebTreeView
32743>>>            Set pbServerOnSelect to True
32744>>>            Set psLabel to "Tree"
32745>>>            
32745>>>            Procedure OnSelect String sId String sValue Integer iLevel
32748>>>                If (iLevel = 1) Begin
32750>>>                    Send Clear of oInvt_DD
32751>>>                    Move sId to Vendor.ID
32752>>>                    Send Find of oVendor_DD EQ Index.1
32753>>>                End
32753>>>>
32753>>>                
32753>>>                If (iLevel = 2) Begin
32755>>>                    Move sId to Invt.Item_ID
32756>>>                    Send Find of oInvt_DD EQ Index.1
32757>>>                End
32757>>>>
32757>>>            End_Procedure
32758>>>            
32758>>>            
32758>>>            Function OnLoadChildNodes String sId String sValue Integer iLevel returns tWebTreeItem[]
32761>>>                tWebTreeItem[] aItems
32761>>>                tWebTreeItem[] aItems
32762>>>                tWebTreeItem tItem
32762>>>                tWebTreeItem tItem
32762>>>                Integer iCount
32762>>>                
32762>>>                Move 0 to iCount
32763>>>                
32763>>>                If (iLevel = 0) Begin   //  At the first level we will show the vendors
32765>>>                    //  Loop through vendors (use Request_Read so we don't change the current record of the DDO)
32765>>>                    Send Request_Read of oVendor_DD FIRST_RECORD Vendor.File_Number Index.1
32766>>>                    While (Found)
32770>>>                        
32770>>>                        //  Add tree item for the vendor
32770>>>                        Move (Trim(Vendor.Name))                to aItems[iCount].sName
32771>>>                        Move (Trim(Vendor.ID))                  to aItems[iCount].sId
32772>>>                        Move True                               to aItems[iCount].bLoadChildren
32773>>>                        Move True                               to aItems[iCount].bFolder
32774>>>//                        Move (SerializeRowID(GetRowID(Vendor))) to aItems[iCount].sValue
32774>>>                                                
32774>>>                        Increment iCount                        
32775>>>                        Send Locate_Next to oVendor_DD
32776>>>                    Loop
32777>>>>
32777>>>                End
32777>>>>
32777>>>                
32777>>>                If (iLevel = 1) Begin
32779>>>                    
32779>>>                    Clear Invt
32780>>>                    
32780>>>                    Move sId to Invt.Vendor_ID
32781>>>                    Find GT Invt by Index.2
32782>>>>
32782>>>                    
32782>>>                    
32782>>>                    
32782>>>                    While (Found and Trim(Invt.Vendor_ID) = sId)
32786>>>                        
32786>>>                        //  Add tree item for the item
32786>>>                        Move (Trim(Invt.Item_ID))               to aItems[iCount].sName
32787>>>                        Move (Trim(Invt.Description))           to aItems[iCount].sAltText
32788>>>                        Move (Trim(Invt.Item_ID))               to aItems[iCount].sId
32789>>>                        Move False                              to aItems[iCount].bLoadChildren
32790>>>                        Move False                              to aItems[iCount].bFolder
32791>>>                        
32791>>>                        Increment iCount
32792>>>                        Find GT invt by Index.2
32793>>>>
32793>>>                    Loop
32794>>>>
32794>>>                    
32794>>>                End
32794>>>>
32794>>>                
32794>>>                Function_Return aItems
32795>>>            End_Function
32796>>>        End_Object
32797>>>    End_Object
32798>>>    
32798>>>    Object oCenterPanel is a cWebPanel
32800>>>        Set peRegion to prCenter
32801>>>        Set piColumnCount to 2
32802>>>        Set piMinWidth to 400
32803>>>        
32803>>>        Object oItem_ID is a cWebForm
32805>>>            Set psLabel to "Invt. Item ID"
32806>>>            Entry_Item Invt.Item_ID
32807>>>            
32807>>>        End_Object // oInvtItem_ID
32808>>>    
32808>>>        Object oDescription is a cWebForm
32810>>>            Set psLabel to "Invt. Description"
32811>>>            Set piColumnSpan to 2
32812>>>            Entry_Item Invt.Description
32813>>>            
32813>>>            Set psValue to "Hi there!"
32814>>>        End_Object // oInvtDescription
32815>>>
32815>>>        Object oDevider1 is a cWebHorizontalLine
32817>>>        End_Object
32818>>>        
32818>>>    
32818>>>        Object oVendorID is a cWebForm
32820>>>            Set psLabel to "Vendor ID"
32821>>>            Entry_Item Vendor.ID
32822>>>        End_Object // oVendorID
32823>>>    
32823>>>        Object oVendorName is a cWebForm
32825>>>            Set psLabel to "Vendor Name"
32826>>>            Set piColumnSpan to 2
32827>>>            Entry_Item Vendor.Name
32828>>>        End_Object // oVendorName
32829>>>    
32829>>>        Object oInvtVendor_Part_ID is a cWebForm
32831>>>            Set psLabel to "Vendor Part ID"
32832>>>            Entry_Item Invt.Vendor_Part_ID
32833>>>        End_Object // oInvtVendor_Part_ID
32834>>>        
32834>>>        Object oDevider2 is a cWebHorizontalLine
32836>>>        End_Object
32837>>>        
32837>>>        Object oInvtUnit_Price is a cWebForm
32839>>>            Set psLabel to "Unit Price"
32840>>>            Entry_Item Invt.Unit_Price
32841>>>        End_Object // oInvtUnit_Price
32842>>>    
32842>>>        Object oInvtOn_Hand is a cWebForm
32844>>>            Set psLabel to "On Hand"
32845>>>            Set piColumnIndex to 1
32846>>>            Entry_Item Invt.On_Hand
32847>>>        End_Object // oInvtOn_Hand
32848>>>    End_Object
32849>>>    
32849>>>    //
32849>>>    //  Only administrators should be able to save in this view.
32849>>>    //
32849>>>    Procedure OnSyncView
32852>>>        Integer iUserRights
32852>>>        Get piUserRights of ghoWebSessionManager to iUserRights
32853>>>        
32853>>>        Set Read_Only_State of oVendor_DD to (iUserRights <= 0)
32854>>>        Set Read_Only_State of oInvt_DD to (iUserRights <= 0)
32855>>>    End_Procedure
32856>>>End_Object
32857>>>
32857>>>
32857>    Use DemoTreeViewCards.wo
Including file: DemoTreeViewCards.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoTreeViewCards.wo)
32857>>>Use cWebView.pkg
32857>>>Use cWebPanel.pkg
32857>>>Use cWebForm.pkg 
32857>>>Use cWebTreeView.pkg
32857>>>Use cWebCardContainer.pkg
32857>>>Use cWebCard.pkg
32857>>>Use cWebCheckBox.pkg
32857>>>Use cWebRadio.pkg
32857>>>Use cWebLabel.pkg
32857>>>Use cWebSpacer.pkg
32857>>>Use cWebHorizontalLine.pkg
32857>>>Use cWebHtmlBox.pkg
32857>>> 
32857>>>// Treeview item IDs
32857>>>// ~~~~~~~~~~~~~~~~~
32857>>>
32857>>>// treeview root level categories
32857>>>Define C_cfOverview     for 0
32857>>>Define C_cfEnvironment  for 10
32857>>>Define C_cfEditor       for 20
32857>>>Define C_cfCodeExplorer for 30
32857>>>Define C_cfDatabase     for 40
32857>>>
32857>>>// treeview sub-pages
32857>>>Define C_cfPage1 for 1
32857>>>Define C_cfPage2 for 2
32857>>>Define C_cfPage3 for 3
32857>>>Define C_cfPage4 for 4
32857>>>
32857>>>
32857>>>Object oDemoTreeViewCards is a cWebView
32859>>>    Set piWidth to 700
32860>>>    Set piHeight to 550
32861>>>    Set psCaption to "Configuration Panel"
32862>>>
32862>>>    Object oLeftPanel is a cWebPanel
32864>>>        Set peRegion to prLeft
32865>>>        Set piWidth to 200
32866>>>
32866>>>        Object oCategoryTree is a cWebTreeView
32868>>>            Set pbServerOnSelect to True
32869>>>            Set psBackgroundColor to "white" 
32870>>>
32870>>>            Function OnLoadChildNodes String sId String sValue Integer iLevel Returns tWebTreeItem[]
32873>>>                tWebTreeItem[] aItems
32873>>>                tWebTreeItem[] aItems
32874>>>                
32874>>>                // Populate Root Level Items
32874>>>                // ~~~~~~~~~~~~~~~~~~~~~~~~~
32874>>>                If (iLevel = 0) Begin
32876>>>                    Move C_cfOverview            to aItems[0].sId
32877>>>                    Move sId                     to aItems[0].sParentId
32878>>>                    Move "Overview"              to aItems[0].sName
32879>>>                    Move False                   to aItems[0].bLoadChildren
32880>>>                    Move True                    to aItems[0].bFolder
32881>>>                    Move "CssStyle/tvFolder.gif" to aItems[0].sIcon
32882>>>                    Move (WebObjectName(oOverviewCard)) to aItems[0].sValue    // Store the Card object name of the card to open
32883>>>
32883>>>                    Move C_cfEnvironment         to aItems[1].sId
32884>>>                    Move sId                     to aItems[1].sParentId
32885>>>                    Move "Environment"           to aItems[1].sName
32886>>>                    Move True                    to aItems[1].bLoadChildren
32887>>>                    Move True                    to aItems[1].bFolder
32888>>>                    Move (WebObjectName(oEnvironmentGeneralCard)) to aItems[1].sValue
32889>>>                    
32889>>>                    Move C_cfEditor              to aItems[2].sId
32890>>>                    Move sId                     to aItems[2].sParentId
32891>>>                    Move "Editor"                to aItems[2].sName
32892>>>                    Move True                    to aItems[2].bLoadChildren
32893>>>                    Move True                    to aItems[2].bFolder
32894>>>                    Move (WebObjectName(oEditorGeneralCard)) to aItems[2].sValue
32895>>>                                               
32895>>>                    Move C_cfCodeExplorer        to aItems[3].sId
32896>>>                    Move sId                     to aItems[3].sParentId
32897>>>                    Move "Code Explorer"         to aItems[3].sName
32898>>>                    Move False                   to aItems[3].bLoadChildren
32899>>>                    Move True                    to aItems[3].bFolder
32900>>>                    Move "CssStyle/tvFolder.gif" to aItems[4].sIcon
32901>>>                    Move (WebObjectName(oCodeExplorerCard)) to aItems[3].sValue
32902>>>                                               
32902>>>                    Move C_cfDatabase            to aItems[4].sId
32903>>>                    Move sId                     to aItems[4].sParentId
32904>>>                    Move "Database"              to aItems[4].sName
32905>>>                    Move False                   to aItems[4].bLoadChildren
32906>>>                    Move True                    to aItems[4].bFolder
32907>>>                    Move "CssStyle/tvFolder.gif" to aItems[4].sIcon
32908>>>                    Move (WebObjectName(oDatabaseCard)) to aItems[4].sValue
32909>>>                End
32909>>>>
32909>>>                Else Begin
32910>>>                    // Populate Sub-Pages
32910>>>                    // ~~~~~~~~~~~~~~~~~~
32910>>>                    Case Begin
32910>>>                        Case (sID = C_cfOverview)
32912>>>                            Case Break
32913>>>                            
32913>>>                        Case (sID = C_cfEnvironment)
32916>>>                            Move (C_cfEnvironment + C_cfPage1) to aItems[0].sId
32917>>>                            Move sId                           to aItems[0].sParentId
32918>>>                            Move "General"                     to aItems[0].sName
32919>>>                            Move False                         to aItems[0].bLoadChildren
32920>>>                            Move False                         to aItems[0].bFolder
32921>>>                            Move (WebObjectName(oEnvironmentGeneralCard)) to aItems[0].sValue    // Store the Card object name of the card to open
32922>>>
32922>>>                            Move (C_cfEnvironment + C_cfPage2) to aItems[1].sId
32923>>>                            Move sId                           to aItems[1].sParentId
32924>>>                            Move "Window Layout"               to aItems[1].sName
32925>>>                            Move False                         to aItems[1].bLoadChildren
32926>>>                            Move False                         to aItems[1].bFolder
32927>>>                            Move (WebObjectName(oEnvironmentWindowLayoutCard)) to aItems[1].sValue
32928>>>                            Case Break
32929>>>                            
32929>>>                        Case (sID = C_cfEditor)
32932>>>                            Move (C_cfEditor + C_cfPage1)      to aItems[0].sId
32933>>>                            Move sId                           to aItems[0].sParentId
32934>>>                            Move "General"                     to aItems[0].sName
32935>>>                            Move False                         to aItems[0].bLoadChildren
32936>>>                            Move False                         to aItems[0].bFolder
32937>>>                            Move (WebObjectName(oEditorGeneralCard)) to aItems[0].sValue
32938>>>
32938>>>                            Move (C_cfEditor + C_cfPage2)      to aItems[1].sId
32939>>>                            Move sId                           to aItems[1].sParentId
32940>>>                            Move "Misc"                        to aItems[1].sName
32941>>>                            Move False                         to aItems[1].bLoadChildren
32942>>>                            Move False                         to aItems[1].bFolder
32943>>>                            Move (WebObjectName(oEditorMiscCard)) to aItems[1].sValue
32944>>>                            Case Break
32945>>>                            
32945>>>                        Case (sID = C_cfCodeExplorer)
32948>>>                            Case Break
32949>>>                        
32949>>>                        Case (sID = C_cfDatabase)
32952>>>                            Case Break
32953>>>                    Case End
32953>>>                End
32953>>>>
32953>>>                
32953>>>                Function_Return aItems
32954>>>            End_Function
32955>>>
32955>>>            Procedure OnSelect String sId String sValue Integer iLevel
32958>>>                Handle hoCard
32958>>>                
32958>>>                Forward Send OnSelect sId sValue iLevel
32960>>>                
32960>>>                If (sValue <> "") Begin
32962>>>                    // Show the card pointed to by sValue
32962>>>                    Get WebObjectByName sValue to hoCard
32963>>>                    
32963>>>                    If (hoCard <> 0) Begin
32965>>>                        Send Show to hoCard
32966>>>                    End
32966>>>>
32966>>>                End
32966>>>>
32966>>>            End_Procedure
32967>>>
32967>>>            Procedure OnLoad
32970>>>                Forward Send OnLoad
32972>>>                Send Select C_cfOverview   // select the "Overview" item by default
32973>>>            End_Procedure
32974>>> 
32974>>>        End_Object       
32975>>>    End_Object
32976>>>    
32976>>>    Object oCenterPanel is a cWebPanel
32978>>>        Object oCardContainer is a cWebCardContainer
32980>>>            Set pbShowCaption to True
32981>>>
32981>>>            Object oOverviewCard is a cWebCard
32983>>>                Set psCaption to "Overview"
32984>>>
32984>>>                Object oWebSpacer2 is a cWebSpacer
32986>>>                End_Object
32987>>>
32987>>>                Object oWebHtmlBox1 is a cWebHtmlBox
32989>>>                    Set piColumnSpan to 0
32990>>>                    Set psHtml to ("This view demonstrates the use of the cWebTreeView control together with cWebCardContainer and cWebCard." ;                                 + "<br><br>Web cards are used to stack panels containing other web controls, one on top of another. " ;                                 + "This demonstrates a style of configuration dialog where the different configuration pages are selected from a tree view." ;                                 + "<br><br>The cWebCardContainer object is used to group cWebCards together. Each cWebCard contains a set of controls to display when that card is shown. " ;                                 + "The cWebTreeView is used to represent the cards hierarchically and navigating the tree nodes will change which card is on top." ;                                 + "<br><br>Lastly, this view demonstrates how to apply application styles to modify the appearance of the tree view. These application styles are defined in the file 'application.css'." ;                                 + "<br><br>The source code for this view can be found in the file 'DemoTreeViewCards.wo'.")
32991>>>                End_Object
32992>>>            End_Object
32993>>>
32993>>>            Object oEnvironmentGeneralCard is a cWebCard
32995>>>                Set psCaption to "Environment - General"
32996>>>
32996>>>                Object oWebSpacer2 is a cWebSpacer
32998>>>                End_Object
32999>>>                
32999>>>                Object oWebCheckbox1 is a cWebCheckbox
33001>>>                    Set psChecked to "Y"
33002>>>                    Set psUnchecked to "N"
33003>>>                    Set psValue to "Y"
33004>>>                    Set piColumnSpan to 0
33005>>>                    Set psCaption to "Load Previous Workspace when starting the Studio"
33006>>>                End_Object
33007>>>                
33007>>>                Object oWebCheckbox2 is a cWebCheckbox
33009>>>                    Set psChecked to "Y"
33010>>>                    Set psUnchecked to "N"
33011>>>                    Set psValue to "Y"
33012>>>                    Set piColumnSpan to 0
33013>>>                    Set psCaption to "Open Dashboard when creating a new Workspace"
33014>>>                End_Object
33015>>>
33015>>>                Object oWebCheckbox3 is a cWebCheckbox
33017>>>                    Set psChecked to "Y"
33018>>>                    Set psUnchecked to "N"
33019>>>                    Set psValue to "Y"
33020>>>                    Set piColumnSpan to 0
33021>>>                    Set psCaption to "Show Designer Resolution Grid"
33022>>>                End_Object
33023>>>
33023>>>                Object oWebCheckbox4 is a cWebCheckbox
33025>>>                    Set psChecked to "Y"
33026>>>                    Set psUnchecked to "N"
33027>>>                    Set psValue to "Y"
33028>>>                    Set piColumnSpan to 0
33029>>>                    Set psCaption to "Save/Restore Workspace Desktop"
33030>>>                End_Object
33031>>>            End_Object
33032>>>
33032>>>            Object oEnvironmentWindowLayoutCard is a cWebCard
33034>>>                Set psCaption to "Environment - Window Layout"
33035>>>
33035>>>                Object oWebSpacer1 is a cWebSpacer
33037>>>                End_Object
33038>>>
33038>>>                Object oWebRadio1 is a cWebRadio
33040>>>                    Set piColumnSpan to 0
33041>>>                    Set psCaption to "Tabbed Window Layout"
33042>>>                End_Object
33043>>>
33043>>>                Object oWebRadio2 is a cWebRadio
33045>>>                    Set piColumnSpan to 0
33046>>>                    Set psCaption to "Multiple Document Interface (MDI) Layout"
33047>>>                End_Object
33048>>>
33048>>>                Object oWebLabel1 is a cWebLabel
33050>>>                    Set psCaption to "Note: You must restart the Studio to apply this change."
33051>>>                End_Object
33052>>>
33052>>>                Object oWebCheckbox5 is a cWebCheckbox
33054>>>                    Set piColumnSpan to 0
33055>>>                    Set psCaption to "Multi-Row Tabbed Windows"
33056>>>                End_Object
33057>>>            End_Object
33058>>>
33058>>>            Object oEditorGeneralCard is a cWebCard
33060>>>                Set psCaption to "Editor - General"
33061>>>
33061>>>                Object oWebSpacer1 is a cWebSpacer
33063>>>                End_Object
33064>>>
33064>>>                Object oWebCheckbox1 is a cWebCheckbox
33066>>>                    Set psChecked to "Y"
33067>>>                    Set psUnchecked to "N"
33068>>>                    Set psValue to "Y"
33069>>>                    Set piColumnSpan to 0
33070>>>                    Set psCaption to "Show CodeSense Lists After a Character is Typed"
33071>>>                End_Object
33072>>>
33072>>>                Object oWebCheckbox2 is a cWebCheckbox
33074>>>                    Set psChecked to "Y"
33075>>>                    Set psUnchecked to "N"
33076>>>                    Set piColumnSpan to 0
33077>>>                    Set psCaption to "Always open files in the Editor by default"
33078>>>                End_Object
33079>>>
33079>>>                Object oWebCheckbox3 is a cWebCheckbox
33081>>>                    Set psChecked to "Y"
33082>>>                    Set psUnchecked to "N"
33083>>>                    Set psValue to "Y"
33084>>>                    Set piColumnSpan to 0
33085>>>                    Set psCaption to "Show find-wrapped message"
33086>>>                End_Object
33087>>>            End_Object
33088>>>
33088>>>            Object oEditorMiscCard is a cWebCard
33090>>>                Set psCaption to "Editor - Settings"
33091>>>
33091>>>                Object oWebSpacer1 is a cWebSpacer
33093>>>                End_Object
33094>>>
33094>>>                Object oWebCheckbox1 is a cWebCheckbox
33096>>>                    Set psChecked to "Y"
33097>>>                    Set psUnchecked to "N"
33098>>>                    Set piColumnSpan to 0
33099>>>                    Set psCaption to "Smooth scrolling"
33100>>>                End_Object
33101>>>
33101>>>                Object oWebCheckbox2 is a cWebCheckbox
33103>>>                    Set psChecked to "Y"
33104>>>                    Set psUnchecked to "N"
33105>>>                    Set psValue to "Y"
33106>>>                    Set piColumnSpan to 0
33107>>>                    Set psCaption to "Show left margin"
33108>>>                End_Object
33109>>>
33109>>>                Object oWebCheckbox3 is a cWebCheckbox
33111>>>                    Set psChecked to "Y"
33112>>>                    Set psUnchecked to "N"
33113>>>                    Set psValue to "Y"
33114>>>                    Set piColumnSpan to 0
33115>>>                    Set psCaption to "Line tooltips on scroll"
33116>>>                End_Object
33117>>>
33117>>>                Object oWebCheckbox4 is a cWebCheckbox
33119>>>                    Set psChecked to "Y"
33120>>>                    Set psUnchecked to "N"
33121>>>                    Set psValue to "Y"
33122>>>                    Set piColumnSpan to 0
33123>>>                    Set psCaption to "Enable virtual space"
33124>>>                End_Object
33125>>>
33125>>>                Object oWebCheckbox5 is a cWebCheckbox
33127>>>                    Set psChecked to "Y"
33128>>>                    Set psUnchecked to "N"
33129>>>                    Set psValue to "Y"
33130>>>                    Set piColumnSpan to 0
33131>>>                    Set psCaption to "Color syntax highlighting"
33132>>>                End_Object
33133>>>
33133>>>                Object oWebCheckbox6 is a cWebCheckbox
33135>>>                    Set psChecked to "Y"
33136>>>                    Set psUnchecked to "N"
33137>>>                    Set psValue to "Y"
33138>>>                    Set piColumnSpan to 0
33139>>>                    Set psCaption to "Show horizontal scrollbar"
33140>>>                End_Object
33141>>>
33141>>>                Object oWebCheckbox7 is a cWebCheckbox
33143>>>                    Set psChecked to "Y"
33144>>>                    Set psUnchecked to "N"
33145>>>                    Set piColumnSpan to 0
33146>>>                    Set psCaption to "One click URL Navigation"
33147>>>                End_Object
33148>>>
33148>>>                Object oWebCheckbox8 is a cWebCheckbox
33150>>>                    Set psChecked to "Y"
33151>>>                    Set psUnchecked to "N"
33152>>>                    Set piColumnSpan to 0
33153>>>                    Set psCaption to "Copy RTF text to clipboard"
33154>>>                End_Object
33155>>>
33155>>>                Object oWebCheckbox9 is a cWebCheckbox
33157>>>                    Set psChecked to "Y"
33158>>>                    Set psUnchecked to "N"
33159>>>                    Set psValue to "Y"
33160>>>                    Set piColumnSpan to 0
33161>>>                    Set psCaption to "Brace matching"
33162>>>                End_Object
33163>>>            End_Object
33164>>>
33164>>>            Object oCodeExplorerCard is a cWebCard
33166>>>                Set psCaption to "Code Explorer"
33167>>>                Set piColumnCount to 2
33168>>>
33168>>>                Object oWebSpacer1 is a cWebSpacer
33170>>>                End_Object
33171>>>
33171>>>                Object oWebCheckbox1 is a cWebCheckbox
33173>>>                    Set psChecked to "Y"
33174>>>                    Set psUnchecked to "N"
33175>>>                    Set psValue to "Y"
33176>>>                    Set piColumnSpan to 1
33177>>>                    Set psCaption to "Display Classes"
33178>>>                End_Object
33179>>>
33179>>>                Object oWebCheckbox2 is a cWebCheckbox
33181>>>                    Set psChecked to "Y"
33182>>>                    Set psUnchecked to "N"
33183>>>                    Set piColumnSpan to 1
33184>>>                    Set piColumnIndex to 1
33185>>>                    Set psCaption to "Display Import Class Protocols"
33186>>>                End_Object
33187>>>
33187>>>                Object oWebCheckbox3 is a cWebCheckbox
33189>>>                    Set psChecked to "Y"
33190>>>                    Set psUnchecked to "N"
33191>>>                    Set psValue to "Y"
33192>>>                    Set piColumnSpan to 1
33193>>>                    Set psCaption to "Display Methods"
33194>>>                End_Object
33195>>>
33195>>>                Object oWebCheckbox4 is a cWebCheckbox
33197>>>                    Set psChecked to "Y"
33198>>>                    Set psUnchecked to "N"
33199>>>                    Set piColumnSpan to 1
33200>>>                    Set piColumnIndex to 1
33201>>>                    Set psCaption to "Display ActiveX Resources"
33202>>>                End_Object
33203>>>
33203>>>                Object oWebCheckbox5 is a cWebCheckbox
33205>>>                    Set psChecked to "Y"
33206>>>                    Set psUnchecked to "N"
33207>>>                    Set psValue to "Y"
33208>>>                    Set piColumnSpan to 1
33209>>>                    Set psCaption to "Display Properties"
33210>>>                End_Object
33211>>>
33211>>>                Object oWebCheckbox6 is a cWebCheckbox
33213>>>                    Set psChecked to "Y"
33214>>>                    Set psUnchecked to "N"
33215>>>                    Set piColumnSpan to 1
33216>>>                    Set piColumnIndex to 1
33217>>>                    Set psCaption to "Display Entry_Item Lists"
33218>>>                End_Object
33219>>>
33219>>>                Object oWebCheckbox7 is a cWebCheckbox
33221>>>                    Set psChecked to "Y"
33222>>>                    Set psUnchecked to "N"
33223>>>                    Set psValue to "Y"
33224>>>                    Set piColumnSpan to 1
33225>>>                    Set psCaption to "Display Objects"
33226>>>                End_Object
33227>>>
33227>>>                Object oWebCheckbox8 is a cWebCheckbox
33229>>>                    Set psChecked to "Y"
33230>>>                    Set psUnchecked to "N"
33231>>>                    Set piColumnSpan to 1
33232>>>                    Set piColumnIndex to 1
33233>>>                    Set psCaption to "Display Entry_Item Statements"
33234>>>                End_Object
33235>>>
33235>>>                Object oWebCheckbox9 is a cWebCheckbox
33237>>>                    Set psChecked to "Y"
33238>>>                    Set psUnchecked to "N"
33239>>>                    Set piColumnSpan to 1
33240>>>                    Set psCaption to "Display Uses"
33241>>>                End_Object
33242>>>
33242>>>                Object oWebCheckbox10 is a cWebCheckbox
33244>>>                    Set psChecked to "Y"
33245>>>                    Set psUnchecked to "N"
33246>>>                    Set psValue to "Y"
33247>>>                    Set piColumnSpan to 1
33248>>>                    Set piColumnIndex to 1
33249>>>                    Set psCaption to "Display External Functions"
33250>>>                End_Object
33251>>>
33251>>>                Object oWebCheckbox11 is a cWebCheckbox
33253>>>                    Set psChecked to "Y"
33254>>>                    Set psUnchecked to "N"
33255>>>                    Set piColumnSpan to 1
33256>>>                    Set psCaption to "Display Enum_Lists"
33257>>>                End_Object
33258>>>
33258>>>                Object oWebCheckbox12 is a cWebCheckbox
33260>>>                    Set psChecked to "Y"
33261>>>                    Set psUnchecked to "N"
33262>>>                    Set psValue to "Y"
33263>>>                    Set piColumnSpan to 1
33264>>>                    Set piColumnIndex to 1
33265>>>                    Set psCaption to "Display To Do Items"
33266>>>                End_Object
33267>>>
33267>>>                Object oWebCheckbox13 is a cWebCheckbox
33269>>>                    Set psChecked to "Y"
33270>>>                    Set psUnchecked to "N"
33271>>>                    Set piColumnSpan to 1
33272>>>                    Set psCaption to "Display Constant Declarations"
33273>>>                End_Object
33274>>>
33274>>>                Object oWebCheckbox14 is a cWebCheckbox
33276>>>                    Set psChecked to "Y"
33277>>>                    Set psUnchecked to "N"
33278>>>                    Set piColumnSpan to 1
33279>>>                    Set psCaption to "Display Struct Declarations"
33280>>>                End_Object
33281>>>
33281>>>                Object oWebCheckbox15 is a cWebCheckbox
33283>>>                    Set psChecked to "Y"
33284>>>                    Set psUnchecked to "N"
33285>>>                    Set piColumnSpan to 1
33286>>>                    Set psCaption to "Display Legacy Menus"
33287>>>                End_Object
33288>>>            End_Object
33289>>>
33289>>>            Object oDatabaseCard is a cWebCard
33291>>>                Set psCaption to "Database"
33292>>>
33292>>>                Object oWebSpacer1 is a cWebSpacer
33294>>>                End_Object
33295>>>
33295>>>                Object oWebHorizontalLine1 is a cWebHorizontalLine
33297>>>                End_Object
33298>>>
33298>>>                Object oWebLabel2 is a cWebLabel
33300>>>                    Set psCaption to "Table Explorer:"
33301>>>                End_Object
33302>>>
33302>>>                Object oWebRadio1 is a cWebRadio
33304>>>                    Set piColumnSpan to 0
33305>>>                    Set psCaption to "Sort by Table Name"
33306>>>                End_Object
33307>>>
33307>>>                Object oWebRadio2 is a cWebRadio
33309>>>                    Set piColumnSpan to 0
33310>>>                    Set psCaption to "Sort by Table Number"
33311>>>                End_Object
33312>>>
33312>>>                Object oWebHorizontalLine2 is a cWebHorizontalLine
33314>>>                End_Object
33315>>>
33315>>>                Object oWebLabel3 is a cWebLabel
33317>>>                    Set psCaption to "Table Editor:"
33318>>>                End_Object
33319>>>
33319>>>                Object oWebCheckbox1 is a cWebCheckbox
33321>>>                    Set psChecked to "Y"
33322>>>                    Set psUnchecked to "N"
33323>>>                    Set psValue to "Y"
33324>>>                    Set piColumnSpan to 1
33325>>>                    Set psCaption to "Never Confirm Saves"
33326>>>                End_Object
33327>>>
33327>>>                Object oWebHorizontalLine3 is a cWebHorizontalLine
33329>>>                End_Object
33330>>>
33330>>>                Object oWebLabel4 is a cWebLabel
33332>>>                    Set psCaption to "Data Dictionaries:"
33333>>>                End_Object
33334>>>
33334>>>                Object oWebCheckbox2 is a cWebCheckbox
33336>>>                    Set psChecked to "Y"
33337>>>                    Set psUnchecked to "N"
33338>>>                    Set psValue to "Y"
33339>>>                    Set piColumnSpan to 1
33340>>>                    Set psCaption to "Use Legacy Data Dictionary Naming Convention"
33341>>>                End_Object
33342>>>            End_Object
33343>>>        End_Object
33344>>>    End_Object 
33345>>>
33345>>>End_Object
33346>    Use DemoCards.wo
Including file: DemoCards.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoCards.wo)
33346>>>Use cWebView.pkg
33346>>>Use cWebForm.pkg
33346>>>Use cWebEdit.pkg
33346>>>Use cWebCombo.pkg
33346>>>Use cWebButton.pkg
33346>>>Use cWebTabContainer.pkg
33346>>>Use cWebTabPage.pkg
33346>>>Use cWebPanel.pkg
33346>>>Use cWebCheckbox.pkg
33346>>>
33346>>>Use Customer.DD
33346>>>Use SalesP.dd
33346>>>Use OrderHea.dd
33346>>>Use cWebRadio.pkg
33346>>>Use cWebLabel.pkg
33346>>>
33346>>>Object oDemoCards is a cWebView
33348>>>
33348>>>    Object Customer_DD is a Customer_DataDictionary
33350>>>    End_Object    // Customer_DD
33351>>>    Set Main_DD to Customer_DD
33352>>>    Set Server to Customer_DD
33353>>>    
33353>>>    Set piColumnCount to 3
33354>>>    Set psCaption to "Cards"
33355>>>    
33355>>>    Set psCSSClass to "CustomerView"
33356>>>    Set piWidth to 800
33357>>>    Set Verify_Save_Msg to 0   
33358>>>    
33358>>>    Object oCustomer_Number is a cWebForm
33360>>>        Set psLabel to "Customer Num:" 
33361>>>        Entry_Item Customer.Customer_Number
33362>>>    End_Object
33363>>>    
33363>>>    Object oCustomer_Name is a cWebForm
33365>>>        Set psLabel to "Name:"
33366>>>        Set piColumnIndex to 1
33367>>>        Set piColumnSpan to 2
33368>>>        Entry_Item Customer.Name
33369>>>    End_Object    // oCustomer_Name
33370>>>    
33370>>>    Object oCustomer_Status is a cWebCheckbox
33372>>>        Set psLabel to "Active: "
33373>>>        Set pbShowLabel to True
33374>>>        Entry_Item Customer.Status
33375>>>    End_Object
33376>>>    
33376>>>    Object oCardLayout is a cWebCardContainer
33378>>>        Set piColumnSpan to 3
33379>>>        
33379>>>        Set pbServerOnCardChange to True
33380>>>        // This shows how to use OnCardChange. Update the current tab each time there is a change
33380>>>        // and set the the next and previous buttons' enabled state as needed.
33380>>>        Procedure OnCardChange String sNewSelectedTab String sPrevSelectedTab
33383>>>            Handle hoCard
33383>>>            String sCaption
33383>>>            
33383>>>            Get CurrentCard to hoCard
33384>>>            
33384>>>            If (hoCard > 0) Begin
33386>>>                WebGet psCaption of hoCard to sCaption
33387>>>                
33387>>>                WebSet psCaption of oCurrentTabLbl to ("Current tab: " + sCaption)                
33388>>>                
33388>>>                WebSet pbEnabled of oNextBtn to (hoCard <> oCommentsCard)
33389>>>                WebSet pbEnabled of oPreviousBtn to (hoCard <> oAddressCard)
33390>>>            End
33390>>>>
33390>>>            Else Begin
33391>>>                WebSet psCaption of oCurrentTabLbl to ("Current tab: unknown")
33392>>>            End
33392>>>>
33392>>>            
33392>>>            
33392>>>        End_Procedure
33393>>>        
33393>>>        Object oAddressCard is a cWebCard
33395>>>            Set psCaption to "Address"
33396>>>            Set piColumnCount to 3
33397>>>            
33397>>>            Object oCustomer_Address is a cWebForm
33399>>>                Entry_Item Customer.Address
33400>>>                Set psLabel to "Street Address:"
33401>>>                Set piColumnSpan to 2
33402>>>            End_Object    // oCustomer_Address
33403>>>        
33403>>>            Object oCustomer_City is a cWebForm
33405>>>                Entry_Item Customer.City
33406>>>                Set psLabel to "City:"
33407>>>            End_Object    // oCustomer_City
33408>>>        
33408>>>            Object oCustomer_State is a cWebCombo
33410>>>                Entry_Item Customer.State
33411>>>                Set psLabel to "State:"
33412>>>                Set piColumnIndex to 1   // 1
33413>>>                Set peLabelAlign to 1
33414>>>            End_Object    // oCustomer_State
33415>>>        
33415>>>            Object oCustomer_Zip is a cWebForm
33417>>>                Entry_Item Customer.Zip
33418>>>                Set psLabel to "Zip / Postal Code:"
33419>>>                Set piColumnIndex to 2
33420>>>            End_Object    // oCustomer_Zip
33421>>>        
33421>>>            Object oCustomer_Phone_number is a cWebForm
33423>>>                Entry_Item Customer.Phone_Number
33424>>>                Set psLabel to "Phone Number:"
33425>>>                Set piColumnIndex to 0
33426>>>            End_Object    // oCustomer_Phone_number
33427>>>        
33427>>>            Object oCustomer_Fax_number is a cWebForm
33429>>>                Entry_Item Customer.Fax_Number
33430>>>                Set psLabel to "Fax Number:"
33431>>>                Set piColumnIndex to 1
33432>>>            End_Object    // oCustomer_Fax_number
33433>>>        
33433>>>            Object oCustomer_Email_address is a cWebForm
33435>>>                Entry_Item Customer.EMail_Address
33436>>>                Set psLabel to "E-Mail Address:"
33437>>>                Set piColumnIndex to 2
33438>>>            End_Object    // oCustomer_Email_address
33439>>>            
33439>>>        End_Object
33440>>>        
33440>>>        Object oBalancesCard is a cWebCard
33442>>>            Set psCaption to "Balances"
33443>>>            Set piColumnCount to 3
33444>>>            
33444>>>            Object oCustomer_Credit_Limit is a cWebForm
33446>>>                Entry_Item Customer.Credit_limit
33447>>>                Set psLabel to "Credit Limit:"
33448>>>                Set piColumnIndex to 0
33449>>>            End_Object    // oCustomer_Credit_Limit
33450>>>        
33450>>>            Object oCustomer_Purchases is a cWebForm
33452>>>                Entry_Item Customer.Purchases
33453>>>                Set psLabel to "Total Purchases:"
33454>>>            End_Object    // oCustomer_Purchases
33455>>>        
33455>>>            Object oCustomer_Balance is a cWebForm
33457>>>                Entry_Item Customer.Balance
33458>>>                Set psLabel to "Balance Due:"
33459>>>            End_Object    // oCustomer_Balance
33460>>>            
33460>>>        End_Object
33461>>>        
33461>>>        
33461>>>        Object oCommentsCard is a cWebCard
33463>>>            Set psCaption to "Comments"
33464>>>            
33464>>>            Object oCustomer_Comments is a cWebEdit
33466>>>                Entry_Item Customer.Comments
33467>>>                Set psLabel to "Comments:"
33468>>>                Set psCSSClass to "BigBlueField"
33469>>>                Set pbFillHeight to True
33470>>>            End_Object    // oCustomer_Comments
33471>>>
33471>>>
33471>>>        End_Object     
33472>>>
33472>>>    End_Object
33473>>>
33473>>>    
33473>>>    Object oAddressBtn is a cWebButton
33475>>>        Set psCaption to 'Address Card'
33476>>>    
33476>>>        Procedure OnClick
33479>>>            Send Show of oAddressCard
33480>>>        End_Procedure        
33481>>>    End_Object
33482>>>    
33482>>>    Object oBalancesBtn is a cWebButton
33484>>>        Set psCaption to 'Balances Card'
33485>>>        Set piColumnIndex to 1
33486>>>    
33486>>>        Procedure OnClick
33489>>>            Send Show of oBalancesCard
33490>>>        End_Procedure
33491>>>        
33491>>>    End_Object
33492>>>    
33492>>>    Object oCommentsBtn is a cWebButton
33494>>>        Set psCaption to 'Comments Card'
33495>>>        Set piColumnIndex to 2
33496>>>    
33496>>>        Procedure OnClick
33499>>>            Send Show of oCommentsCard        
33500>>>        End_Procedure        
33501>>>    End_Object  
33502>>>    
33502>>>    
33502>>>    Object oPreviousBtn is a cWebButton
33504>>>        Set psCaption to 'Previous Card'
33505>>>        Set pbEnabled to False
33506>>>    
33506>>>        Procedure OnClick
33509>>>            Send PreviousCard of oCardLayout
33510>>>        End_Procedure      
33511>>>    End_Object
33512>>>
33512>>>
33512>>>    Object oNextBtn is a cWebButton
33514>>>        Set psCaption to 'Next Card'
33515>>>        Set piColumnIndex to 2
33516>>>    
33516>>>        Procedure OnClick
33519>>>            Send NextCard of oCardLayout
33520>>>        End_Procedure      
33521>>>    End_Object
33522>>>
33522>>>        
33522>>>    Object oBorderChk is a cWebCheckbox
33524>>>        Set psCaption to "Card Border"
33525>>>        
33525>>>        Set pbServerOnChange to True
33526>>>        Procedure OnChange String sNewValue String sOldValue
33529>>>            Boolean bChecked
33529>>>            
33529>>>            Get GetChecked to bChecked
33530>>>            
33530>>>            WebSet pbShowBorder of oCardLayout to bChecked
33531>>>        End_Procedure
33532>>>    End_Object
33533>>>    
33533>>>    
33533>>>    Object oLabelChk is a cWebCheckbox
33535>>>        Set psCaption to "Card Captions"
33536>>>        
33536>>>        Set pbServerOnChange to True
33537>>>        Procedure OnChange String sNewValue String sOldValue
33540>>>            Boolean bChecked
33540>>>            
33540>>>            Get GetChecked to bChecked
33541>>>            
33541>>>            WebSet pbShowCaption of oCardLayout to bChecked
33542>>>        End_Procedure
33543>>>    End_Object
33544>>>    
33544>>>    Object oCurrentTabLbl is a cWebLabel
33546>>>        Set psCaption to "Current card: Address"
33547>>>    End_Object
33548>>>
33548>>>
33548>>>    
33548>>>End_Object // oCustomer
33549>    Use DemoPanels.wo
Including file: DemoPanels.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoPanels.wo)
33549>>>Use cWebView.pkg
33549>>>Use cWebForm.pkg
33549>>>Use cWebButton.pkg
33549>>>Use cWebTabContainer.pkg
33549>>>Use cWebTabPage.pkg
33549>>>Use cWebPanel.pkg
33549>>>Use cWebCombo.pkg
33549>>>Use cWebEdit.pkg
33549>>>
33549>>>Use Customer.DD
33549>>>Use SalesP.dd
33549>>>Use OrderHea.dd
33549>>>Use Vendor.dd
33549>>>
33549>>>Object oDemoPanels is a cWebView
33551>>>    Set piColumnCount to 10
33552>>>    Set psCaption to "Panels + Allow Access"
33553>>>    Set piWidth to 700
33554>>>    Set pbFillHeight to True
33555>>>    
33555>>>
33555>>>    Object oVendor_DD is a Vendor_DataDictionary
33557>>>    End_Object 
33558>>>
33558>>>    Set Main_DD to oVendor_DD
33559>>>    Set Server  to oVendor_DD
33560>>>
33560>>>
33560>>>    Object oWebTopPanel is a cWebPanel
33562>>>        Set peRegion to prTop
33563>>>        Set psBackgroundColor to "#DDDDDD"
33564>>>        
33564>>>        Set piHeight to 100
33565>>>    End_Object 
33566>>>    
33566>>>    Object oWebLeftPanel is a cWebPanel
33568>>>        Set peRegion to prLeft
33569>>>        Set psBackgroundColor to "#CCCCCC"
33570>>>        
33570>>>        Set piWidth to 100
33571>>>    End_Object 
33572>>>    
33572>>>    
33572>>>    Object oWebMainPanel is a cWebPanel
33574>>>        Set peRegion to prCenter
33575>>>        Set psBackgroundColor to "#EEEEEE"
33576>>>        
33576>>>        Object oForm is a cWebForm
33578>>>            Set psLabel to "Form 1"
33579>>>            
33579>>>        End_Object
33580>>>            
33580>>>    End_Object 
33581>>>    
33581>>>    Object oWebRightPanel is a cWebPanel
33583>>>        Set peRegion to prRight
33584>>>        Set psBackgroundColor to "#BBBBBB"
33585>>>        
33585>>>        
33585>>>        Set piWidth to 100
33586>>>    End_Object 
33587>>>    
33587>>>    Object oWebBottomPanel is a cWebPanel
33589>>>        Set peRegion to prBottom
33590>>>        Set psBackgroundColor to "#AAAAAA"
33591>>>        
33591>>>        Set piHeight to 100
33592>>>    End_Object 
33593>>>    
33593>>>    //
33593>>>    //  Only administrators should be able to access this view.
33593>>>    //
33593>>>    Function AllowAccess Returns Boolean
33596>>>        Boolean bAccess
33596>>>        Integer iUserRights
33596>>>        
33596>>>        Forward Get AllowAccess to bAccess
33598>>>        
33598>>>        If (bAccess) Begin
33600>>>            Get piUserRights of ghoWebSessionManager to iUserRights
33601>>>            
33601>>>            If (iUserRights < 1) Begin
33603>>>                Move False to bAccess
33604>>>            End
33604>>>>
33604>>>        End
33604>>>>
33604>>>        Function_Return bAccess
33605>>>    End_Function
33606>>>End_Object // oCustomer
33607>    Use DemoFileUpload.wo
Including file: DemoFileUpload.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoFileUpload.wo)
33607>>>// C:\Projects\VDF\DataFlex 18.0\Examples\WebOrder\AppSrc\DemoFileUpload.wo
33607>>>// DemoFileUpload
33607>>>//
33607>>>
33607>>>Use cWebView.pkg
33607>>>Use cWebPanel.pkg
33607>>>Use cWebFileUploadButton.pkg
33607>>>Use cWebFileUploadForm.pkg
33607>>>Use cWebLabel.pkg
33607>>>Use cWebButton.pkg
33607>>>Use cWebHorizontalLine.pkg
33607>>>
33607>>>Use cWebAppUserDataDictionary.dd
33607>>>
33607>>>Object oDemoFileUpload is a cWebView
33609>>>    Set piColumnCount to 10
33610>>>    Set psCaption to "File Upload"
33611>>>    Set piWidth to 700
33612>>>    
33612>>>    Procedure CleanUp Integer eMode
33615>>>        String sPath
33615>>>        
33615>>>        If (eMode = cmYes) Begin
33617>>>            //  Use default upload folder
33617>>>            Get UploadFolder of ghoWebApp True to sPath
33618>>>            
33618>>>            Move (sPath + "\*.*") to sPath
33619>>>            
33619>>>            EraseFile sPath
33620>>>>
33620>>>        End
33620>>>>
33620>>>    End_Procedure
33621>>>    WebPublishProcedure CleanUp
33622>>>    
33622>>>    Object oWebTopPanel is a cWebPanel
33624>>>        Set peRegion to prTop
33625>>>        Set piHeight to 160
33626>>>        Set psBackgroundColor to "#DDDDDD"
33627>>>        Set piColumnCount to 10
33628>>>
33628>>>        Object oWebLabel1 is a cWebLabel
33630>>>            Set piColumnSpan to 0
33631>>>            Set psCaption to "File upload form, which has its drop zone expanded to the entire panel (phoDropZone)."
33632>>>        End_Object
33633>>>        
33633>>>        
33633>>>        
33633>>>        Object oWebFile1 is a cWebFileUploadForm
33635>>>            Set piColumnSpan to 0
33636>>>            Set psLabel to "File:"
33637>>>            
33637>>>//            Set pbAutoStart to True 
33637>>>    
33637>>>            Function OnFileUpload String sFileName Integer iBytes String sMime Returns String
33640>>>                String sPath
33640>>>                
33640>>>                //  Use default upload folder
33640>>>                Get UploadFolder of ghoWebApp True to sPath
33641>>>                
33641>>>                Move (sPath + "\" + sFileName) to sPath
33642>>>                
33642>>>                Function_Return sPath
33643>>>            End_Function
33644>>>            
33644>>>            Procedure OnFileFinished String sFileName String sLocalPath
33647>>>                Send ShowYesNo oDemoFileUpload (RefProc(CleanUp)) (SFormat("Succesfully uploaded %1! Do you want to clear the upload folder?", sFileName)) ("Finished") cmYes
33648>>>            End_Procedure
33649>>>            
33649>>>            Set phoDropZone to oWebTopPanel
33650>>>        End_Object
33651>>>
33651>>>        Object oWebButton1 is a cWebButton
33653>>>            Set piColumnSpan to 2
33654>>>            Set psCaption to "Show existing file"
33655>>>        
33655>>>            Procedure OnClick
33658>>>                 String sPath
33658>>>                
33658>>>                //  Determine local path based on workspace setting
33658>>>                Get psDataPath of (phoWorkspace(ghoApplication)) to sPath
33659>>>                
33659>>>                Move (sPath + "\orderdtl.dat") to sPath
33660>>>                
33660>>>                Send DisplayExistingFile of oWebFile1 sPath
33661>>>            End_Procedure
33662>>>        End_Object
33663>>>        
33663>>>        
33663>>>        Object oWebButton2 is a cWebButton
33665>>>            Set piColumnIndex to 2
33666>>>            Set piColumnSpan to 2
33667>>>            Set psCaption to "Clear file"
33668>>>            
33668>>>            Procedure OnClick
33671>>>                Send ClearDisplay of oWebFile1
33672>>>                
33672>>>            End_Procedure
33673>>>        End_Object
33674>>>    End_Object
33675>>>    
33675>>>
33675>>>    
33675>>>
33675>>>    Object oWebMainPanel is a cWebPanel
33677>>>        Set piColumnCount to 10
33678>>>
33678>>>        Object oWebLabel5 is a cWebLabel
33680>>>            Set piColumnSpan to 0
33681>>>            Set psCaption to "File upload form with pbAutoStart set to False and a file filter set to only accept images using psAccept."
33682>>>        End_Object
33683>>>        
33683>>>        
33683>>>
33683>>>        Object oWebFileUploader2 is a cWebFileUploadForm
33685>>>            Set piColumnSpan to 8
33686>>>            Set psLabel to "File:"
33687>>>            Set psAccept to "image/*,.jpg,.png,.bmp,.gif" // Note that older browsers do not support filtering on mime types
33688>>>            Set pbAutoStart to False
33689>>>            Set pbShowMime to True
33690>>>            
33690>>>//            Set pbAutoStart to True 
33690>>>            //  Called for each file upload to generate the local path where the file is stored.
33690>>>            Function OnFileUpload String sFileName Integer iBytes String sMime Returns String
33693>>>                String sPath
33693>>>                
33693>>>                //  Use default upload folder
33693>>>                Get UploadFolder of ghoWebApp True to sPath
33694>>>                
33694>>>                Move (sPath + "\" + sFileName) to sPath
33695>>>                
33695>>>                Function_Return sPath
33696>>>            End_Function
33697>>>            
33697>>>            Procedure OnFileFinished String sFileName String sLocalPath
33700>>>                Send ShowYesNo oDemoFileUpload (RefProc(CleanUp)) (SFormat("Succesfully uploaded '%1'! Do you want to clear the upload folder?", sLocalPath)) ("Finished") cmYes
33701>>>            End_Procedure
33702>>>        End_Object
33703>>>
33703>>>        Object oWebButton3 is a cWebButton
33705>>>            Set piColumnSpan to 2
33706>>>            Set psCaption to "Start Upload"
33707>>>            Set piColumnIndex to 8
33708>>>        
33708>>>            Procedure OnClick
33711>>>                Send StartUpload of oWebFileUploader2
33712>>>            End_Procedure
33713>>>        End_Object
33714>>>
33714>>>        Object oWebHorizontalLine4 is a cWebHorizontalLine
33716>>>        End_Object
33717>>>
33717>>>        Object oWebLabel2 is a cWebLabel
33719>>>            Set piColumnSpan to 0
33720>>>            Set psCaption to "File upload form, which has pbShowDialog set to True, so that the upload process is shown in a modal dialog."
33721>>>        End_Object
33722>>>
33722>>>        Object oWebFileUploadForm1 is a cWebFileUploadForm
33724>>>            Set piColumnSpan to 0
33725>>>            Set psLabel to "file"
33726>>>            Set pbShowDialog to True
33727>>>            
33727>>>            //  Called for each file upload to generate the local path where the file is stored.
33727>>>            Function OnFileUpload String sFileName Integer iBytes String sMime Returns String
33730>>>                String sPath
33730>>>                
33730>>>                //  Use default upload folder
33730>>>                Get UploadFolder of ghoWebApp True to sPath
33731>>>                
33731>>>                Move (sPath + "\" + sFileName) to sPath
33732>>>                
33732>>>                Function_Return sPath
33733>>>            End_Function
33734>>>        End_Object
33735>>>
33735>>>        
33735>>>        
33735>>>
33735>>>        Object oWebHorizontalLine2 is a cWebHorizontalLine
33737>>>        End_Object
33738>>>
33738>>>        Object oWebLabel3 is a cWebLabel
33740>>>            Set piColumnSpan to 0
33741>>>            Set psCaption to "File upload button, allowing multiple files to be uploaded at once. Shows a log message on the console for every uploaded file after entire upload (all files) is finished."
33742>>>        End_Object
33743>>>        
33743>>>                
33743>>>        
33743>>>        Object oFileUpload is a cWebFileUploadButton
33745>>>            Set piColumnSpan to 3
33746>>>            Set psCaption to "Upload File(s)"
33747>>>            
33747>>>            Property Integer piCount 0
33751>>>            
33751>>>            
33751>>>            Function OnFileUpload String sFileName Integer iBytes String sMime Returns String
33754>>>                String sPath
33754>>>                
33754>>>                //  Use default upload folder
33754>>>                Get UploadFolder of ghoWebApp True to sPath
33755>>>                
33755>>>                Move (sPath + "\" + sFileName) to sPath
33756>>>                
33756>>>                Function_Return sPath
33757>>>            End_Function
33758>>>            
33758>>>            Procedure OnFileFinished String sFileName String sLocalPath
33761>>>                Integer iCount
33761>>>                
33761>>>                WebGet piCount to iCount
33762>>>                Increment iCount
33763>>>                WebSet piCount to iCount
33764>>>                Send ClientLog (SFormat("File %1 saved as %2", sFileName, sLocalPath))
33765>>>            End_Procedure
33766>>>            
33766>>>            Procedure OnUploadFinished
33769>>>                Integer iCount
33769>>>                
33769>>>                WebGet piCount to iCount
33770>>>                WebSet piCount to 0
33771>>>                
33771>>>                Send ShowYesNo oDemoFileUpload (RefProc(CleanUp)) (SFormat("Succesfully uploaded %1 files! Do you want to delete them?", iCount)) ("Finished") cmYes
33772>>>            End_Procedure
33773>>>        End_Object
33774>>>        
33774>>>         Object oWebHorizontalLine3 is a cWebHorizontalLine
33776>>>        End_Object
33777>>>
33777>>>        Object oWebLabel4 is a cWebLabel
33779>>>            Set piColumnSpan to 0
33780>>>            Set psCaption to "File upload button that allows multiple files to be uploaded at once. Shows a log message on the console for every uploaded file after each file, because pbNotifyIndividualFile is set to True."
33781>>>        End_Object
33782>>>        
33782>>>                
33782>>>        
33782>>>        Object oFileUploadBtn2 is a cWebFileUploadButton
33784>>>            Set piColumnSpan to 3
33785>>>            Set psCaption to "Upload File(s)"
33786>>>            Set pbNotifyIndividualFile to True
33787>>>            
33787>>>            Property Integer piCount 0
33791>>>            
33791>>>            
33791>>>            Function OnFileUpload String sFileName Integer iBytes String sMime Returns String
33794>>>                String sPath
33794>>>                
33794>>>                //  Use default upload folder
33794>>>                Get UploadFolder of ghoWebApp True to sPath
33795>>>                
33795>>>                Move (sPath + "\" + sFileName) to sPath
33796>>>                
33796>>>                Function_Return sPath
33797>>>            End_Function
33798>>>            
33798>>>            Procedure OnFileFinished String sFileName String sLocalPath
33801>>>                Integer iCount
33801>>>                
33801>>>                WebGet piCount to iCount
33802>>>                Increment iCount
33803>>>                WebSet piCount to iCount
33804>>>                Send ClientLog (SFormat("File %1 saved as %2", sFileName, sLocalPath))
33805>>>            End_Procedure
33806>>>            
33806>>>            Procedure OnUploadFinished
33809>>>                Integer iCount
33809>>>                
33809>>>                WebGet piCount to iCount
33810>>>                WebSet piCount to 0
33811>>>                
33811>>>                Send ShowYesNo oDemoFileUpload (RefProc(CleanUp)) (SFormat("Succesfully uploaded %1 files! Do you want to delete them?", iCount)) ("Finished") cmYes
33812>>>            End_Procedure
33813>>>        End_Object
33814>>>        
33814>>>    End_Object 
33815>>>End_Object 
33816>    Use DemoSuggestionForm.wo
Including file: DemoSuggestionForm.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoSuggestionForm.wo)
33816>>>Use cWebView.pkg
33816>>>Use cWebPanel.pkg
33816>>>Use cWebForm.pkg 
33816>>>Use cWebSuggestionForm.pkg
33816>>>Use Customer.DD
33816>>>Use Vendor.DD
33816>>>Use cWebHorizontalLine.pkg
33816>>>Use cWebLabel.pkg
33816>>>
33816>>>Object oDemoSuggestionForm is a cWebView
33818>>>    Object oVendor_DD is a Vendor_DataDictionary
33820>>>    End_Object
33821>>>
33821>>>    Object oCustomer_DD is a Customer_DataDictionary
33823>>>        Procedure Field_defaults
33826>>>            Forward Send Field_Defaults
33828>>>            Set Field_Changed_Value   Field Customer.State to ""
33829>>>        End_Procedure
33830>>>    End_Object
33831>>>
33831>>>    Set Main_DD to oCustomer_DD
33832>>>    Set Server to oCustomer_DD
33833>>>    
33833>>>    Send AddDDOStructure oVendor_DD
33834>>>
33834>>>    Set piWidth to 700
33835>>>    Set psCaption to "Suggestion Form"
33836>>>    
33836>>>
33836>>>    // Your DDO structure will go here
33836>>>
33836>>>    Object oWebMainPanel is a cWebPanel
33838>>>        Set piColumnCount to 12
33839>>>
33839>>>        Object oWebLabel1 is a cWebLabel
33841>>>            Set piColumnSpan to 0
33842>>>            
33842>>>            Set psCaption to "Data bound, incremental, starting at character 1"
33843>>>            Set peAlign to alignCenter
33844>>>        End_Object
33845>>>
33845>>>        Object oWebSuggestionForm2 is a cWebSuggestionForm
33847>>>            Entry_Item Customer.Customer_Number
33848>>>            Set piColumnSpan to 4
33849>>>            Set psLabel to "Customer Number:"
33850>>>            Set piStartAtChar to 1
33851>>>        End_Object
33852>>>
33852>>>        Object oWebSuggestionForm1 is a cWebSuggestionForm
33854>>>            Entry_Item Customer.Name
33855>>>            Set piColumnSpan to 7
33856>>>            Set psLabel to "Customer Name:"
33857>>>            Set piStartAtChar to 1
33858>>>        End_Object
33859>>>
33859>>>        Object oWebLabel3 is a cWebLabel
33861>>>            Set psCaption to "Validation Table, incremental, starting at character 1"
33862>>>            Set piColumnSpan to 0
33863>>>            Set peAlign to alignCenter
33864>>>        End_Object
33865>>>
33865>>>        Object oWebSuggestionForm4 is a cWebSuggestionForm
33867>>>            Entry_Item Customer.State
33868>>>            Set piColumnSpan to 6
33869>>>            Set psLabel to "Customer State:"
33870>>>            Set peSuggestionMode to smValidationTable
33871>>>            Set piStartAtChar to 1
33872>>>        End_Object
33873>>>
33873>>>        Object oWebHorizontalLine1 is a cWebHorizontalLine
33875>>>        End_Object
33876>>>        
33876>>>        
33876>>>        Object oWebLabel2 is a cWebLabel
33878>>>            Set piColumnSpan to 0
33879>>>            
33879>>>            Set psCaption to "Data bound, full text, starting at character 2"
33880>>>            Set peAlign to alignCenter
33881>>>        End_Object
33882>>>
33882>>>        Object oWebSuggestionForm3 is a cWebSuggestionForm
33884>>>            Entry_Item Vendor.Name
33885>>>            Set Server to oVendor_DD
33886>>>            Set piColumnSpan to 7
33887>>>            Set pbFullText to True
33888>>>            Set psLabel to "Vendor name:"
33889>>>        End_Object
33890>>>        
33890>>>        
33890>>>    End_Object 
33891>>>
33891>>>End_Object
33892>    Use DemoColumnTypes.wo
Including file: DemoColumnTypes.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoColumnTypes.wo)
33892>>>Use cWebView.pkg
33892>>>Use cWebPanel.pkg
33892>>>Use cWebForm.pkg 
33892>>>Use Customer.DD
33892>>>Use cWebList.pkg
33892>>>Use cWebColumn.pkg
33892>>>Use cWebColumnLink.pkg
33892>>>Use cWebColumnButton.pkg
33892>>>Use cWebGroup.pkg
33892>>>Use cWebRadio.pkg
33892>>>Use cWebColumnImage.pkg
Including file: cWebColumnImage.pkg    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cWebColumnImage.pkg)
33892>>>>>Use cWebColumn_mixin.pkg
33892>>>>>Use cWebBaseDEO.pkg
33892>>>>>
33892>>>>>// Used to represent each column of a cWebGrid or cWebLookup control.
33892>>>>>Class cWebColumnImage is a cWebBaseDEO
33893>>>>>    Import_Class_Protocol cWebColumn_mixin
33894>>>>>    
33894>>>>>    Procedure Construct_Object
33896>>>>>        Forward Send Construct_Object
33898>>>>>        
33898>>>>>        Send Define_cWebColumn_Mixin
33899>>>>>                
33899>>>>>        Property String psImageUrl "" 
33902>>>>>        Property String psImageCSSClass ""
33905>>>>>        
33905>>>>>        Property Integer pePosition wiStretchHoriz //   Allows dynamic image positioning. Note that piImageWidth and piImageHeight must be set for this to work.
33908>>>>>        
33908>>>>>        Property Boolean pbDynamic False
33911>>>>>        Property Boolean pbImageByCSS False
33914>>>>>        
33914>>>>>        Property Integer piImageWidth 0
33917>>>>>        Property Integer piImageHeight 0
33920>>>>>        
33920>>>>>        Property Boolean pbServerOnClick False
33923>>>>>        Property String psClientOnClick ""
33926>>>>>        
33926>>>>>        Property String[] paImgOptions
33927>>>>>        
33927>>>>>        //  Sorting on a image column wouldn't make sense
33927>>>>>        Set pbSortable to False
33928>>>>>        
33928>>>>>        Set psJSClass to "df.WebColumnImage"
33929>>>>>    End_Procedure
33930>>>>> 
33930>>>>>    Procedure LoadGridCell tWebCell ByRef tCell
33932>>>>>        Boolean bMulti
33932>>>>>        String[] aEmpty
33933>>>>>        
33933>>>>>        Set paImgOptions to aEmpty
33934>>>>>        
33934>>>>>        Get pbDynamic to bMulti
33935>>>>>        If (bMulti) Begin
33937>>>>>            Send OnDefineImages
33938>>>>>            Get paImgOptions to tCell.aOptions
33939>>>>>        End
33939>>>>>>
33939>>>>>        
33939>>>>>        // Give a chance to add custom tooltips & CSS Classnames
33939>>>>>        Send OnDefineTooltip (&tCell.sTooltip)
33940>>>>>        Send OnDefineCssClass (&tCell.sCssClassName)
33941>>>>>    End_Procedure
33942>>>>>    
33942>>>>>    Procedure OnDefineImages
33944>>>>>        
33944>>>>>    End_Procedure
33945>>>>>    
33945>>>>>    Procedure OnClick String sImage String sRowId
33947>>>>>        
33947>>>>>    End_Procedure
33948>>>>>    
33948>>>>>    Procedure AddImage String sUrl
33950>>>>>        String[] aImages
33951>>>>>        
33951>>>>>        Get paImgOptions to aImages
33952>>>>>        
33952>>>>>        Move sUrl to aImages[SizeOfArray(aImages)]
33953>>>>>        
33953>>>>>        Set paImgOptions to aImages
33954>>>>>    End_Procedure
33955>>>>>    
33955>>>>>    Procedure End_Construct_Object
33957>>>>>        WebPublishProcedure OnClick
33958>>>>>        
33958>>>>>        Forward Send End_Construct_Object
33960>>>>>    End_Procedure
33961>>>>>
33961>>>>>End_Class
33962>>>Use cWebCheckBox.pkg
33962>>>Use cWebColumnCheckbox.pkg
33962>>>Use DemoCustomerDialog.wo
Including file: DemoCustomerDialog.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoCustomerDialog.wo)
33962>>>>>//
33962>>>>>//  This shows the basic structure of a modal dialog. It explains where the controls go and how to 
33962>>>>>//  initialize it (PopupTheDialog & OnShow). The DialogResult method explains how to return data 
33962>>>>>//  from your dialog. The commented oOpenDialog_btn is an example of a button that opens this dialog. 
33962>>>>>//  This button would be placed on another view.
33962>>>>>//
33962>>>>>//    Object oOpenDialog_btn is a cWebButton
33962>>>>>//        Set psCaption to "Open Dialog"
33962>>>>>//        
33962>>>>>//        Procedure OnClick
33962>>>>>//            Send PopupTheDialog of oWebModalDialog Self "Param 1" "Param 2"
33962>>>>>//        End_Procedure
33962>>>>>//        
33962>>>>>//        Procedure OnCloseModalDialog Handle hoModalDialog
33962>>>>>//            String sResult
33962>>>>>//            
33962>>>>>//            Get DialogResult of hoModalDialog to sResult
33962>>>>>//        End_Procedure
33962>>>>>//    End_Object
33962>>>>>//
33962>>>>>
33962>>>>>
33962>>>>>Use cWebModalDialog
33962>>>>>Use cWebPanel.pkg
33962>>>>>Use cWebButton.pkg
33962>>>>>Use cWebForm.pkg
33962>>>>>Use cWebTabContainer.pkg
33962>>>>>Use cWebTabPage.pkg
33962>>>>>Use Customer.DD
33962>>>>>Use cWebCombo.pkg
33962>>>>>Use cWebEdit.pkg
33962>>>>>
33962>>>>>Object oDemoCustomerDialog is a cWebModalDialog
33964>>>>>    Object oCustomer_DD is a Customer_DataDictionary
33966>>>>>    End_Object
33967>>>>>
33967>>>>>    Set Main_DD to oCustomer_DD
33968>>>>>    Set Server to oCustomer_DD
33969>>>>>
33969>>>>>    Set psCaption to "Edit Customer"
33970>>>>>    Set piMinWidth to 600
33971>>>>>    Set piMinHeight to 350
33972>>>>>    Set pbServerOnSubmit to True    // enable the OnSubmit event
33973>>>>>    
33973>>>>>    Object oMainPanel is a cWebPanel
33975>>>>>        Set piColumnCount to 12
33976>>>>>
33976>>>>>        Object oCustomer_Customer_Number is a cWebForm
33978>>>>>            Entry_Item Customer.Customer_Number
33979>>>>>            Set piColumnSpan to 5
33980>>>>>            Set psLabel to "Number:"
33981>>>>>            Set piLabelOffset to 80
33982>>>>>        End_Object
33983>>>>>
33983>>>>>        Object oCustomer_Name is a cWebForm
33985>>>>>            Entry_Item Customer.Name
33986>>>>>            Set piColumnSpan to 0
33987>>>>>            Set psLabel to "Name:"
33988>>>>>            Set piColumnIndex to 5
33989>>>>>            Set piLabelOffset to 80
33990>>>>>        End_Object
33991>>>>>
33991>>>>>        Object oTabContainer is a cWebTabContainer
33993>>>>>            Set pbFillHeight to True
33994>>>>>            Object oAddressTab is a cWebTabPage
33996>>>>>                Set psCaption to "Address"
33997>>>>>                Set piColumnCount to 12
33998>>>>>
33998>>>>>                Object oCustomer_Address is a cWebForm
34000>>>>>                    Entry_Item Customer.Address
34001>>>>>                    Set piColumnSpan to 12
34002>>>>>                    Set psLabel to "Street Address:"
34003>>>>>                End_Object
34004>>>>>
34004>>>>>                Object oCustomer_City is a cWebForm
34006>>>>>                    Entry_Item Customer.City
34007>>>>>                    Set piColumnSpan to 6
34008>>>>>                    Set psLabel to "City / State / Zip:"
34009>>>>>                End_Object
34010>>>>>
34010>>>>>                Object oCustomer_State is a cWebCombo
34012>>>>>                    Entry_Item Customer.State
34013>>>>>                    Set piColumnSpan to 3
34014>>>>>                    Set psLabel to "State:"
34015>>>>>                    Set piColumnIndex to 6
34016>>>>>                    Set pbShowLabel to False
34017>>>>>                End_Object
34018>>>>>
34018>>>>>                Object oCustomer_Zip is a cWebForm
34020>>>>>                    Entry_Item Customer.Zip
34021>>>>>                    Set piColumnSpan to 3
34022>>>>>                    Set psLabel to "Zip/Postal Code:"
34023>>>>>                    Set pbShowLabel to False
34024>>>>>                    Set piColumnIndex to 9
34025>>>>>                End_Object
34026>>>>>
34026>>>>>                Object oCustomer_Phone_Number is a cWebForm
34028>>>>>                    Entry_Item Customer.Phone_Number
34029>>>>>                    Set piColumnSpan to 6
34030>>>>>                    Set psLabel to "Phone Number:"
34031>>>>>                End_Object
34032>>>>>
34032>>>>>                Object oCustomer_Fax_Number is a cWebForm
34034>>>>>                    Entry_Item Customer.Fax_Number
34035>>>>>                    Set piColumnSpan to 6
34036>>>>>                    Set psLabel to "Fax Number:"
34037>>>>>                    Set piColumnIndex to 6
34038>>>>>                End_Object
34039>>>>>
34039>>>>>                Object oCustomer_EMail_Address is a cWebForm
34041>>>>>                    Entry_Item Customer.EMail_Address
34042>>>>>                    Set piColumnSpan to 8
34043>>>>>                    Set psLabel to "E-Mail Address:"
34044>>>>>                End_Object
34045>>>>>                
34045>>>>>            End_Object
34046>>>>>
34046>>>>>            Object oBalanceTab is a cWebTabPage
34048>>>>>                Set psCaption to "Balance"
34049>>>>>                Set piColumnCount to 12
34050>>>>>
34050>>>>>                Object oCustomer_Credit_Limit is a cWebForm
34052>>>>>                    Entry_Item Customer.Credit_Limit
34053>>>>>                    Set piColumnSpan to 7
34054>>>>>                    Set psLabel to "Credit Limit:"
34055>>>>>                End_Object
34056>>>>>
34056>>>>>                Object oCustomer_Purchases is a cWebForm
34058>>>>>                    Entry_Item Customer.Purchases
34059>>>>>                    Set piColumnSpan to 7
34060>>>>>                    Set psLabel to "Total Purchases:"
34061>>>>>                End_Object
34062>>>>>
34062>>>>>                Object oCustomer_Balance is a cWebForm
34064>>>>>                    Entry_Item Customer.Balance
34065>>>>>                    Set piColumnSpan to 7
34066>>>>>                    Set psLabel to "Balance Due:"
34067>>>>>                End_Object
34068>>>>>                
34068>>>>>            End_Object
34069>>>>>
34069>>>>>            Object oCommentsTab is a cWebTabPage
34071>>>>>                Set psCaption to "Comments"
34072>>>>>                Set piColumnCount to 12
34073>>>>>
34073>>>>>                Object oCustomer_Comments is a cWebEdit
34075>>>>>                    Entry_Item Customer.Comments
34076>>>>>                    Set piColumnSpan to 0
34077>>>>>                    Set psLabel to "Comments:"
34078>>>>>                    Set pbFillHeight to True
34079>>>>>                    Set pbShowLabel to False
34080>>>>>                End_Object
34081>>>>>                
34081>>>>>            End_Object
34082>>>>>        End_Object
34083>>>>>        
34083>>>>>        
34083>>>>>    End_Object 
34084>>>>>    
34084>>>>>    Object oBottomPanel is a cWebPanel
34086>>>>>        Set piColumnCount to 6
34087>>>>>        Set peRegion to prBottom
34088>>>>>
34088>>>>>        Object oOkButton is a cWebButton
34090>>>>>            Set psCaption to C_$OK
34091>>>>>            Set piColumnSpan to 1
34092>>>>>            Set piColumnIndex to 4
34093>>>>>
34093>>>>>            Procedure OnClick
34096>>>>>                Send Ok
34097>>>>>            End_Procedure
34098>>>>>        End_Object 
34099>>>>>
34099>>>>>        Object oCancelButton is a cWebButton
34101>>>>>            Set psCaption to C_$Cancel
34102>>>>>            Set piColumnSpan to 1
34103>>>>>            Set piColumnIndex to 5
34104>>>>>
34104>>>>>            Procedure OnClick
34107>>>>>                Send Cancel
34108>>>>>            End_Procedure
34109>>>>>        End_Object 
34110>>>>>    End_Object 
34111>>>>>
34111>>>>>    Procedure OnSubmit
34114>>>>>        Send Ok
34115>>>>>    End_Procedure
34116>>>>>    
34116>>>>>    Procedure Ok
34119>>>>>        Boolean bErr
34119>>>>>        
34119>>>>>        //  Do some calculations / saves / validations here ..
34119>>>>>        Get Request_Validate of oCustomer_DD to bErr
34120>>>>>        If (not(bErr)) Begin
34122>>>>>            Send Request_Save of oCustomer_DD
34123>>>>>            
34123>>>>>            //  Note that we only forward send if we saved succesfully
34123>>>>>            Forward Send Ok
34125>>>>>        End
34125>>>>>>
34125>>>>>    End_Procedure
34126>>>>>
34126>>>>>    Procedure Cancel
34129>>>>>        Forward Send Cancel
34131>>>>>    End_Procedure
34132>>>>>    
34132>>>>>    
34132>>>>>    //  PopupCustomerDialog:
34132>>>>>    //
34132>>>>>    //  Custom popup method that stores the customer RowId in a web property before calling Show.
34132>>>>>    Procedure PopupCustomerDialog  Handle hReturnObj String sCustomerRowID
34135>>>>>        // Initialize any object properites as needed via WebSet
34135>>>>>        WebSet psCustomerRowID to sCustomerRowID
34137>>>>>        
34137>>>>>        // Invoke the modal dialog    
34137>>>>>        Send Popup hReturnObj
34138>>>>>    End_Procedure
34139>>>>>    
34139>>>>>    Property String psCustomerRowID ""  //  Used to store the customer RowId between PopupCustomerDialog and OnShow
34143>>>>>    
34143>>>>>    Set pbServerOnShow to True
34144>>>>>    
34144>>>>>    
34144>>>>>    //  OnShow:
34144>>>>>    //
34144>>>>>    //  Called by the Framework each time the dialog is displayed. We need to find the right customer here.
34144>>>>>    Procedure OnShow
34147>>>>>        String sRowID
34147>>>>>        RowID rRowID
34147>>>>>        
34147>>>>>        //  Find your records here
34147>>>>>        WebGet psCustomerRowID to sRowID
34148>>>>>        
34148>>>>>        Move (DeserializeRowID(sRowID)) to rRowID
34149>>>>>        If (not(IsNullRowID(rRowID))) Begin
34151>>>>>            Send FindByRowId of oCustomer_DD Customer.File_Number rRowID
34152>>>>>        End
34152>>>>>>
34152>>>>>        Else Begin
34153>>>>>            Send Clear of oCustomer_DD
34154>>>>>        End
34154>>>>>>
34154>>>>>        
34154>>>>>        WebSet psCustomerRowID to ""
34155>>>>>    End_Procedure
34156>>>>>    
34156>>>>>    
34156>>>>>
34156>>>>>End_Object
34157>>>
34157>>>Object oDemoColumnTypes is a cWebView
34159>>>    Object oCustomer_DD is a Customer_DataDictionary
34161>>>    End_Object
34162>>>
34162>>>    Set Main_DD to oCustomer_DD
34163>>>    Set Server to oCustomer_DD
34164>>>
34164>>>    Set piWidth to 700
34165>>>    Set psCaption to "Demo Column Types"
34166>>>    Set piHeight to 600
34167>>>
34167>>>    // Your DDO structure will go here
34167>>>
34167>>>    Object oWebMainPanel is a cWebPanel
34169>>>        Set piColumnCount to 12
34170>>>
34170>>>        Object oWebList1 is a cWebList
34172>>>            Set pbFillHeight to True
34173>>>
34173>>>            Object oSingleBtnCol is a cWebColumnButton
34175>>>                Set piWidth to 35
34176>>>                Set psCaption to ""
34177>>>                Set psButtonCaption to "Edit"
34178>>>                Set pbRender to False
34179>>>                
34179>>>                Procedure OnClick String sButton String sRowId
34182>>>                    Send ShowCustomer sRowId
34183>>>                End_Procedure
34184>>>            End_Object
34185>>>
34185>>>            Object oDynamicBtnCol is a cWebColumnButton
34187>>>                Set piWidth to 80
34188>>>                Set pbDynamic to True
34189>>>                Set pbRender to False
34190>>>                
34190>>>                //  Called for each row to define the buttons that need to be displayed.
34190>>>                Procedure OnDefineButtons
34193>>>                    //  Use AddButton to define a button (sID, sCaption, sCSSClass)
34193>>>                    Send AddButton "E" "Edit" ""
34194>>>                    
34194>>>                    //  The Global buffer contains the right record for data aware lists
34194>>>                    If (Customer.Status = "Y") Begin
34196>>>                        Send AddButton "D" "Deactivate" ""
34197>>>                    End
34197>>>>
34197>>>                End_Procedure
34198>>>
34198>>>                Procedure OnClick String sButton String sRowId
34201>>>                    Forward Send OnClick sButton sRowId
34203>>>                    
34203>>>                    If (sButton = "E") Begin
34205>>>                        Send ShowCustomer sRowId
34206>>>                    End
34206>>>>
34206>>>                    Else If (sButton = "D") Begin
34209>>>                        Send DeactivateCustomer sRowID
34210>>>                    End
34210>>>>
34210>>>                End_Procedure
34211>>>            End_Object
34212>>>
34212>>>            Object oStaticImageCol is a cWebColumnImage
34214>>>                Set piWidth to 20
34215>>>                Set psImageUrl to "Images/Order.png"
34216>>>                Set psCaption to "Icon"
34217>>>                Set pbRender to False
34218>>>
34218>>>                Procedure OnClick String sImage String sRowId
34221>>>                    Forward Send OnClick sImage sRowId
34223>>>                    
34223>>>                    Send ShowInfoBox "You've clicked the image!"
34224>>>                End_Procedure
34225>>>            End_Object
34226>>>
34226>>>            Object oDynamicImageCol is a cWebColumnImage
34228>>>                Set piWidth to 20
34229>>>                Set pbDynamic to True
34230>>>                Set psCaption to "Icons"
34231>>>                Set pbServerOnClick to True
34232>>>                
34232>>>                Procedure OnDefineImages
34235>>>                    Forward Send OnDefineImages
34237>>>                    
34237>>>                    Send AddImage "Images/Order.png"
34238>>>                    
34238>>>                    If (Customer.Balance >  4000) Begin
34240>>>                        Send AddImage "Images/CDRom.png"
34241>>>                    End
34241>>>>
34241>>>                End_Procedure
34242>>>
34242>>>                Procedure OnClick String sImage String sRowId
34245>>>                    Forward Send OnClick sImage sRowId
34247>>>                    
34247>>>                    Send ShowInfoBox ("You've clicked on image '" + sImage + "'!")
34248>>>                End_Procedure
34249>>>                
34249>>>                
34249>>>            End_Object
34250>>>
34250>>>
34250>>>            Object oCustomer_Customer_Number is a cWebColumn
34252>>>                Entry_Item Customer.Customer_Number
34253>>>                Set psCaption to "Number"
34254>>>                Set piWidth to 30
34255>>>            End_Object
34256>>>
34256>>>            Object oCustomer_Name is a cWebColumnLink
34258>>>                Entry_Item Customer.Name
34259>>>                Set psCaption to "Customer Name"
34260>>>                Set piWidth to 100
34261>>>
34261>>>                Procedure OnClick String sRowID String sCellValue
34264>>>                    Send ShowCustomer sRowId
34265>>>                End_Procedure
34266>>>            End_Object
34267>>>
34267>>>            Object oCustomer_City is a cWebColumn
34269>>>                Entry_Item Customer.City
34270>>>                Set psCaption to "City"
34271>>>                Set piWidth to 50
34272>>>                
34272>>>                Set psCSSClass to "DemoColumnCity"
34273>>>            End_Object
34274>>>
34274>>>            Object oCustomer_Balance is a cWebColumn
34276>>>                Entry_Item Customer.Balance
34277>>>                Set psCaption to "Balance"
34278>>>                Set piWidth to 50
34279>>>
34279>>>                Procedure OnDefineCssClass String  ByRef sCSSClass
34282>>>                    Forward Send OnDefineCssClass (&sCSSClass)
34284>>>                    
34284>>>                    If (Customer.Balance < 1000) Begin
34286>>>                        Move "DemoColLow" to sCSSClass
34287>>>                    End
34287>>>>
34287>>>                    Else If (Customer.Balance > 5000) Begin
34290>>>                        Move "DemoColHigh" to sCSSClass
34291>>>                    End
34291>>>>
34291>>>                    Else Begin
34292>>>                        Move "DemoColMedium" to sCSSClass
34293>>>                    End
34293>>>>
34293>>>                End_Procedure
34294>>>            End_Object
34295>>>
34295>>>            Object oCustomer_Status is a cWebColumnCheckBox
34297>>>                Entry_Item Customer.Status
34298>>>                Set psCaption to "Status"
34299>>>                Set piWidth to 30
34300>>>            End_Object
34301>>>        End_Object
34302>>>
34302>>>        Object oWebGroup1 is a cWebGroup
34304>>>            Set psCaption to "Options"
34305>>>            Set piColumnCount to 12
34306>>>
34306>>>            Object oBtnRadio1 is a cWebRadio
34308>>>                Set piColumnSpan to 4
34309>>>                Set psCaption to "Single delete button"
34310>>>                Set psRadioValue to "SINGLE_BUTTON"
34311>>>                Set pbServerOnChange to True
34312>>>
34312>>>                Procedure OnChange String sNewValue String sOldValue
34315>>>                    Forward Send OnChange sNewValue sOldValue
34317>>>                    
34317>>>                    Send UpdateUI
34318>>>                End_Procedure
34319>>>                
34319>>>            End_Object
34320>>>
34320>>>            Object oImgRadio1 is a cWebRadio
34322>>>                Set piColumnSpan to 4
34323>>>                Set psCaption to "Static image"
34324>>>                Set psRadioValue to "STATIC_IMAGE"
34325>>>                Set piColumnIndex to 4
34326>>>            End_Object
34327>>>
34327>>>            Object oColorCheckbox is a cWebCheckbox
34329>>>                Set piColumnSpan to 4
34330>>>                Set psCaption to "Color balance"
34331>>>                Set pbServerOnChange to True
34332>>>                Set piColumnIndex to 8
34333>>>
34333>>>                Procedure OnChange String sNewValue String sOldValue
34336>>>                    Forward Send OnChange sNewValue sOldValue
34338>>>                    
34338>>>                    Send UpdateUI
34339>>>                End_Procedure
34340>>>            End_Object
34341>>>
34341>>>            Object oBtnRadio2 is a cWebRadio
34343>>>                Set piColumnSpan to 4
34344>>>                Set psCaption to "Dynamic buttons"
34345>>>                Set psRadioValue to "DYNAMIC_BUTTONS"
34346>>>            End_Object
34347>>>
34347>>>            Object oImgRadio2 is a cWebRadio
34349>>>                Set piColumnSpan to 4
34350>>>                Set psCaption to "Dynamic images"
34351>>>                Set psRadioValue to "DYNAMIC_IMAGE"
34352>>>                Set piColumnIndex to 4
34353>>>            End_Object
34354>>>            
34354>>>            Object oShowSelectedCheckbox is a cWebCheckbox
34356>>>                Set piColumnSpan to 4
34357>>>                Set psCaption to "Selected row"
34358>>>                Set pbServerOnChange to True
34359>>>                Set piColumnIndex to 8
34360>>>
34360>>>                Procedure OnChange String sNewValue String sOldValue
34363>>>                    Forward Send OnChange sNewValue sOldValue
34365>>>                    
34365>>>                    Send UpdateUI
34366>>>                End_Procedure
34367>>>            End_Object
34368>>>        End_Object
34369>>>    End_Object 
34370>>>    
34370>>>    
34370>>>    //  OnLoad:
34370>>>    //
34370>>>    //  Initializes the view.
34370>>>    Procedure OnLoad
34373>>>        Forward Send OnLoad
34375>>>        
34375>>>        //  Initialize UI based on settings
34375>>>        Send UpdateUI        
34376>>>        
34376>>>        //  Find first customer to trigger list fill
34376>>>        Send Find of oCustomer_DD FIRST_RECORD Index.1
34377>>>        
34377>>>    End_Procedure
34378>>>
34378>>>    
34378>>>    //  UpdateUI:
34378>>>    //
34378>>>    //  Updates the user interface according to the radio and checkbox settings.
34378>>>    Procedure UpdateUI
34381>>>        String sRadio
34381>>>        Boolean bChecked
34381>>>        
34381>>>        //  Hide / show columns based on radio settings
34381>>>        WebGet psValue of oBtnRadio1 to sRadio
34382>>>        
34382>>>        WebSet pbRender of oSingleBtnCol to (sRadio = "SINGLE_BUTTON")
34383>>>        WebSet pbRender of oDynamicBtnCol to (sRadio = "DYNAMIC_BUTTONS")
34384>>>        WebSet pbRender of oStaticImageCol to (sRadio = "STATIC_IMAGE")
34385>>>        WebSet pbRender of oDynamicImageCol to (sRadio = "DYNAMIC_IMAGE")
34386>>>        
34386>>>        //  Add / remove CSS class based on checkbox
34386>>>        Get GetChecked of oColorCheckbox to bChecked
34387>>>        If (bChecked) Begin
34389>>>            WebSet psCSSClass of oCustomer_Balance to "DemoColumnBalance"
34390>>>        End
34390>>>>
34390>>>        Else Begin
34391>>>            WebSet psCSSClass of oCustomer_Balance to "" 
34392>>>        End
34392>>>>
34392>>>        
34392>>>        //  Update pbShowSelected based on checkbox
34392>>>        Get GetChecked of oShowSelectedCheckbox to bChecked
34393>>>        WebSet pbShowSelected of oWebList1 to bChecked
34394>>>    End_Procedure
34395>>>    
34395>>>    
34395>>>        
34395>>>    //  ShowCustomer:
34395>>>    //
34395>>>    //  Shows the customer dialog, passing this view as the return object and the customer RowId.
34395>>>    Procedure ShowCustomer String sRowID
34398>>>        Send PopupCustomerDialog of oDemoCustomerDialog Self sRowID
34399>>>    End_Procedure
34400>>>    
34400>>>    
34400>>>    //  OnCloseModalDialog:
34400>>>    //
34400>>>    //  Called by the customer dialog when it is closed, so we can refresh the list.
34400>>>    Procedure OnCloseModalDialog Handle hoModalDialog
34403>>>        Send GridRefresh of oWebList1
34404>>>    End_Procedure
34405>>>    
34405>>>    
34405>>>    
34405>>>    
34405>>>    //  ExecDeactivateCustomer:
34405>>>    //
34405>>>    //  Callback handler for the ShowYesNo displayed by DeactivateCustomer. If yes is clicked,
34405>>>    //  the customer will be deactivated.
34405>>>    Procedure ExecDeactivateCustomer Integer eResult
34408>>>        If (eResult = cmYes) Begin
34410>>>            Set Field_Changed_Value of oCustomer_DD Field Customer.Status to "N"
34411>>>            Send Request_Save of oCustomer_DD
34412>>>            
34412>>>            Send GridRefresh of oWebList1
34413>>>        End
34413>>>>
34413>>>    End_Procedure
34414>>>    
34414>>>    WebPublishProcedure ExecDeactivateCustomer
34415>>>    
34415>>>    
34415>>>    //  DeactivateCustomer:
34415>>>    //
34415>>>    //  Deactivates the customer after displaying a confirmation dialog.
34415>>>    Procedure DeactivateCustomer String sRowID
34418>>>        RowID rRowID
34418>>>        
34418>>>        //  Make sure the right customer is in the buffer
34418>>>        Move (DeserializeRowID(sRowID)) to rRowID
34419>>>        If (not(IsNullRowID(rRowID))) Begin
34421>>>            Send FindByRowId of oCustomer_DD Customer.File_Number rRowID
34422>>>            
34422>>>            //  Show Confirmation  
34422>>>            Send ShowYesNo Self (RefProc(ExecDeactivateCustomer)) (SFormat("Do you want to deactivate customer '%1'?", Trim(Customer.Name))) "Confirm"
34423>>>        End
34423>>>>
34423>>>    End_Procedure
34424>>>    
34424>>>    
34424>>>
34424>>>End_Object
34425>    
34425>    Use CustomerXML.wo
Including file: CustomerXML.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\CustomerXML.wo)
34425>>>Use cWebService.pkg
34425>>>Use DataDict.pkg
34425>>>Use Customer.DD
34425>>>
34425>>>Object oCustXML is a cWebService
34427>>>
34427>>>    // The main purpose of this sample is to show how data can be passed in and out
34427>>>    // as non-specified XML.
34427>>>    // When writing your functions, always consider using structs and arrays first. These data
34427>>>    // types could represent a simpler solution for the users and fewer lines of code
34427>>>    // in your function.
34427>>>    
34427>>>    // psDocumentation provides high level documentation of your web service. Clients using
34427>>>    // this service will see and use this documentation.
34427>>>    Set psDocumentation to ;        ("This uses a web service to return a list of customers and to pass a " + ;          "list of customers with items marked for delete. It is expected that the " + ;          "client using this will know what the format of the XML document must be")
34428>>>    
34428>>>    Set psServiceName to "CustomerXML"
34429>>>    Set psServiceURI to "http://tempuri.org/"
34430>>>    Set psServiceTitle to "Customer XML Service"
34431>>>
34431>>>    Object Customer_DD is a Customer_DataDictionary
34433>>>        Send DefineAllExtendedFields
34434>>>    End_Object    // Customer_DD
34435>>>
34435>>>    Set Main_DD to Customer_DD
34436>>>
34436>>>    Function CustomerXMLList Returns XmlHandle
#REM SEND REGISTERINTERFACE |CI7089 "get_CustomerXMLList" "Returns XmlHandle" "Returns an XML document of all customers (Name, Number, State)."
34440>>>       Integer bOk
34440>>>       Handle hoXML hoRoot hoEle hoXML1 hoRoot1
34440>>>       Handle hoCustomerDD
34440>>>       String sName sNumber sState sNamespace
34440>>>    
34440>>>       Move Customer_dd to hoCustomerDD
34441>>>    
34441>>>       // namespace to use for document
34441>>>       Move "http://www.dataaccess.com/Test/CustomerList" to sNameSpace
34442>>>    
34442>>>       // create XML document / Create root node
34442>>>       Get Create (RefClass(cXMLDomDocument)) to hoXML
34443>>>       // Create the Root element named CustomerList
34443>>>       Get CreateDocumentElementNS Of hoXML sNameSpace "CustomerList" To hoRoot
34444>>>       // now go through all customer records
34444>>>       Send Clear of hoCustomerDD
34445>>>       Send Find of hoCustomerDD ge 2
34446>>>       While (found)
34450>>>           // get name, number and state to strings
34450>>>           Move (trim(Customer.Name))    To sName
34451>>>           Move Customer.Customer_Number To sNumber
34452>>>           Move (trim(Customer.State))   To sState
34453>>>           // for each customer create customer node with child elements
34453>>>           Get AddElementNS Of hoRoot sNameSpace "Customer" "" To hoEle
34454>>>              Send AddElementNS Of hoEle sNameSpace "Name"   sName
34455>>>              Send AddElementNS Of hoEle sNameSpace "Number" sNumber
34456>>>              Send AddElementNS Of hoEle sNameSpace "State"  sState
34457>>>           Send Destroy Of hoEle
34458>>>           Send Find of hoCustomerDD gt 2
34459>>>       Loop
34460>>>>
34460>>>       Function_Return hoXML
34461>>>    End_Function
34462>>>    
34462>>>    // Pass XML customer document and parse it.
34462>>>    // Delete marked customers. Return an XML document containing a new list of customers.
34462>>>    Function DelCustomerXMLList XmlHandle CustomerList Returns XmlHandle
#REM SEND REGISTERINTERFACE |CI7090 "get_DelCustomerXMLList" "XmlHandle CustomerList Returns XmlHandle" "Passed a customer XML with delete atrributes. Deletes all customers and returns a new list."
34466>>>       Handle  hoCustomerDD
34466>>>       Handle  hoRoot hoCust
34466>>>       Handle  hoRetXml hoRetRoot hoRetCust
34466>>>       String  sDel sNumber sNs
34466>>>       Boolean bDelete
34466>>>    
34466>>>       If not CustomerList function_return 0
34469>>>    
34469>>>       Move Customer_DD to hoCustomerDD
34470>>>    
34470>>>       // namespaceURI of in and out XML doc
34470>>>       Move "http://www.dataaccess.com/Test/CustomerList" to sNs
34471>>>    
34471>>>       // this will be our return document
34471>>>       Get Create (RefClass(cXmlDomDocument)) to hoRetXml
34472>>>       Get CreateDocumentElementNS of hoRetXml sNs "CustomerList" to hoRetRoot
34473>>>    
34473>>>       // go through node list looking for customers to delete
34473>>>       Get DocumentElement of CustomerList to hoRoot
34474>>>       Get ChildElementNS of hoRoot sNs "Customer" to hoCust
34475>>>       While hoCust
34479>>>    
34479>>>           // if attribute "Delete" is "Y", we will delete it
34479>>>           Get AttributeValue Of hoCust "Delete" To sDel
34480>>>           Move (sDel="Y") to bDelete
34481>>>           If (bDelete) Begin
34483>>>                // attempt to delete customer
34483>>>                Get ChildElementValueNS Of hoCust sNs "Number" To sNumber
34484>>>                Send Clear of hoCustomerDD
34485>>>                Move sNumber to Customer.Customer_Number
34486>>>                Send Find of hoCustomerDD eq 1
34487>>>                If (found) Begin
34489>>>                    // This is commented out because this is a test.
34489>>>                    // We will remove the customer from the XML list,
34489>>>                    // but not from the database table.
34489>>>                    // This allows the sample to be run over and over.
34489>>>    
34489>>>                    //Send Request_delete of hoCustomerDD
34489>>>                    //If (err) begin
34489>>>                    //    Move False to bDelete
34489>>>                    //end
34489>>>                End
34489>>>>
34489>>>           End
34489>>>>
34489>>>           // if not deleted, add the customer node to the return document
34489>>>           If not bDelete begin
34491>>>               Get CloneNode of hoCust true to hoRetCust          // clone node and all children
34492>>>               Get AppendNode of hoRetRoot hoRetCust to hoRetCust // append to return doc
34493>>>               Send destroy of hoRetCust
34494>>>           End
34494>>>>
34494>>>           //
34494>>>           Get NextElementNS of hoCust sNs "Customer" to hoCust
34495>>>       Loop
34496>>>>
34496>>>       // note that both the passed XML document and the return document
34496>>>       // will automatically be destroyed by the web service handler
34496>>>       Function_Return hoRetXML
34497>>>    End_Function
34498>>>
34498>>>End_Object    // oCustXML
34499>    Use CustomerAndOrderInfo.wo
Including file: CustomerAndOrderInfo.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\CustomerAndOrderInfo.wo)
34499>>>// Structures used by the services
34499>>>
34499>>>// Customer Information
34499>>>// This structure matches the structure of the Customer table
34499>>>struct tCustomerInfo
34499>>>    integer iCustNumber
34499>>>    string  sName
34499>>>    string  sCustAddress
34499>>>    string  sCity
34499>>>    string  sState
34499>>>    string  sZip
34499>>>    string  sPhoneNumber
34499>>>    string  sFaxNumber
34499>>>    string  sEmailAddress
34499>>>    real    rCreditLimit
34499>>>    real    rPurchases
34499>>>    real    rBalance
34499>>>    string  sComments
34499>>>    string  sStatus
34499>>>end_struct
34499>>>
34499>>>// These next two structures do not match the structure of the Customer table exactly
34499>>>// It is an example of structures that could have been determined by some other source (e.g. an industry group)
34499>>>
34499>>>// Customer Address
34499>>>struct tCustAddress
34499>>>    string  sCustAddress
34499>>>    string  sCity
34499>>>    string  sState
34499>>>    string  sZip
34499>>>end_struct
34499>>>
34499>>>// New Customer
34499>>>struct tNewCustomer
34499>>>    string          sFirstName
34499>>>    string          sMiddleName
34499>>>    string          sLastName
34499>>>    tCustAddress    Address
34499>>>    tCustAddress    Address
34499>>>    string          sPhoneNumber
34499>>>    string          sFaxNumber
34499>>>    string          sEmailAddress
34499>>>end_struct
34499>>>
34499>>>// Order Detail
34499>>>struct tOrderDet
34499>>>    string  sItemID
34499>>>    integer iQty
34499>>>    real    rUnitPrice
34499>>>    real    rPrice
34499>>>end_struct
34499>>>
34499>>>// Order
34499>>>struct tOrder
34499>>>    integer     iOrderNumber
34499>>>    integer     iCustNumber
34499>>>    date        dOrdDate
34499>>>    string      sTerms
34499>>>    string      sShipVia
34499>>>    string      sOrderedBy
34499>>>    string      sSalesPerson
34499>>>    real        rOrderTotal
34499>>>    tOrderDet[] ArrayOfDetails
34499>>>    tOrderDet[] ArrayOfDetails
34499>>>end_struct
34499>>>
34499>>>// Order Summary
34499>>>struct tOrderSummary
34499>>>    integer iOrderNumber
34499>>>    date    dOrderDate
34499>>>    real    rOrderTotal
34499>>>end_struct
34499>>>
34499>>>Use cWebService.pkg
34499>>>Use DataDict.pkg
34499>>>Use VENDOR.DD
34499>>>Use INVT.DD
34499>>>Use CUSTOMER.DD
34499>>>Use SALESP.DD
34499>>>Use OrderHea.DD
34499>>>Use ORDERDTL.DD
34499>>>
34499>>>Object oCustOrderWebService is a cWebService
34501>>>
34501>>>    // psDocumentation provides high level documentation of your web service. Clients using
34501>>>    // this service will see and use this documentation.
34501>>>    set psDocumentation to ;        ("This DataFlex Web Service provides information on Customers " +;         "and their orders. You can also use this service to update Customer information, " +;         "create new Customers and retrieve a list of Customers.")
34502>>>    
34502>>>    Set psServiceName to "CustomerAndOrderInfo"
34503>>>    Set psServiceURI to "http://tempuri.org/"
34504>>>    Set psServiceTitle to "Customer and Order Information Service"
34505>>>
34505>>>    Object Vendor_DD is a Vendor_DataDictionary
34507>>>        Send DefineAllExtendedFields
34508>>>    End_Object    // Vendor_DD
34509>>>
34509>>>    Object Invt_DD is a Invt_DataDictionary
34511>>>        Set DDO_Server to Vendor_DD
34512>>>        Send DefineAllExtendedFields
34513>>>    End_Object    // Invt_DD
34514>>>
34514>>>    Object Customer_DD is a Customer_DataDictionary
34516>>>        Send DefineAllExtendedFields
34517>>>    End_Object    // Customer_DD
34518>>>
34518>>>    Object Salesp_DD is a Salesp_DataDictionary
34520>>>        Send DefineAllExtendedFields
34521>>>    End_Object    // Salesp_DD
34522>>>
34522>>>    Object OrderHea_DD is a OrderHea_DataDictionary
34524>>>        Set DDO_Server to Customer_DD
34525>>>        Set DDO_Server to Salesp_DD
34526>>>        Set Constrain_File to Customer.File_Number
34527>>>        Send DefineAllExtendedFields
34528>>>    End_Object    // OrderHea_DD
34529>>>
34529>>>    Object OrderDtl_DD is a OrderDtl_DataDictionary
34531>>>        Set DDO_Server to OrderHea_DD
34532>>>        Set DDO_Server to Invt_DD
34533>>>        Set Constrain_File to OrderHea.File_Number
34534>>>        Send DefineAllExtendedFields
34535>>>    End_Object    // OrderDtl_DD
34536>>>
34536>>>    Set Main_DD to Customer_DD
34537>>>
34537>>>    // Function GetOrdersForCustomer:
34537>>>    // Searches the OrderHea table for specified customer number and returns order numbers
34537>>>    //
34537>>>    // This demonstrates how to build and return data in an array based on a fundamental data type (array of integers)
34537>>>    //
34537>>>    // iCustNum - Customer number
34537>>>    // iArrayOfOrderNumbers - Array containing Order numbers for iCustNum
34537>>>    Function GetOrdersForCustomer integer iCustNum returns Integer[]
#REM SEND REGISTERINTERFACE |CI7091 "get_GetOrdersForCustomer" "integer iCustNum returns Integer[]" "Searches for order number in the OrderHea file for specified customer number and returns order numbers."
34541>>>        Integer[] iArrayOfOrderNumbers
34542>>>        Handle hoCustomerDD hoOrderHeaDD
34542>>>        Integer iCount iOldConstraint iNewConst
34542>>>    
34542>>>        Move 0 to iCount
34543>>>    
34543>>>        // Validate Customer Number
34543>>>        Move Customer_DD to hoCustomerDD
34544>>>        Send Clear of hoCustomerDD
34545>>>        Move iCustNum to Customer.Customer_number
34546>>>        Send Find of hoCustomerDD EQ 1
34547>>>    
34547>>>        // Find Orders for iCustNum
34547>>>        If (Found) Begin
34549>>>            Move OrderHea_DD to hoOrderHeaDD
34550>>>            Send Find of hoOrderHeaDD first_record 1
34551>>>    
34551>>>            While (Found)
34555>>>                Move OrderHea.Order_number to iArrayOfOrderNumbers[iCount]
34556>>>    
34556>>>                Send Find of hoOrderHeaDD GT 1
34557>>>                Increment iCount
34558>>>            Loop
34559>>>>
34559>>>    
34559>>>        end
34559>>>>
34559>>>        else Begin
34560>>>            Send WebServiceException "Customer number not found."
34561>>>            Function_Return
34562>>>        end
34562>>>>
34562>>>    
34562>>>        Function_Return iArrayOfOrderNumbers
34563>>>    End_Function  // GetOrdersForCustomer
34564>>>    
34564>>>    // Function ChangeCustomerAddress:
34564>>>    // Change address for customer
34564>>>    //
34564>>>    // This demonstrates how to pass and use simple struct data
34564>>>    //
34564>>>    // NewCustomerAddress - New Customer Address
34564>>>    // bSuccess - Boolean indicating if the new address was changed successfully or not
34564>>>    Function ChangeCustomerAddress integer iCustNum tCustAddress NewCustomerAddress returns Boolean
#REM SEND REGISTERINTERFACE |CI7092 "get_ChangeCustomerAddress" "integer iCustNum tCustAddress NewCustomerAddress returns Boolean" "Change address for customer."
34568>>>        boolean bSuccess
34568>>>        handle hDD
34568>>>    
34568>>>        move False to bSuccess
34569>>>    
34569>>>        move Customer_DD to hDD
34570>>>        send clear of hDD
34571>>>        move iCustNum to Customer.Customer_number
34572>>>        send find of hDD EQ 1
34573>>>    
34573>>>        if (found) begin
34575>>>            // Move values from structure to DD buffer
34575>>>            set field_changed_value  of hDD FIELD Customer.Address to NewCustomerAddress.sCustAddress
34576>>>            set field_changed_value  of hDD FIELD Customer.City    to NewCustomerAddress.sCity
34577>>>            set field_changed_value  of hDD FIELD Customer.State   to NewCustomerAddress.sState
34578>>>            set field_changed_value  of hDD FIELD Customer.Zip     to NewCustomerAddress.sZip
34579>>>    
34579>>>            // Save record
34579>>>            send Request_Save of hDD
34580>>>            move (not(Err)) to bSuccess
34581>>>        end
34581>>>>
34581>>>    
34581>>>        Function_Return bSuccess
34582>>>    End_Function  // ChangeCustomerAddress
34583>>>    
34583>>>    // Function CreateNewCustomer:
34583>>>    // Add new customer to Customer table
34583>>>    //
34583>>>    // This demonstrates how to pass and use more complex struct data,
34583>>>    // where the struct contains an element that is itself another struct
34583>>>    //
34583>>>    // NewCustomer - New Customer
34583>>>    // iSuccess - Integer containing the customer number, if the new customer was added successfully
34583>>>    // or -1 if customer was not added
34583>>>    Function CreateNewCustomer tNewCustomer NewCustomer returns Integer
#REM SEND REGISTERINTERFACE |CI7093 "get_CreateNewCustomer" "tNewCustomer NewCustomer returns Integer" "Add new customer to Customer table."
34587>>>        integer iSuccess
34587>>>        handle hDD
34587>>>        string sName
34587>>>    
34587>>>        move Customer_DD to hDD
34588>>>        send clear of hDD
34589>>>    
34589>>>        // Move values from structure to DD buffer
34589>>>        move (NewCustomer.sFirstName * NewCustomer.sMiddleName * NewCustomer.sLastName) to sName
34590>>>        set field_changed_value  of hDD FIELD Customer.Name          to sName
34591>>>        set field_changed_value  of hDD FIELD Customer.Address       to NewCustomer.Address.sCustAddress
34592>>>        set field_changed_value  of hDD FIELD Customer.City          to NewCustomer.Address.sCity
34593>>>        set field_changed_value  of hDD FIELD Customer.State         to NewCustomer.Address.sState
34594>>>        set field_changed_value  of hDD FIELD Customer.Zip           to NewCustomer.Address.sZip
34595>>>        set field_changed_value  of hDD FIELD Customer.Phone_number  to NewCustomer.sPhoneNumber
34596>>>        set field_changed_value  of hDD FIELD Customer.Fax_number    to NewCustomer.sFaxNumber
34597>>>        set field_changed_value  of hDD FIELD Customer.Email_address to NewCustomer.sEmailAddress
34598>>>
34598>>>        // note that the default for credit_limit is already set in the DD
34598>>>        set field_changed_value  of hDD FIELD Customer.Purchases     to 0
34599>>>        set field_changed_value  of hDD FIELD Customer.Balance       to 0
34600>>>        set field_changed_value  of hDD FIELD Customer.Comments      to "New Customer"
34601>>>        set field_changed_value  of hDD FIELD Customer.Status        to "Y"  // Active by default
34602>>>    
34602>>>        // Save record
34602>>>        send request_save of hDD
34603>>>        if (not(Err)) move Customer.Customer_Number to iSuccess
34606>>>        else move -1 to iSuccess
34608>>>    
34608>>>        Function_Return iSuccess
34609>>>    End_Function  // CreateNewCustomer
34610>>>    
34610>>>    // Function GetCustomerInfo:
34610>>>    // Searches for customer number in the Customer table and returns customer details
34610>>>    //
34610>>>    // This demonstrates how to build and return data in a simple struct
34610>>>    //
34610>>>    // iCustNum - Customer number
34610>>>    // OneCustomer - Structure containing Customer Information from Customer Table
34610>>>    Function GetCustomerInfo integer iCustNum returns tCustomerInfo
#REM SEND REGISTERINTERFACE |CI7094 "get_GetCustomerInfo" "integer iCustNum returns tCustomerInfo" "Searches for customer number in the Customer table and returns customer details."
34614>>>        tCustomerInfo OneCustomer
34614>>>        tCustomerInfo OneCustomer
34614>>>        handle hDD
34614>>>    
34614>>>        move Customer_DD to hDD
34615>>>        send clear of hDD
34616>>>        move iCustNum to Customer.Customer_number
34617>>>        send find of hDD EQ 1
34618>>>    
34618>>>        if (found) begin
34620>>>            move Customer.Customer_Number to OneCustomer.iCustNumber
34621>>>            move Customer.Name            to OneCustomer.sName
34622>>>            move Customer.Address         to OneCustomer.sCustAddress
34623>>>            move Customer.City            to OneCustomer.sCity
34624>>>            move Customer.State           to OneCustomer.sState
34625>>>            move Customer.Zip             to OneCustomer.sZip
34626>>>            move Customer.Phone_number    to OneCustomer.sPhoneNumber
34627>>>            move Customer.Fax_number      to OneCustomer.sFaxNumber
34628>>>            move Customer.Email_address   to OneCustomer.sEmailAddress
34629>>>            move Customer.Credit_limit    to OneCustomer.rCreditLimit
34630>>>            move Customer.Purchases       to OneCustomer.rPurchases
34631>>>            move Customer.Balance         to OneCustomer.rBalance
34632>>>            move Customer.Comments        to OneCustomer.sComments
34633>>>            move Customer.Status          to OneCustomer.sStatus
34634>>>        end
34634>>>>
34634>>>        else begin
34635>>>            send WebServiceException "Customer number not found."
34636>>>            Function_Return
34637>>>        End
34637>>>>
34637>>>    
34637>>>        Function_Return OneCustomer
34638>>>    End_Function  // GetCustomerInfo
34639>>>    
34639>>>    // Function GetCustomerInfoList:
34639>>>    // Reads customer table and returns an array with a list of customers
34639>>>    //
34639>>>    // This demonstrates how to build and return data in an array of structs
34639>>>    //
34639>>>    // ArrayOfCustomers - Array containing Customer from Customer table
34639>>>    Function GetCustomerInfoList returns tCustomerInfo[]
#REM SEND REGISTERINTERFACE |CI7095 "get_GetCustomerInfoList" "returns tCustomerInfo[]" "Reads customer table and returns an array with a list of customers."
34643>>>        tCustomerInfo[] ArrayOfCustomers
34643>>>        tCustomerInfo[] ArrayOfCustomers
34644>>>        handle hoCustomerDD
34644>>>        integer iCount
34644>>>    
34644>>>        move 0 to iCount
34645>>>        move Customer_dd to hoCustomerDD
34646>>>    
34646>>>        // now go through all customer records
34646>>>        send clear of hoCustomerDD
34647>>>        send find of hoCustomerDD GE 2
34648>>>        while (found)
34652>>>            move Customer.Customer_Number to ArrayOfCustomers[iCount].iCustNumber
34653>>>            move Customer.Name            to ArrayOfCustomers[iCount].sName
34654>>>            move Customer.Address         to ArrayOfCustomers[iCount].sCustAddress
34655>>>            move Customer.City            to ArrayOfCustomers[iCount].sCity
34656>>>            move Customer.State           to ArrayOfCustomers[iCount].sState
34657>>>            move Customer.Zip             to ArrayOfCustomers[iCount].sZip
34658>>>            move Customer.Phone_number    to ArrayOfCustomers[iCount].sPhoneNumber
34659>>>            move Customer.Fax_number      to ArrayOfCustomers[iCount].sFaxNumber
34660>>>            move Customer.Email_address   to ArrayOfCustomers[iCount].sEmailAddress
34661>>>            move Customer.Credit_limit    to ArrayOfCustomers[iCount].rCreditLimit
34662>>>            move Customer.Purchases       to ArrayOfCustomers[iCount].rPurchases
34663>>>            move Customer.Balance         to ArrayOfCustomers[iCount].rBalance
34664>>>            move Customer.Comments        to ArrayOfCustomers[iCount].sComments
34665>>>            move Customer.Status          to ArrayOfCustomers[iCount].sStatus
34666>>>    
34666>>>            send find of hoCustomerDD GT 2
34667>>>            increment iCount
34668>>>        Loop
34669>>>>
34669>>>    
34669>>>        Function_Return ArrayOfCustomers
34670>>>    End_Function  // CustomerList
34671>>>    
34671>>>    // Function GetOrderSummaryForCustomer:
34671>>>    // Searches for order number in the OrderHea table for specified customer number and returns
34671>>>    // order number, date and total.
34671>>>    //
34671>>>    // This demonstrates how to build and return data in an array of structs
34671>>>    //
34671>>>    // iCustNum - Customer number
34671>>>    // ArrayOfOrdersSum - Array containing OrderSummary for iCustNum
34671>>>    Function GetOrderSummaryForCustomer integer iCustNum returns tOrderSummary[]
#REM SEND REGISTERINTERFACE |CI7096 "get_GetOrderSummaryForCustomer" "integer iCustNum returns tOrderSummary[]" "Searches for order number in the OrderHea table for specified customer number and returns order number, date and total."
34675>>>        tOrderSummary[] ArrayOfOrdersSum
34675>>>        tOrderSummary[] ArrayOfOrdersSum
34676>>>        handle hDD
34676>>>        integer iCount iOldConstraint
34676>>>    
34676>>>        move 0 to iCount
34677>>>    
34677>>>        // Validate Customer Number
34677>>>        move Customer_DD to hDD
34678>>>        send clear of hDD
34679>>>        move iCustNum to Customer.Customer_number
34680>>>        send find of hDD EQ 1
34681>>>    
34681>>>        // Find Orders for iCustNum
34681>>>        if (found) begin
34683>>>            move OrderHea_DD to hDD
34684>>>            send find of hDD first_record 1
34685>>>    
34685>>>            while (found)
34689>>>                move OrderHea.Order_number to ArrayOfOrdersSum[iCount].iOrderNumber
34690>>>                move OrderHea.Order_Date   to ArrayOfOrdersSum[iCount].dOrderDate
34691>>>                move OrderHea.Order_Total  to ArrayOfOrdersSum[iCount].rOrderTotal
34692>>>    
34692>>>                send find of hDD GT 1
34693>>>                increment iCount
34694>>>            loop
34695>>>>
34695>>>    
34695>>>        end
34695>>>>
34695>>>        else begin
34696>>>            send WebServiceException "Customer number not found."
34697>>>            Function_Return
34698>>>    
34698>>>        end
34698>>>>
34698>>>    
34698>>>        Function_Return ArrayOfOrdersSum
34699>>>    End_Function  // GetOrderSummaryForCustomer
34700>>>    
34700>>>    // Function GetOrderInfo:
34700>>>    // Searches for order number in the OrderHea table and returns order header and details
34700>>>    //
34700>>>    // This demonstrates how to build and return data in complex structs.
34700>>>    // This struct contains a member that is an array of structs
34700>>>    //
34700>>>    // iOrdNum - Order number
34700>>>    // OneOrder - Structure containing Order header and details
34700>>>    Function GetOrderInfo integer iOrdNum returns tOrder
#REM SEND REGISTERINTERFACE |CI7097 "get_GetOrderInfo" "integer iOrdNum returns tOrder" "Searches for order number in the OrderHea table and returns order header and details."
34704>>>        tOrder OneOrder
34704>>>        tOrder OneOrder
34704>>>        handle hDD
34704>>>        integer iCount iOldConstraint
34704>>>        Boolean bHasRecord
34704>>>    
34704>>>        move 0 to iCount
34705>>>    
34705>>>        move OrderHea_DD to hDD
34706>>>    
34706>>>        // OrderHea_DD is constrained by Customer. In order to find all orders,
34706>>>        // not only the ones belonging to the current Customer in the DD buffer,
34706>>>        // we need to remove the constraint. Here we:
34706>>>        // save the current constraint
34706>>>        get constrain_file of hDD to iOldConstraint
34707>>>        // remove the constraint
34707>>>        set constrain_file of hDD to 0
34708>>>        // enforce the new rule, i.e. no constraint
34708>>>        send rebuild_constraints of hDD
34709>>>    
34709>>>        send clear of hDD
34710>>>        move iOrdNum to OrderHea.Order_number
34711>>>        send find of hDD EQ 1
34712>>>    
34712>>>        // restore the default constraint to whatever it was
34712>>>        set constrain_file of hDD to iOldConstraint
34713>>>        send rebuild_constraints of hDD
34714>>>    
34714>>>        get HasRecord of hDD to bHasRecord
34715>>>        if (bHasRecord) begin
34717>>>    
34717>>>            move OrderHea.Order_Number    to OneOrder.iOrderNumber
34718>>>            move OrderHea.Customer_Number to OneOrder.iCustNumber
34719>>>            move OrderHea.Order_Date      to OneOrder.dOrdDate
34720>>>            move OrderHea.Terms           to OneOrder.sTerms
34721>>>            move OrderHea.Ship_Via        to OneOrder.sShipVia
34722>>>            move OrderHea.Ordered_By      to OneOrder.sOrderedBy
34723>>>            move OrderHea.Salesperson_ID  to OneOrder.sSalesPerson
34724>>>            move OrderHea.Order_Total     to OneOrder.rOrderTotal
34725>>>    
34725>>>            move OrderDtl_DD to hDD
34726>>>            send find of hDD first_record 1
34727>>>            while (found)
34731>>>                move OrderDtl.Item_id        to OneOrder.ArrayOfDetails[iCount].sItemID
34732>>>                move OrderDtl.Qty_ordered    to OneOrder.ArrayOfDetails[iCount].iQty
34733>>>                move OrderDtl.Price          to OneOrder.ArrayOfDetails[iCount].rUnitPrice
34734>>>                move OrderDtl.Extended_price to OneOrder.ArrayOfDetails[iCount].rPrice
34735>>>    
34735>>>                send find of hDD GT 1
34736>>>                increment iCount
34737>>>            loop
34738>>>>
34738>>>    
34738>>>        end
34738>>>>
34738>>>        else begin
34739>>>            send WebServiceException "Order number not found."
34740>>>            Function_Return
34741>>>        end
34741>>>>
34741>>>    
34741>>>        Function_Return OneOrder
34742>>>    End_Function  // GetOrderInfo
34743>>>
34743>>>End_Object    // oCustOrderWebService
34744>    Use TestService.wo
Including file: TestService.wo    (A:\Dropbox\Git_Bit\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\TestService.wo)
34744>>>Use cWebService.pkg
34744>>>Use DataDict.pkg
34744>>>Use VENDOR.DD
34744>>>Use INVT.DD
34744>>>Use CUSTOMER.DD
34744>>>Use SALESP.DD
34744>>>Use OrderHea.DD
34744>>>Use OrderDtl.DD
34744>>>
34744>>>Object oTestService is a cWebService
34746>>>
34746>>>    Set psDocumentation to ;        ("This is a Test Web Service. It contains a few simple operations " +;         "demonstrating how to create a DataFlex Web Service. "+;         "To test any of these web services using your web browser, simply follow "+;         "the link below for the specified service. "+;         "You can also view the WSDL for this service by accessing the link to "+;         "Service Description below. To create a new Web Service operation, simply "+;         "add a function in the oTestService Web Service object and select Publish. "+;         "To learn more about creating Web Services in DataFlex, please see the "+;         "Web Services section in the DataFlex Help.")
34747>>>
34747>>>    Set psServiceName to "TestService"
34748>>>    Set psServiceURI to "http://www.visualdataflex.com/examples/testservice"
34749>>>    Set psServiceTitle to "DataFlex Test Web Service"
34750>>>    Set psDescription to "Test Web Service"
34751>>>
34751>>>    Object Vendor_DD is a Vendor_DataDictionary
34753>>>        Send DefineAllExtendedFields
34754>>>    End_Object    // Vendor_DD
34755>>>
34755>>>    Object Invt_DD is a Invt_DataDictionary
34757>>>        Set DDO_Server to Vendor_DD
34758>>>        Send DefineAllExtendedFields
34759>>>    End_Object    // Invt_DD
34760>>>
34760>>>    Object Customer_DD is a Customer_DataDictionary
34762>>>        Send DefineAllExtendedFields
34763>>>    End_Object    // Customer_DD
34764>>>
34764>>>    Object Salesp_DD is a Salesp_DataDictionary
34766>>>        Send DefineAllExtendedFields
34767>>>    End_Object    // Salesp_DD
34768>>>
34768>>>    Object OrderHea_DD is a OrderHea_DataDictionary
34770>>>        Set DDO_Server to Customer_DD
34771>>>        Set DDO_Server to Salesp_DD
34772>>>        Send DefineAllExtendedFields
34773>>>    End_Object    // OrderHea_DD
34774>>>
34774>>>    Object OrderDtl_DD is a OrderDtl_DataDictionary
34776>>>        Set DDO_Server to OrderHea_DD
34777>>>        Set DDO_Server to Invt_DD
34778>>>        Send DefineAllExtendedFields
34779>>>    End_Object    // OrderDtl_DD
34780>>>
34780>>>    Set Main_DD to Invt_DD
34781>>>
34781>>>    Function SayHello String sName Returns String
#REM SEND REGISTERINTERFACE |CI7098 "get_SayHello" "String sName Returns String" "Returns a hello message using the name passed as the string."
34785>>>        String sReturn
34785>>>             
34785>>>        Move ("Hello," * sName +".") to sReturn
34786>>>        
34786>>>        Function_Return sReturn
34787>>>    End_Function
34788>>>    
34788>>>    Function Welcome String sName Returns String
#REM SEND REGISTERINTERFACE |CI7099 "get_Welcome" "String sName Returns String" "Returns a welcome message using the name passed as the string and IIS server variables."
34792>>>        String sReturn
34792>>>        String sIPAddr sServer sLocalAddr
34792>>>        
34792>>>        Get ServerVariable "REMOTE_ADDR" to sIpAddr   
34793>>>        Get ServerVariable "SERVER_NAME" to sServer
34794>>>        Get ServerVariable "LOCAL_ADDR" to sLocalAddr
34795>>>             
34795>>>        Move ("Hello," * sName + ". This is" * sServer) to sReturn
34796>>>        Move (sReturn * ". I see you're from" * sIPAddr * ". Welcome to" * sLocalAddr +"!") to sReturn
34797>>>        
34797>>>        Function_Return sReturn
34798>>>    End_Function    
34799>>>    
34799>>>    Function Echo String echoString Returns String
#REM SEND REGISTERINTERFACE |CI7100 "get_Echo" "String echoString Returns String" "Echoes back the string passed."
34803>>>        Function_Return echoString
34804>>>    End_Function
34805>>>
34805>>>    Function AddNumber Real number1 Real number2 Returns Real
#REM SEND REGISTERINTERFACE |CI7101 "get_AddNumber" "Real number1 Real number2 Returns Real" "Adds two numbers and returns the result."
34809>>>        Function_Return (number1+number2)
34810>>>    End_Function
34811>>>
34811>>>    Function PriceQuote String itemID Returns Number
#REM SEND REGISTERINTERFACE |CI7102 "get_PriceQuote" "String itemID Returns Number" "Looks up the price of a particular inventory item. Example item identifiers, DT, GOLD, MAPS, OBM, RUNMTR."
34815>>>        Send Clear of Invt_DD
34816>>>        Move itemID to Invt.Item_id
34817>>>        Send Find of Invt_DD eq 1
34818>>>        If (Not(Found)) Begin
34820>>>            //If the inventory item cannot be found, raise a web service exception
34820>>>            Send WebServiceException ("Unknown inventory item '"+itemID+"'")
34821>>>            Function_Return
34822>>>        End
34822>>>>
34822>>>        Function_Return Invt.Unit_price
34823>>>    End_Function
34824>>>
34824>>>    Function EstimatedOrderDeliveryDate Integer customerNumber Integer orderNumber Returns Date
#REM SEND REGISTERINTERFACE |CI7103 "get_EstimatedOrderDeliveryDate" "Integer customerNumber Integer orderNumber Returns Date" "Looks up an order and returns the delivery date. Example: customer number 1 and order number 101."
34828>>>        Send Clear of OrderHea_DD
34829>>>        Move customerNumber to OrderHea.Customer_number
34830>>>        Move orderNumber to OrderHea.Order_number
34831>>>        Send Find of OrderHea_DD eq 2
34832>>>        If (Not(Found)) Begin
34834>>>            //If the order cannot be found, we raise a web service exception
34834>>>            Send WebServiceException "The specified order number, or order number/customer number combination, is invalid"
34835>>>            Function_Return
34836>>>        End
34836>>>>
34836>>>
34836>>>        //We don't actually have a delivery date field in the database
34836>>>        //so we'll simply use the order date for this sample and add 30 days to it
34836>>>        Function_Return (OrderHea.Order_date + 30)
34837>>>    End_Function
34838>>>
34838>>>    Function ItemsSoldToDate String itemID Returns Integer
#REM SEND REGISTERINTERFACE |CI7104 "get_ItemsSoldToDate" "String itemID Returns Integer" "Calculates the total number of items sold. Example: item identifiers, DT, GOLD, MAPS, OBM, RUNMTR."
34842>>>        Integer total
34842>>>        //We'll do a simple brute force search through the database
34842>>>        //and calculate the total number of items sold.
34842>>>        //It's a bit naive, but it will do for this example
34842>>>        Send Clear of OrderDtl_DD
34843>>>        Send Find of OrderDtl_DD ge 1
34844>>>        While (Found)
34848>>>            If (OrderDtl.Item_id = Uppercase(itemId));                Increment total
34851>>>            Send Find of OrderDtl_DD gt 1
34852>>>        Loop
34853>>>>
34853>>>        Function_Return total
34854>>>    End_Function
34855>>>
34855>>>End_Object    // oTestService
34856>    
34856>    
34856>    // Generates a string of 40 random characters between ASCII 33 & ASCII 126
34856>    // This should produce a unique string suitable for a 16 character encryption key.
34856>    // Excludes the ;"' characters
34856>    // Used by WebApps to give the psEncryptPassword property a unique value.
34856>    Function GenerateEncryptString Returns String
34859>        Integer i iASCII
34859>        String sChar sKey
34859>        
34859>        For i from 0 to 39
34865>            Move (Random(93)) to iASCII
34866>            Move (iASCII + 34) to iASCII
34867>            
34867>            If (iASCII = 34 or iASCII = 39 or iASCII = 59) Begin
34869>                Increment iASCII
34870>            End
34870>            
34870>            Move (Character(iASCII)) to sChar
34871>            Move (sKey + sChar) to sKey
34872>        Loop
34873>        
34873>        Function_Return sKey
34874>    End_Function
34875>
34875>
34875>    Procedure InitPassword
34878>        // Note to the developer: For security purposes each installation of the WebOrder workspace must
34878>        // contain a unique value for the framework's encryption key. This value is stored in the cWebApp
34878>        // object's psEncryptPassword property.
34878>        //
34878>        // To ensure each running installation of WebOrder is different we have modified the Web App's OnLoad
34878>        // event to generate a random psEncryptPassword value the first time that the web app is run. This 
34878>        // value is then used and is stored in the OrdSys system table so that it does not get re-generated
34878>        // in subsequent instances of this web application.
34878>        //
34878>        // Since WebOrder is installed and run automatically when you install DataFlex we are required to 
34878>        // ensure that the encryption password cannot be guessed. Normally you would not need, or want, 
34878>        // to Use this technique in your own web applications. Instead you would manually set psEncryptPassword
34878>        // to a trusted, unique value for each web application that you deploy.
34878>        
34878>        
34878>        // Test if an encryption password has already been generated.
34878>        If (Trim(OrdSys.EncryptPassword) = "") Begin
34880>            Reread OrdSys
34884>            // Just in case another instance wrote to OrdSys.EncryptPassword in the millisecond
34884>            // between the above two lines of code we will test this value again
34884>            If (Trim(OrdSys.EncryptPassword) = "") Begin
34886>                Get GenerateEncryptString to OrdSys.EncryptPassword
34887>                SaveRecord OrdSys
34888>            End
34888>            Unlock
34889>        End
34889>
34889>        Set psEncryptPassword to (Trim(OrdSys.EncryptPassword))
34890>    End_Procedure
34891>    
34891>    Send InitPassword
34892>End_Object
34893>
34893>Send StartWebApp of oWebApp
34894>
Summary
Memory Available: 2147483646
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 21476
Total Resources: 0
Total Commands : 34893
Total Windows  : 1
Total Pages    : 1
Static Data    : 355699
Message area   : 252434
Total Blocks   : 14357
