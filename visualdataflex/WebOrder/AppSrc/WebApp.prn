Compiling Program: A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\WebApp.src
Memory Available: 2147483646
1>Use AllWebAppClasses.pkg
Using pre-compiled package ALLWEBAPPCLASSES.PKG
Including file: AllWebAppClasses.pkd    (C:\Program Files (x86)\DataFlex 18.2\Pkg\AllWebAppClasses.pkd)
28717>Use WebAppBase.pkg
28717>Use cWebMenuBar.pkg
28717>Use cWebToolbar.pkg
28717>Use cWebCommandbar.pkg
28717>Use cWebPanel.pkg
28717>Use cWebButton.pkg
28717>Use cWebMenuItem.pkg
28717>Use cWebMenuItemLoadView.pkg
28717>
28717>Object oApplication is a cApplication
28719>End_Object
28720>
28720>Object oWebApp is a cWebApp
28722>    Set psTheme to "Df_Flat_Desktop"
28723>//    Set peLoginMode to lmLoginNone
28723>
28723>// this will do a manual login
28723>//    Procedure OnLoad
28723>//        Boolean bOk
28723>//        Get UserLogin of ghoWebSessionManager "john" "John" to bOk
28723>//    End_Procedure
28723>
28723>    Object oCommandbar is a cWebCommandBar
28725>        
28725>        Object oMenuBar is a cWebMenuBar
28727>            Object oFileMenu is a cWebMenuItem
28729>                Set psCaption to "File"
28730>                
28730>                Object oClearMenuItem is a cWebMenuClear
28732>                End_Object  
28733>                             
28733>                Object oClearAllMenuItem is a cWebMenuClearAll
28735>                End_Object  
28736>                
28736>                Object oPromptMenuItem is a cWebMenuPrompt
28738>                    Set pbBeginGroup to True
28739>                End_Object  
28740>                               
28740>                Object oFindMenuItem is a cWebMenuFind
28742>                End_Object  
28743>
28743>                Object oNextMenuItem is a cWebMenuFindNext
28745>                End_Object  
28746>
28746>                Object oPreviousMenuItem is a cWebMenuFindPrevious
28748>                End_Object  
28749>                
28749>                Object oLastMenuItem is a cWebMenuFindLast
28751>                End_Object                
28752>                                
28752>                Object oFirstMenuItem is a cWebMenuFindFirst
28754>                End_Object  
28755>                
28755>                Object oSaveMenuItem is a cWebMenuSave
28757>                    Set pbBeginGroup to True
28758>                End_Object  
28759>                
28759>                Object oDeleteMenuItem is a cWebMenuDelete
28761>                End_Object  
28762>                
28762>                Object oLoginMenuItem is a cWebMenuItem
28764>                    Set psCaption to "Log In"
28765>                    Set pbBeginGroup to True
28766>                    Set psCSSClass to "WebLoginMenuItem"
28767>
28767>                    Procedure OnClick
28770>                        Send RequestLogin to ghoWebSessionManager
28771>                    End_Procedure
28772>                    
28772>                    Procedure OnLoad
28775>                        Integer eLoginMode
28775>                        Handle hoLogin
28775>                        Get GetLoginView to hoLogin
28776>                        Get peLoginMode to eLoginMode
28777>                        WebSet pbRender to  (hoLogin and eLoginMode<>lmLoginNone)
28778>                    End_Procedure  // OnLoad
28779>                    
28779>                End_Object  
28780>
28780>                Object oLogoutMenuItem is a cWebMenuItem
28782>                    Set psCaption to "Log Out"
28783>                    Set psCSSClass to "WebLogoutMenuItem"
28784>
28784>                    Procedure OnClick
28787>                        Send RequestLogOut of ghoWebSessionManager
28788>                    End_Procedure
28789>
28789>                    Procedure OnLoad
28792>                        Integer eLoginMode
28792>                        Handle hoLogin
28792>                        Get GetLoginView to hoLogin
28793>                        Get peLoginMode to eLoginMode
28794>                        WebSet pbRender to  (hoLogin and eLoginMode<>lmLoginNone)
28795>                    End_Procedure  // OnLoad
28796>                End_Object  
28797>            End_Object  
28798>    
28798>            Object oViewMenu is a cWebMenuItem
28800>                Set psCaption to "Views"
28801>                
28801>                Object oCustomerMaintenanceMenuItem is a cWebMenuItemLoadView
28803>                    Set psCaption to "Customer Maintenance"
28804>                    Set psLoadViewOnClick to "oCustomer" 
28805>                End_Object
28806>
28806>                Object oOrderEntryMenuItem is a cWebMenuItemLoadView
28808>                    Set psCaption to "Order Entry"
28809>                    Set psLoadViewOnClick to "oOrder"
28810>                End_Object
28811>
28811>                Object oInventoryMaintenanceMenuItem is a cWebMenuItemLoadView
28813>                    Set psCaption to "Inventory Maintenance"
28814>                    Set psLoadViewOnClick to "oInventory"
28815>                End_Object
28816>
28816>                Object oVendorMaintenanceMenuItem is a cWebMenuItemLoadView
28818>                    Set psCaption to "Vendor Maintenance"
28819>                    Set psLoadViewOnClick to "oVendor"
28820>                End_Object
28821>
28821>                Object oSalesPersonMaintenanceMenuItem is a cWebMenuItemLoadView
28823>                    Set psCaption to "Sales Person Maintenance"
28824>                    Set psLoadViewOnClick to "oSalesPerson"
28825>                End_Object
28826>            End_Object
28827>            
28827>            Object oReportMenu is a cWebMenuItem
28829>                Set psCaption to "Reports"
28830>                
28830>                    
28830>                Object oCustomerListMenuItem is a cWebMenuItemLoadView
28832>                    Set psCaption to "Customer List"
28833>                    Set psLoadViewOnClick to "oCustomerListSample"
28834>                End_Object
28835>
28835>                Object oOrderListMenuItem is a cWebMenuItemLoadView
28837>                    Set psCaption to "Order List"
28838>                    Set psLoadViewOnClick to "oOrderListSample"
28839>                End_Object
28840>
28840>                Object oCustomerOrdersMenuItem is a cWebMenuItemLoadView
28842>                    Set psCaption to "Customer Orders"
28843>                    Set psLoadViewOnClick to "oCustomerOrdersSample"
28844>                End_Object  
28845>
28845>                Object oVRW_LiveMenuItem is a cWebMenuItem
28847>                    Set psCaption to "DataFlex Report Writer (Live)"
28848>                    Set pbBeginGroup to True
28849>                    Set psToolTip to "Opens a URL to a DataFlex Report Writer live demonstration."
28850>
28850>                    Procedure OnClick
28853>                        Forward Send OnClick 
28855>                        Send NavigateToPage "http://www.dataaccess.com/livevisualreportwriter" btNewTab
28856>                    End_Procedure
28857>                End_Object
28858>
28858>                Object oDAI_LiveMenuItem is a cWebMenuItem
28860>                    Set psCaption to "Dynamic AI (Live)"
28861>                    Set psToolTip to "Opens a URL to a Dynamic AI live demonstration."
28862>
28862>                    Procedure OnClick
28865>                        Forward Send OnClick
28867>                        Send NavigateToPage "http://www.dataaccess.com/livedynamicai" btNewTab
28868>                    End_Procedure
28869>                End_Object
28870>                
28870>            End_Object
28871>                
28871>            Object oDemoMenu is a cWebMenuItem
28873>                Set psCaption to "Demo"
28874>
28874>                Object oCardsMenuItem is a cWebMenuItemLoadView
28876>                    Set psCaption to "Cards"
28877>                    Set psLoadViewOnClick to "oDemoCards"
28878>                End_Object
28879>
28879>                Object oDemoColumnTypesMenuItem1 is a cWebMenuItemLoadView
28881>                    Set psCaption to "Column Types"
28882>                    Set psLoadViewOnClick to "oDemoColumnTypes"
28883>                End_Object
28884>
28884>                Object oConstrainedGridMenuItem is a cWebMenuItemLoadView
28886>                    Set psCaption to "Constrained Grid"
28887>                    Set psLoadViewOnClick to "oDemoConstrainedGrid"
28888>                End_Object
28889>
28889>                Object oDialogsMenuItem is a cWebMenuItemLoadView
28891>                    Set psCaption to "Dialogs"
28892>                    Set psLoadViewOnClick to "oDemoDialogs"
28893>                End_Object
28894>                
28894>                Object oDemoFileUploadMenuItem is a cWebMenuItemLoadView
28896>                    Set psCaption to "File Upload"
28897>                    Set psLoadViewOnClick to "oDemoFileUpload"
28898>                End_Object
28899>                
28899>                Object oManualDataAwareGridMenuItem is a cWebMenuItemLoadView
28901>                    Set psCaption to "Manual Data Aware Grid"
28902>                    Set psLoadViewOnClick to "oDemoManualDataAwareGrid"
28903>                End_Object
28904>
28904>                Object oManualGridMenuItem is a cWebMenuItemLoadView
28906>                    Set psCaption to "Manual Grid"
28907>                    Set psLoadViewOnClick to "oDemoManualGrid"
28908>                End_Object
28909>
28909>                Object oMultiDDOStructureMenuItem is a cWebMenuItemLoadView
28911>                    Set psCaption to "Multi DDO Structure"
28912>                    Set psLoadViewOnClick to "oDemoMultiDDOStructure"
28913>                End_Object
28914>
28914>                Object oPanelsMenuItem is a cWebMenuItemLoadView
28916>                    Set psCaption to "Panels + Allow Access"
28917>                    Set psLoadViewOnClick to "oDemoPanels"
28918>                End_Object
28919>
28919>                Object oSlidersMenuItem is a cWebMenuItemLoadView
28921>                    Set psCaption to "Sliders"
28922>                    Set psLoadViewOnClick to "oDemoSliders"
28923>                End_Object
28924>
28924>                Object oSubMenuItem is a cWebMenuItem
28926>                    Set psCaption to "Submenu"
28927>
28927>                    Object oSameWindowMenuItem is a cWebMenuItem
28929>                        Set psCaption to "Order.html (Same window)" 
28930>                        Set psImage to "Images/Order.png"
28931>                        
28931>                        Procedure OnClick
28934>                            Send NavigateToPage "Order.html" btCurrentWindow
28935>                        End_Procedure
28936>                    End_Object
28937>                    
28937>                    
28937>                    Object oSameNewTabMenuItem is a cWebMenuItem
28939>                        Set psCaption to "Order.html (New tab)" 
28940>                        Set psImage to "Images/Order.png"
28941>                        
28941>                        Procedure OnClick
28944>                            Send NavigateToPage "Order.html" btNewTab
28945>                        End_Procedure
28946>                    End_Object
28947>                    
28947>                    Object oSameNewWindowMenuItem is a cWebMenuItem
28949>                        Set psCaption to "Order.html (New window)" 
28950>                        Set psImage to "Images/Order.png"
28951>                        
28951>                        Procedure OnClick
28954>                            Send NavigateNewWindow "Order.html" 800 600
28955>                        End_Procedure
28956>                    End_Object
28957>            
28957>                    Object oGoogleSameWindowMenuItem is a cWebMenuItem
28959>                        Set psCaption to "Google.com (Same window)" 
28960>                        
28960>                        Procedure OnClick
28963>                            Send NavigateToPage "http://www.google.com/" btCurrentWindow
28964>                        End_Procedure
28965>                    End_Object
28966>                End_Object
28967>                
28967>                Object oSuggestionFormMenuItem is a cWebMenuItemLoadView
28969>                    Set psCaption to "Suggestion Form"
28970>                    Set psLoadViewOnClick to "oDemoSuggestionForm"
28971>                End_Object
28972>
28972>                Object oTreeViewOnSyncViewMenuItem is a cWebMenuItemLoadView
28974>                    Set psCaption to "TreeView + OnSyncView"
28975>                    Set psLoadViewOnClick to "oDemoTreeView"
28976>                End_Object
28977>
28977>                Object oConfigurationPanelMenuItem1 is a cWebMenuItemLoadView
28979>                    Set psCaption to "TreeView + Cards"
28980>                    Set psLoadViewOnClick to "oDemoTreeViewCards"
28981>                End_Object
28982>
28982>            End_Object              
28983>            
28983>            Object oThemesMenu is a cWebMenuItem
28985>                Set psCaption to "Themes"
28986>
28986>                Object oModernSky is a cWebMenuItem
28988>                    Set psCaption to "Modern Sky"
28989>                    
28989>                    Procedure OnClick 
28992>                        //  Change the theme at runtime
28992>                        WebSet psTheme of oWebApp to "Df_Modern_Sky"
28993>                        
28993>                        //  Update menu
28993>                        Send UpdateSelectedTheme
28994>                    End_Procedure
28995>                End_Object
28996>                                    
28996>                Object oWindowsLike is a cWebMenuItem
28998>                    Set psCaption to "Windows Like"
28999>                    
28999>                    Procedure OnClick 
29002>                        //  Change the theme at runtime
29002>                        WebSet psTheme of oWebApp to "Df_Windows_Like"
29003>                        
29003>                        //  Update menu
29003>                        Send UpdateSelectedTheme
29004>                    End_Procedure
29005>                End_Object
29006>                                                
29006>                Object oHighContrast is a cWebMenuItem
29008>                    Set psCaption to "High Contrast"
29009>                    
29009>                    Procedure OnClick 
29012>                        //  Change the theme at runtime
29012>                        WebSet psTheme of oWebApp to "Df_High_Contrast"
29013>                        
29013>                        //  Update menu
29013>                        Send UpdateSelectedTheme
29014>                    End_Procedure
29015>                End_Object
29016>                
29016>                Object oWebCremeItem is a cWebMenuItem
29018>                    Set psCaption to "Web Creme"
29019>                    Set pbEnabled to False
29020>                    
29020>                    Procedure OnClick
29023>                        //   Change the theme at runtime
29023>                        WebSet psTheme of oWebApp to "Df_Web_DataAccess"
29024>                        
29024>                        //  Update menu
29024>                        Send UpdateSelectedTheme
29025>                    End_Procedure
29026>                End_Object
29027>                
29027>                Object oFlatTouchItem is a cWebMenuItem
29029>                    Set psCaption to "Flat Touch"
29030>                    Set pbEnabled to False
29031>                    
29031>                    Procedure OnClick
29034>                        //   Change the theme at runtime
29034>                        WebSet psTheme of oWebApp to "Df_Flat_Touch"
29035>                        
29035>                        //  Update menu
29035>                        Send UpdateSelectedTheme
29036>                    End_Procedure
29037>                End_Object
29038>                
29038>                Object oFlatDesktopItem is a cWebMenuItem
29040>                    Set psCaption to "Flat Desktop"
29041>                    Set pbEnabled to False
29042>                    
29042>                    Procedure OnClick
29045>                        //   Change the theme at runtime
29045>                        WebSet psTheme of oWebApp to "Df_Flat_Desktop"
29046>                        
29046>                        //  Update menu
29046>                        Send UpdateSelectedTheme
29047>                    End_Procedure
29048>                End_Object
29049>                
29049>                Procedure UpdateSelectedTheme
29052>                    String sTheme
29052>                    
29052>                    //  Determine theme
29052>                    WebGet psTheme of oWebApp to sTheme
29053>
29053>                    //  Set enabled state
29053>                    WebSet pbEnabled of (oModernSky)        to (sTheme <> "Df_Modern_Sky")
29054>                    WebSet pbEnabled of (oWindowsLike)      to (sTheme <> "Df_Windows_Like")
29055>                    WebSet pbEnabled of (oHighContrast)     to (sTheme <> "Df_High_Contrast")
29056>                    WebSet pbEnabled of (oWebCremeItem)     to (sTheme <> "Df_Web_Creme")
29057>                    WebSet pbEnabled of (oFlatTouchItem)    to (sTheme <> "Df_Flat_Touch")
29058>                    WebSet pbEnabled of (oFlatDesktopItem)  to (sTheme <> "Df_Flat_Desktop")
29059>                End_Procedure
29060>                
29060>                Procedure OnLoad
29063>                    Send UpdateSelectedTheme
29064>                End_Procedure
29065>            End_Object
29066>            
29066>            
29066>            Object oRememberItems is a cWebMenuItem
29068>                Set psCaption to C_$Remember
29069>                
29069>                Object oRememberMenuItem is a cWebMenuItem
29071>                    Set psCaption to C_$CaptionRememberField
29072>                    
29072>                    Procedure OnClick
29075>                        Handle hoFocus
29075>                        Get DEOControlFocusObject to hoFocus
29076>                        If hoFocus Begin
29078>                            Send DDFieldRemember of hoFocus
29079>                        End
29079>                    End_Procedure
29080>                End_Object
29081>                
29081>                Object oRememberLastMenuItem is a cWebMenuItem
29083>                    Set psCaption to C_$CaptionRememberFieldLastValue
29084>                    
29084>                    Procedure OnClick
29087>                        Handle hoFocus
29087>                        Get DEOControlFocusObject to hoFocus
29088>                        If hoFocus Begin
29090>                            Send DDFieldRememberLast of hoFocus
29091>                        End
29091>                    End_Procedure
29092>                End_Object
29093>                
29093>                Object oUnRememberMenuItem is a cWebMenuItem
29095>                    Set psCaption to C_$CaptionUnRememberField
29096>                    
29096>                    Procedure OnClick
29099>                        Handle hoFocus
29099>                        Get DEOControlFocusObject to hoFocus
29100>                        If hoFocus Begin
29102>                            Send DDFieldUnRemember of hoFocus
29103>                        End
29103>                    End_Procedure
29104>                End_Object
29105>                
29105>                Object oRememberAllMenuItem is a cWebMenuItem
29107>                    Set psCaption to C_$CaptionClearAllAssignedDefaults
29108>                    
29108>                    Procedure OnClick
29111>                        Handle hoFocus hoDDO
29111>                        Get DEOControlFocusObject to hoFocus
29112>                        If hoFocus Begin
29114>                            Get Server of hoFocus to hoDDO
29115>                            If hoDDO Begin
29117>                                Send ClearAllRememberedDefaults of hoDDO
29118>                            End
29118>                        End
29118>                    End_Procedure
29119>                End_Object
29120>    
29120>            End_Object
29121>            
29121>        End_Object  
29122>        
29122>        Object oFindToolBar is a cWebToolBar
29124>            Object oFirstMenuItem is a cWebMenuFindFirst
29126>            End_Object  
29127>    
29127>            Object oPreviousMenuItem is a cWebMenuFindPrevious
29129>            End_Object  
29130>
29130>            Object oFindMenuItem is a cWebMenuFind
29132>            End_Object  
29133>
29133>            Object oNextMenuItem is a cWebMenuFindNext
29135>            End_Object  
29136>            
29136>            Object oLastMenuItem is a cWebMenuFindLast
29138>            End_Object
29139>                           
29139>            Object oPromptMenuItem is a cWebMenuPrompt
29141>            End_Object 
29142>        End_Object
29143>        
29143>        Object oFileToolBar is a cWebToolBar
29145>             Set pbShowCaption to True
29146>            
29146>            Object oClearMenuItem is a cWebMenuClear
29148>            End_Object              
29149>             
29149>            Object oClearAllMenuItem is a cWebMenuClearAll
29151>            End_Object   
29152>                        
29152>            Object oSaveMenuItem is a cWebMenuSave
29154>            End_Object  
29155>            
29155>            Object oDeleteMenuItem is a cWebMenuDelete
29157>            End_Object 
29158>        End_Object
29159>    End_Object
29160>
29160>
29160>    Use SessionManager.wo
Including file: SessionManager.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\SessionManager.wo)
29160>>>Use cWebSessionManagerStandard.pkg
Including file: cWebSessionManagerStandard.pkg    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cWebSessionManagerStandard.pkg)
29160>>>>>Use cWebSessionManager.pkg
29160>>>>>Use cWebAppSessionDataDictionary.dd
Including file: cWebAppSessionDataDictionary.dd    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cWebAppSessionDataDictionary.dd)
29160>>>>>>>Use DataDict.pkg
29160>>>>>>>
29160>>>>>>>Open WebAppSession
Including file: WebAppSession.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\WebAppSession.fd)
29162>>>>>>>Open WebAppUser
Including file: WebAppUser.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\WebAppUser.fd)
29164>>>>>>>
29164>>>>>>>Class cWebAppSessionDataDictionary is a DataDictionary
29165>>>>>>>    
29165>>>>>>>    Procedure Construct_Object
29167>>>>>>>        Forward Send Construct_Object
29169>>>>>>>        Set Main_File to WebAppSession.File_Number
29170>>>>>>>
29170>>>>>>>        Set Add_Server_File to WebAppUser.File_Number
29171>>>>>>>
29171>>>>>>>        Set ParentNullAllowed WebAppUser.File_Number to True
29172>>>>>>>
29172>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
29173>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
29174>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
29175>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
29176>>>>>>>
29176>>>>>>>        Set Field_Option Field WebAppSession.Active DD_RETAIN to True
29177>>>>>>>        Set Field_Checkbox_Values Field WebAppSession.Active to "Y" "N"
29178>>>>>>>        Set Field_Error Field WebAppSession.Active to 500 "Invalid WebAppSession Active State"
29179>>>>>>>
29179>>>>>>>    End_Procedure
29180>>>>>>>
29180>>>>>>>    Procedure Creating
29182>>>>>>>        DateTime dtCurrentDateTime
29182>>>>>>>        
29182>>>>>>>        Forward Send Creating
29184>>>>>>>        
29184>>>>>>>        //  Init usecounter
29184>>>>>>>        Move 0 to WebAppSession.UseCount
29185>>>>>>>        
29185>>>>>>>        //  Set the creation and access time to the current time
29185>>>>>>>        Move (CurrentDateTime()) to dtCurrentDateTime
29186>>>>>>>    
29186>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.CreateTime
29187>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.LastAccessTime
29188>>>>>>>        
29188>>>>>>>        Move dtCurrentDateTime to WebAppSession.CreateDate
29189>>>>>>>        Move dtCurrentDateTime to WebAppSession.LastAccessDate
29190>>>>>>>    End_Procedure
29191>>>>>>>    
29191>>>>>>>    
29191>>>>>>>    
29191>>>>>>>    //
29191>>>>>>>    //  Converts the given time to an string that can be saved in the database.
29191>>>>>>>    //
29191>>>>>>>    //  Params:
29191>>>>>>>    //      dtTime  Time to convert
29191>>>>>>>    //  Returns:
29191>>>>>>>    //      String with "HH:MM:SS" format
29191>>>>>>>    //
29191>>>>>>>    Function TimeToString DateTime dtTime Returns String
29193>>>>>>>        String sHours sMinutes sSeconds
29193>>>>>>>        
29193>>>>>>>        //  Extract parts
29193>>>>>>>        Move (String(DateGetHour(dtTime))) to sHours
29194>>>>>>>        Move (String(DateGetMinute(dtTime))) to sMinutes
29195>>>>>>>        Move (String(DateGetSecond(dtTime))) to sSeconds
29196>>>>>>>        
29196>>>>>>>        //  Fill out with 0
29196>>>>>>>        If (Length(sHours) = 1) Move ("0" + sHours) to sHours
29199>>>>>>>        If (Length(sMinutes) = 1) Move ("0" + sMinutes) to sMinutes
29202>>>>>>>        If (Length(sSeconds) = 1) Move ("0" + sSeconds) to sSeconds
29205>>>>>>>        
29205>>>>>>>        Function_Return (sHours + ":" + sMinutes + ":" + sSeconds)
29206>>>>>>>    End_Function
29207>>>>>>>    
29207>>>>>>>    //
29207>>>>>>>    //  Sets the time of the datetime variable to the time in the string.
29207>>>>>>>    //
29207>>>>>>>    //  Params:
29207>>>>>>>    //      dtTime  Datetime variable to add time to
29207>>>>>>>    //      sTimeString String with time in the format "HH:MM:SS"
29207>>>>>>>    //  Returns:
29207>>>>>>>    //      dtDateTime with the loaded time
29207>>>>>>>    //
29207>>>>>>>    Function StringToTime DateTime dtTime String sTimeString Returns DateTime
29209>>>>>>>        String sHours sMinutes sSeconds
29209>>>>>>>        
29209>>>>>>>        //  Extract parts
29209>>>>>>>        Move (Mid(sTimeString, 2, 1)) to sHours
29210>>>>>>>        Move (Mid(sTimeString, 2, 4)) to sMinutes
29211>>>>>>>        Move (Mid(sTimeString, 2, 7)) to sSeconds
29212>>>>>>>        
29212>>>>>>>        //  Set to DateTime
29212>>>>>>>        Move (DateSetHour(dtTime, (Integer(sHours)))) to dtTime
29213>>>>>>>        Move (DateSetMinute(dtTime, (Integer(sMinutes)))) to dtTime
29214>>>>>>>        Move (DateSetSecond(dtTime, (Integer(sSeconds)))) to dtTime
29215>>>>>>>        
29215>>>>>>>        Function_Return dtTime
29216>>>>>>>    End_Function
29217>>>>>>>
29217>>>>>>>End_Class
29218>>>>>Use cWebAppUserDataDictionary.dd
Including file: cWebAppUserDataDictionary.dd    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cWebAppUserDataDictionary.dd)
29218>>>>>>>Use DataDict.pkg
29218>>>>>>>Open WebAppUser
29220>>>>>>>Open WebAppSession
29222>>>>>>>
29222>>>>>>>Class cWebAppUserDataDictionary is a DataDictionary
29223>>>>>>>    
29223>>>>>>>    Procedure Construct_Object
29225>>>>>>>        Forward Send Construct_Object
29227>>>>>>>        Set Main_File to WebAppUser.File_Number
29228>>>>>>>
29228>>>>>>>        Set Add_Client_File to WebAppSession.File_Number
29229>>>>>>>
29229>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
29230>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
29231>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
29232>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
29233>>>>>>>    End_Procedure
29234>>>>>>>
29234>>>>>>>End_Class
29235>>>>>
29235>>>>>Class cWebSessionManagerStandard is a cWebSessionManager
29236>>>>>    
29236>>>>>    Procedure Construct_Object
29238>>>>>        Handle hoUserDD hoSessionDD
29238>>>>>        
29238>>>>>        Forward Send Construct_Object
29240>>>>>        
29240>>>>>        Property Handle phoUserDD 0      // Handle to the WebAppUser DDO
29241>>>>>        Property Handle phoSessionDD 0   // Handle to the WebAppSession DDO        
29242>>>>>        
29242>>>>>        Get Create (RefClass(cWebAppUserDataDictionary)) to hoUserDD
29243>>>>>        Get Create (RefClass(cWebAppSessionDataDictionary)) to hoSessionDD
29244>>>>>        Set DDO_Server of hoSessionDD to hoUserDD
29245>>>>>
29245>>>>>        Set phoUserDD to hoUserDD
29246>>>>>        Set phoSessionDD to hoSessionDD
29247>>>>>        Property Boolean pbCreatingNewSession False
29248>>>>>        Property Integer piSessionTimeout 480        
29249>>>>>        Property String psLoginName
29250>>>>>        Property String psUserName ""
29251>>>>>        Property Integer piUserRights 0
29252>>>>>    End_Procedure
29253>>>>>    
29253>>>>>    Function CreateSession String sRemoteAddress Returns String
29255>>>>>        String sSessionKey
29255>>>>>        Integer iErr
29255>>>>>        Boolean bLogWebSession
29255>>>>>        Handle hoSessionDD       
29255>>>>>        Get phoSessionDD to hoSessionDD
29256>>>>>        
29256>>>>>        //  Get session key
29256>>>>>        Forward Get CreateSession sRemoteAddress to sSessionKey
29258>>>>>        
29258>>>>>        Get pbLogWebSession to bLogWebSession
29259>>>>>        If not bLogWebSession Begin
29261>>>>>            Function_Return sSessionKey        
29262>>>>>        End
29262>>>>>>
29262>>>>>
29262>>>>>        //  Store session
29262>>>>>        Send Clear of hoSessionDD
29263>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.SessionKey to sSessionKey
29264>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.RemoteAddress to sRemoteAddress
29265>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "Y"
29266>>>>>        Get Request_Validate of hoSessionDD to iErr
29267>>>>>        If (iErr) Begin
29269>>>>>            // this should not happen. If it does its a programming error
29269>>>>>            Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
29270>>>>>>
29270>>>>>            Function_Return ""
29271>>>>>        End
29271>>>>>>
29271>>>>>        Send Request_Save of hoSessionDD
29272>>>>>       
29272>>>>>        Function_Return sSessionKey        
29273>>>>>    End_Function
29274>>>>>    
29274>>>>>    
29274>>>>>    Function ValidateSession String sSessionKey Returns Boolean
29276>>>>>        DateTime dtLastAccess dtCurrent
29276>>>>>        TimeSpan tsDiff
29276>>>>>        Integer iErr iSessionTimeout iSpanMinutes
29276>>>>>        Boolean bResult bCreatingNewSession
29276>>>>>        Boolean bLogWebSession 
29276>>>>>        Integer eLoginMode
29276>>>>>        String sTime
29276>>>>>        Handle hoSessionDD hoUserDD       
29276>>>>>        
29276>>>>>        Get phoSessionDD to hoSessionDD
29277>>>>>        Get phoUserDD to hoUserDD
29278>>>>>        
29278>>>>>        Get pbLogWebSession to bLogWebSession
29279>>>>>        Get peLoginMode to eLoginMode
29280>>>>>        
29280>>>>>        // for this object, you can only disable logging if login completely is disabled
29280>>>>>        If (not(bLogWebSession) and (eLoginMode<>lmLoginNone)) Begin
29282>>>>>            Error DFERR_PROGRAM C_$WebSessionLoggingMustBeEnabled
29283>>>>>>
29283>>>>>            Function_Return False
29284>>>>>        End
29284>>>>>>
29284>>>>>
29284>>>>>        //  Clear session properties
29284>>>>>        Send UpdateSessionProperties True
29285>>>>>        
29285>>>>>        If not bLogWebSession Begin
29287>>>>>            Forward Get ValidateSession sSessionKey to bResult
29289>>>>>            Function_Return bResult
29290>>>>>        End        
29290>>>>>>
29290>>>>>        
29290>>>>>        Move False to bResult
29291>>>>>        Get piSessionTimeout to iSessionTimeout 
29292>>>>>        
29292>>>>>        //  Check if session exists
29292>>>>>        Send Clear of hoSessionDD
29293>>>>>        Move sSessionKey to WebAppSession.SessionKey
29294>>>>>        Send Find of hoSessionDD EQ Index.1
29295>>>>>            
29295>>>>>        If (Found) Begin
29297>>>>>            //  Calculate timespan between now and last access time
29297>>>>>            Move (CurrentDateTime()) to dtCurrent
29298>>>>>            Move WebAppSession.LastAccessDate to dtLastAccess
29299>>>>>            Get StringToTime of hoSessionDD dtLastAccess WebAppSession.LastAccessTime to dtLastAccess
29300>>>>>            Move (dtCurrent - dtLastAccess) to tsDiff
29301>>>>>            Move (SpanTotalMinutes(tsDiff)) to iSpanMinutes
29302>>>>>            
29302>>>>>            //  Check if session didn't time out
29302>>>>>            If ((iSessionTimeout <= 0 or (iSpanMinutes < iSessionTimeout)) and WebAppSession.Active = "Y") Begin
29304>>>>>                Forward Get ValidateSession sSessionKey to bResult
29306>>>>>                   
29306>>>>>                If (bResult) Begin
29308>>>>>                    //  Update session record
29308>>>>>                    Get TimeToString of hoSessionDD dtCurrent to sTime 
29309>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessDate to dtCurrent
29310>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessTime to sTime
29311>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.UseCount to (WebAppSession.UseCount + 1)
29312>>>>>                    Get Request_Validate of hoSessionDD to iErr
29313>>>>>                    If (iErr) Begin
29315>>>>>                        // this should not happen. If it does its a programming error
29315>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
29316>>>>>>
29316>>>>>                        Function_Return False
29317>>>>>                    End
29317>>>>>>
29317>>>>>                    Send Request_Save of hoSessionDD
29318>>>>>                    
29318>>>>>                    //  Update user properties
29318>>>>>                    Send UpdateSessionProperties False
29319>>>>>                End
29319>>>>>>
29319>>>>>            End
29319>>>>>>
29319>>>>>            Else Begin
29320>>>>>                // Test the Creating New Session Flag to protect against infinite recursion....
29320>>>>>                Get pbCreatingNewSession to bCreatingNewSession
29321>>>>>                
29321>>>>>                If (not(bCreatingNewSession)) Begin
29323>>>>>                    Set pbCreatingNewSession to True                    
29324>>>>>                    Send RecreateSession to ghoWebApp
29325>>>>>                    Error DFERR_WEBAPP_SESSION_TIMEOUT "Your application session has timed out or is inactive, please login again."
29326>>>>>>
29326>>>>>                    Send NavigateRefresh of ghoWebApp          // refresh the WebApp at the client (triggers a login)
29327>>>>>                    Set pbCreatingNewSession to False
29328>>>>>                End
29328>>>>>>
29328>>>>>            End
29328>>>>>>
29328>>>>>        End
29328>>>>>>
29328>>>>>        Else Begin
29329>>>>>            Error DFERR_WEBAPP_BAD_SESSION_KEY "Session key not known (reload page to recreate session)"
29330>>>>>>
29330>>>>>        End
29330>>>>>>
29330>>>>>        
29330>>>>>        Function_Return bResult
29331>>>>>    End_Function
29332>>>>>    
29332>>>>>    Function UserLogin String sLoginName String sPassword Returns Boolean
29334>>>>>        String sSessionKey sUserPassword
29334>>>>>        Handle hoSessionDD hoUserDD
29334>>>>>        Boolean bMatch  
29334>>>>>        
29334>>>>>        Get phoSessionDD to hoSessionDD
29335>>>>>        Get phoUserDD to hoUserDD
29336>>>>>        Integer iErr eLoginMode
29336>>>>>        
29336>>>>>        // Refind session record
29336>>>>>        Get psSessionKey to sSessionKey
29337>>>>>        Send Clear of hoSessionDD
29338>>>>>        Move sSessionKey to WebAppSession.SessionKey
29339>>>>>        Send Find of hoSessionDD EQ Index.1
29340>>>>>        
29340>>>>>        If (Found and WebAppSession.SessionKey = sSessionKey) Begin
29342>>>>>            Get peLoginMode to eLoginMode
29343>>>>>            
29343>>>>>            //  Find the user
29343>>>>>            Move sLoginName to WebAppUser.LoginName
29344>>>>>            Send Find of hoUserDD EQ Index.1
29345>>>>>            
29345>>>>>            // Check username and password
29345>>>>>            If (Found and (Lowercase(sLoginName) = Lowercase(Trim(WebAppUser.LoginName)))) Begin
29347>>>>>                Get Field_Current_Value of hoUserDD Field WebAppUser.Password to sUserPassword
29348>>>>>                Get ComparePasswords (Trim(sUserPassword)) (Trim(sPassword)) to bMatch
29349>>>>>                
29349>>>>>                If (bMatch) Begin
29351>>>>>                    // Store the login
29351>>>>>                    Set Field_Changed_Value of hoUserDD Field WebAppUser.LastLogin to (CurrentDateTime())
29352>>>>>                    Get Request_Validate of hoSessionDD to iErr
29353>>>>>                    If (iErr) Begin
29355>>>>>                        // this should not happen. If it does its a programming error
29355>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
29356>>>>>>
29356>>>>>                        Function_Return False
29357>>>>>                    End
29357>>>>>>
29357>>>>>                    
29357>>>>>                    Send Request_Save of hoSessionDD
29358>>>>>                    
29358>>>>>                    // Update session properties
29358>>>>>                    Send UpdateSessionProperties False
29359>>>>>                    Send NotifyChangeRights
29360>>>>>                    Function_Return True
29361>>>>>                End
29361>>>>>>
29361>>>>>                Else Begin
29362>>>>>                    //  We should rely directly on this buffer elsewhere but just be sure
29362>>>>>                    Send Clear of hoUserDD
29363>>>>>                End
29363>>>>>>
29363>>>>>            End
29363>>>>>>
29363>>>>>        End
29363>>>>>>
29363>>>>>          
29363>>>>>        Function_Return False
29364>>>>>    End_Function
29365>>>>>    
29365>>>>>    Function IsLoggedIn Returns Boolean
29367>>>>>        String sLoginName
29367>>>>>        Boolean bLogWebSession bLoggedIn
29367>>>>>        
29367>>>>>        Get pbLogWebSession to bLogWebSession
29368>>>>>        If not bLogWebSession Begin
29370>>>>>            Forward Get IsLoggedIn to bLoggedIn
29372>>>>>            Function_Return bLoggedIn
29373>>>>>        End
29373>>>>>>
29373>>>>>        
29373>>>>>        Get psLoginName to sLoginName
29374>>>>>        
29374>>>>>        Function_Return (sLoginName <> "")
29375>>>>>    End_Function
29376>>>>>    
29376>>>>>    
29376>>>>>    //
29376>>>>>    // This procedure is called when validating a session and after logging in. Its purpose is to 
29376>>>>>    // update properties based on the session and user data. Augment this function to update 
29376>>>>>    // properties based on the session / user table. Note that WebAppUser and WebAppSession contain
29376>>>>>    // the right records when this procedure is called.
29376>>>>>    //
29376>>>>>    // Params:
29376>>>>>    //      bClear   True if the procedure is called before session validation to clear properties.
29376>>>>>    //
29376>>>>>    Procedure UpdateSessionProperties Boolean bClear
29378>>>>>        Handle hoUserDD
29378>>>>>        
29378>>>>>        Get phoUserDD to hoUserDD
29379>>>>>        
29379>>>>>        //  Update user properties
29379>>>>>        If (not(bClear) and HasRecord(hoUserDD)) Begin
29381>>>>>            Set psUsername to (Trim(WebAppUser.FullName))
29382>>>>>            Set psLoginName to (Trim(WebAppUser.LoginName))
29383>>>>>            Set piUserRights to WebAppUser.Rights
29384>>>>>            
29384>>>>>            Send OnSessionPropertiesSet 
29385>>>>>        End
29385>>>>>>
29385>>>>>        Else Begin
29386>>>>>            Set psUsername to ""
29387>>>>>            Set psLoginName to ""
29388>>>>>            Set piUserRights to 0
29389>>>>>            
29389>>>>>            Send OnSessionPropertiesClear
29390>>>>>        End
29390>>>>>>
29390>>>>>    End_Procedure
29391>>>>>    
29391>>>>>    //
29391>>>>>    // This function is called to perform the password comparison. It gets the entered password and
29391>>>>>    // the password value of the user table as parameters. The WebAppUser buffer will contain the
29391>>>>>    // right record. This function can be augmented to implement security features like storing the
29391>>>>>    // password as a hashed value.
29391>>>>>    //
29391>>>>>    // Params:
29391>>>>>    //      sUserPassword       Value of the WebAppUser.Password field.
29391>>>>>    //      sEnteredPassword    Value entered on the login screen during login.
29391>>>>>    //
29391>>>>>    Function ComparePasswords String sUserPassword String sEnteredPassword Returns Boolean
29393>>>>>        Function_Return (sUserPassword = sEnteredPassword)
29394>>>>>    End_Function
29395>>>>>    
29395>>>>>    Procedure OnSessionPropertiesSet
29397>>>>>        //  Empty event stub
29397>>>>>    End_Procedure
29398>>>>>    
29398>>>>>    Procedure OnSessionPropertiesClear
29400>>>>>        //  Empty event stub
29400>>>>>    End_Procedure
29401>>>>>    
29401>>>>>    Procedure EndSession
29403>>>>>        Integer iErr
29403>>>>>        Boolean bLogWebSession
29403>>>>>        Handle hoSessionDD       
29403>>>>>        
29403>>>>>        Get phoSessionDD to hoSessionDD
29404>>>>>        Get pbLogWebSession to bLogWebSession
29405>>>>>        If not bLogWebSession Begin
29407>>>>>            Forward Send EndSession
29409>>>>>            Procedure_Return
29410>>>>>        End
29410>>>>>>
29410>>>>>            
29410>>>>>        //  Check if session exists
29410>>>>>        Send Clear of hoSessionDD
29411>>>>>        Get psSessionKey to WebAppSession.SessionKey
29412>>>>>        
29412>>>>>        Send Find of hoSessionDD EQ Index.1
29413>>>>>        If (Found) Begin
29415>>>>>            Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "N"
29416>>>>>            Get Request_Validate of hoSessionDD to iErr
29417>>>>>            If (iErr) Begin
29419>>>>>                // this should not happen. If it does its a programming error
29419>>>>>                Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
29420>>>>>>
29420>>>>>                Procedure_Return
29421>>>>>            End
29421>>>>>>
29421>>>>>            Send Request_Save of hoSessionDD
29422>>>>>        End
29422>>>>>>
29422>>>>>    End_Procedure
29423>>>>>
29423>>>>>End_Class
29424>>>>>
29424>>>
29424>>>Object oSessionManager is a cWebSessionManagerStandard
29426>>>End_Object
29427>>>
29427>    Use WebResourceManager.wo
Including file: WebResourceManager.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\WebResourceManager.wo)
29427>>>Use cWebResourceManager.pkg
29427>>>
29427>>>Object oWebResourceManager is a cWebResourceManager
29429>>>End_Object
29430>    Use LoginDialog.wo
Including file: LoginDialog.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\LoginDialog.wo)
29430>>>Use cWebModalDialog.pkg
29430>>>Use cWebForm.pkg
29430>>>Use cWebButton.pkg
29430>>>Use cWebPanel.pkg
29430>>>Use cWebLabel.pkg
29430>>>
29430>>>Object oLoginDialog is a cWebModalDialog
29432>>>    Set piMinWidth to 360
29433>>>    Set piMinHeight to 200
29434>>>    Set psCaption to "Login"
29435>>>    Set pbShowClose to (peLoginMode(oWebApp) <> lmLoginRequired)
29436>>>    Set pbLoginModeEnforced to False
29437>>>    
29437>>>    Delegate Set phoLoginView to Self
29439>>>    
29439>>>    Object oTopPanel is a cWebPanel
29441>>>        Set peRegion to prTop
29442>>>        Set piHeight to 65
29443>>>        
29443>>>        Object oLogoSuperior is a cWebImage
29445>>>            Set psUrl to "CssThemes/Df_Web_DataAccess/logo-02.png"
29446>>>            Set piHeight to 75
29447>>>            Set pePosition to wiFit
29448>>>            Set pbFillHeight to True
29449>>>        End_Object
29450>>>        
29450>>>        Object oDescription is a cWebLabel
29452>>>            Set psCaption to "Login: John Password: John"
29453>>>            Set peAlign to alignCenter
29454>>>        End_Object
29455>>>    End_Object
29456>>>    
29456>>>    //Object oRightPanel is a cWebPanel
29456>>>    //    Set peRegion to prRight
29456>>>    //    Set piWidth to 20
29456>>>    //End_Object
29456>>>    
29456>>>    Object oMainPanel is a cWebPanel
29458>>>        Set peRegion to prCenter
29459>>>        
29459>>>        Object oLoginName is a cWebForm
29461>>>            Set psLabel to "User ID:"
29462>>>            Set piMaxLength to 20
29463>>>            Set psCSSClass to "login-user"
29464>>>            Set pbShowLabel to False
29465>>>        End_Object
29466>>>        
29466>>>        Object oPassword is a cWebForm
29468>>>            Set psLabel to "Password:"
29469>>>            Set pbPassword to True
29470>>>            Set piMaxLength to 20
29471>>>            Set psCSSClass to "login-pass"
29472>>>            Set pbShowLabel to False
29473>>>        End_Object
29474>>>        
29474>>>        Object oLoginButton is a cWebButton
29476>>>            Set pbShowLabel to False
29477>>>            Set psCaption to "Login"
29478>>>            Set pbServerOnClick to True
29479>>>            Set peLabelAlign to alignCenter
29480>>>                        
29480>>>            Procedure OnClick
29483>>>                Send DoLogin
29484>>>            End_Procedure            
29485>>>        End_Object        
29486>>>    End_Object
29487>>>    
29487>>>    Object oButtonPanel is a cWebPanel
29489>>>        Set peRegion to prBottom
29490>>>        Set piColumnCount to 3
29491>>>        
29491>>>        Object oWarning is a cWebLabel
29493>>>            Set pbVisible to False
29494>>>            Set psCaption to "Invalid User ID or password. Hint: 'John' & 'John'."
29495>>>            Set psCSSClass to "Warning"
29496>>>            Set peAlign to alignCenter
29497>>>            Set piColumnSpan to 3
29498>>>        End_Object
29499>>>    End_Object
29500>>>    
29500>>>    Procedure DoLogin
29503>>>        String sLoginName sPassword
29503>>>        Boolean bResult
29503>>>        Handle hoDefaultView
29503>>>        
29503>>>        WebGet psValue of oLoginName to sLoginName
29504>>>        WebGet psValue of oPassword to sPassword
29505>>>        
29505>>>        Get UserLogin of ghoWebSessionManager sLoginName sPassword to bResult
29506>>>        
29506>>>        If (bResult) Begin
29508>>>            Send Hide of oLoginDialog
29509>>>            Get GetDefaultView to hoDefaultView
29510>>>            If (hoDefaultView > 0) Begin
29512>>>                Send Show of hoDefaultView
29513>>>            End
29513>>>>
29513>>>            
29513>>>            // clear the login values. we don't want to return the login id & password as synchronized properties....
29513>>>            WebSet psValue of oLoginName to ""
29514>>>            WebSet psValue of oPassword  to ""
29515>>>            WebSet pbVisible of oWarning to False
29516>>>        End
29516>>>>
29516>>>        Else Begin
29517>>>            WebSet pbVisible of oWarning to True
29518>>>        End
29518>>>>
29518>>>    End_Procedure
29519>>>    
29519>>>    
29519>>>    Set pbServerOnSubmit to True
29520>>>    Procedure OnSubmit
29523>>>         Send DoLogin
29524>>>    End_Procedure
29525>>>End_Object
29526>>>
29526>>>
29526>    
29526>    Use Order.wo
Including file: Order.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\Order.wo)
29526>>>// Order Entry
29526>>>//
29526>>>
29526>>>Use cWebView.pkg
29526>>>Use cWebPanel.pkg
29526>>>Use cWebForm.pkg
29526>>>Use cWebCombo.pkg
29526>>>Use cWebGrid.pkg
29526>>>Use cWebColumn.pkg
29526>>>Use cWebDateForm.pkg
29526>>>
29526>>>Use Vendor.DD
Including file: Vendor.dd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Vendor.dd)
29526>>>>>Use  Windows.pkg           // Basic Definitions
29526>>>>>Use  DataDict.pkg          // DataDictionary Class Definition
29526>>>>>Use  DDvalTbl.pkg          // Validation Table Class Definitions
29526>>>>>
29526>>>>>Open Vendor
Including file: Vendor.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Vendor.fd)
29528>>>>>Open Invt
Including file: Invt.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Invt.fd)
29530>>>>>Open OrdSys
Including file: OrdSys.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\OrdSys.fd)
29532>>>>>
29532>>>>>
29532>>>>>Register_Object Vendor_State_VT
29532>>>>>
29532>>>>>Object Vendor_State_VT  is a CodeValidationTable
29534>>>>>    Set Type_Value        To "STATES"
29535>>>>>End_Object   // Vendor_State_VT
29536>>>>>Register_Object Vendor_sl
29536>>>>>Register_Object oVendorWebLookup
29536>>>>>
29536>>>>>Class Vendor_DataDictionary Is A DataDictionary
29537>>>>>
29537>>>>>    Procedure Construct_Object
29539>>>>>        Forward Send Construct_Object
29541>>>>>
29541>>>>>        Set Main_File To Vendor.File_Number
29542>>>>>        Set Cascade_Delete_State To False
29543>>>>>
29543>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
29544>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
29545>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
29546>>>>>
29546>>>>>        Set Add_Client_File to Invt.File_Number
29547>>>>>
29547>>>>>        Set Add_System_File to Ordsys.File_Number DD_LOCK_ON_NEW_SAVE
29548>>>>>
29548>>>>>        Set Field_Auto_Increment Field Vendor.Id to File_Field Ordsys.Vendor_Number
29549>>>>>
29549>>>>>
29549>>>>>        Set Field_Label_Long Field Vendor.ID To "Vendor ID"
29550>>>>>        Set Field_Label_Short Field Vendor.ID To "Vndr ID"
29551>>>>>        Set Field_Option Field Vendor.ID DD_AUTOFIND to True
29552>>>>>        Set Field_Option Field Vendor.ID DD_NOPUT to True
29553>>>>>        Set Field_Prompt_Object Field Vendor.ID to Vendor_sl
29554>>>>>        Set Key_Field_State Field Vendor.ID To True
29555>>>>>        Set Status_Help Field Vendor.ID To "Vendor Id Number (system assigned)."
29556>>>>>        Set Field_WebPrompt_Object Field Vendor.ID to oVendorWebLookup
29557>>>>>
29557>>>>>        Set Field_Label_Long Field Vendor.Name To "Vendor Name"
29558>>>>>        Set Field_Label_Short Field Vendor.Name To "Name"
29559>>>>>        Set Field_Option Field Vendor.Name DD_REQUIRED to True
29560>>>>>        Set Field_Prompt_Object Field Vendor.Name to Vendor_sl
29561>>>>>        Set Status_Help Field Vendor.Name To "Vendor Name."
29562>>>>>        Set Field_WebPrompt_Object Field Vendor.Name to oVendorWebLookup
29563>>>>>
29563>>>>>        Set Field_Label_Long Field Vendor.Address To "Street Address"
29564>>>>>        Set Field_Label_Short Field Vendor.Address To "Address"
29565>>>>>        Set Status_Help Field Vendor.Address To "Street Address."
29566>>>>>
29566>>>>>        Set Status_Help Field Vendor.City To "City Name."
29567>>>>>
29567>>>>>        Set Field_Class_Name Field Vendor.State To "dbComboForm"
29568>>>>>        Set Field_Label_Long Field Vendor.State To "State"
29569>>>>>        Set Field_Label_Short Field Vendor.State To "St."
29570>>>>>        Set Field_Option Field Vendor.State DD_CAPSLOCK to True
29571>>>>>        Set Field_Value_Table Field Vendor.State to Vendor_State_VT
29572>>>>>        Set Status_Help Field Vendor.State To "Two letter state ID."
29573>>>>>
29573>>>>>        Set Field_Label_Long Field Vendor.Zip To "Zip/Postal Code"
29574>>>>>        Set Field_Label_Short Field Vendor.Zip To "Zip"
29575>>>>>        Set Field_Mask Field Vendor.Zip To "#####-####"
29576>>>>>        Set Field_Mask_Type Field Vendor.Zip To MASK_WINDOW
29577>>>>>        Set Status_Help Field Vendor.Zip To "Zip or Postal Code."
29578>>>>>
29578>>>>>        Set Field_Label_Long Field Vendor.Phone_Number To "Phone Number"
29579>>>>>        Set Field_Label_Short Field Vendor.Phone_Number To "Phone"
29580>>>>>        Set Status_Help Field Vendor.Phone_Number To "Phone Number."
29581>>>>>
29581>>>>>        Set Field_Label_Long Field Vendor.Fax_Number To "Fax Number"
29582>>>>>        Set Field_Label_Short Field Vendor.Fax_Number To "Fax"
29583>>>>>        Set Status_Help Field Vendor.Fax_Number To "Fax Phone Number."
29584>>>>>
29584>>>>>
29584>>>>>    End_Procedure  //  Construct_Object
29585>>>>>
29585>>>>>
29585>>>>>
29585>>>>>    Procedure Field_Defaults
29587>>>>>        Forward Send Field_Defaults
29589>>>>>    End_Procedure    // Field_Defaults
29590>>>>>    
29590>>>>>End_Class    //  Vendor_DataDictionary
29591>>>>>Use VendorWebLookup.wo
Including file: VendorWebLookup.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\VendorWebLookup.wo)
29591>>>>>>>// Vendor Lookup List
29591>>>>>>>//
29591>>>>>>>
29591>>>>>>>Use cWebModalDialog
29591>>>>>>>Use cWebPanel.pkg
29591>>>>>>>Use cWebButton.pkg
29591>>>>>>>Use cWebPromptList.pkg
29591>>>>>>>Use cWebColumn.pkg
29591>>>>>>>
29591>>>>>>>Use Vendor.DD
29591>>>>>>>
29591>>>>>>>Object oVendorWebLookup is a cWebModalDialog
29593>>>>>>>    Set piColumnCount to 8
29594>>>>>>>    Set psCaption to "Vendor Lookup List"
29595>>>>>>>    Set piWidth to 700
29596>>>>>>>    Set piHeight to 400
29597>>>>>>>
29597>>>>>>>    Object oVendor_DD is a Vendor_DataDictionary
29599>>>>>>>    End_Object 
29600>>>>>>>
29600>>>>>>>    Set Main_DD To oVendor_DD
29601>>>>>>>    Set Server  To oVendor_DD
29602>>>>>>>
29602>>>>>>>
29602>>>>>>>    Object oWebMainPanel is a cWebPanel
29604>>>>>>>        Set piColumnCount to 8
29605>>>>>>>
29605>>>>>>>        Object oPromptList is a cWebPromptList
29607>>>>>>>            Set pbFillHeight to True
29608>>>>>>>            Set piColumnSpan to 8
29609>>>>>>>            
29609>>>>>>>            // Since there are only a few records, we set this property so all records are sent to 
29609>>>>>>>            // the client at once. This improves the performance of scrolling and searching and 
29609>>>>>>>            // enables sorting on all columns.
29609>>>>>>>            Set peDbGridType to gtAllData
29610>>>>>>>
29610>>>>>>>            Object oVendorID is a cWebColumn
29612>>>>>>>                Entry_Item Vendor.ID
29613>>>>>>>                Set psCaption to "Vndr ID"
29614>>>>>>>                Set piWidth to 63
29615>>>>>>>            End_Object 
29616>>>>>>>
29616>>>>>>>            Object oVendorName is a cWebColumn
29618>>>>>>>                Entry_Item Vendor.Name
29619>>>>>>>                Set psCaption to "Name"
29620>>>>>>>                Set piWidth to 315
29621>>>>>>>            End_Object 
29622>>>>>>>
29622>>>>>>>            Object oVendorCity is a cWebColumn
29624>>>>>>>                Entry_Item Vendor.City
29625>>>>>>>                Set psCaption to "City"
29626>>>>>>>                Set piWidth to 147
29627>>>>>>>            End_Object 
29628>>>>>>>        End_Object 
29629>>>>>>>
29629>>>>>>>        Object oOkButton is a cWebButton
29631>>>>>>>            Set psCaption to "OK"
29632>>>>>>>            Set piColumnSpan to 1
29633>>>>>>>            Set piColumnIndex to 5
29634>>>>>>>
29634>>>>>>>            Procedure OnClick
29637>>>>>>>                Send Ok of oPromptList
29638>>>>>>>            End_Procedure
29639>>>>>>>
29639>>>>>>>        End_Object 
29640>>>>>>>
29640>>>>>>>        Object oCancelButton is a cWebButton
29642>>>>>>>            Set psCaption to "Cancel"
29643>>>>>>>            Set piColumnSpan to 1
29644>>>>>>>            Set piColumnIndex to 6
29645>>>>>>>            Procedure OnClick
29648>>>>>>>                Send Cancel of oPromptList
29649>>>>>>>            End_Procedure
29650>>>>>>>
29650>>>>>>>        End_Object 
29651>>>>>>>
29651>>>>>>>        Object oSearchButton is a cWebButton
29653>>>>>>>            Set psCaption to "Search..."
29654>>>>>>>            Set piColumnSpan to 1
29655>>>>>>>            Set piColumnIndex to 7
29656>>>>>>>
29656>>>>>>>            Procedure OnClick
29659>>>>>>>                Send Search of oPromptList
29660>>>>>>>            End_Procedure
29661>>>>>>>
29661>>>>>>>        End_Object 
29662>>>>>>>    End_Object 
29663>>>>>>>
29663>>>>>>>    Set pbServerOnShow to True
29664>>>>>>>    Procedure OnShow 
29667>>>>>>>        Send InitializePromptList of oPromptList
29668>>>>>>>    End_Procedure 
29669>>>>>>>
29669>>>>>>>    Set pbServerOnSubmit to True
29670>>>>>>>    Procedure OnSubmit 
29673>>>>>>>        Send Ok of oPromptList
29674>>>>>>>    End_Procedure 
29675>>>>>>>
29675>>>>>>>End_Object 
29676>>>>>
29676>>>Use Invt.DD
Including file: Invt.dd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Invt.dd)
29676>>>>>Use  Windows.pkg           // Basic Definitions
29676>>>>>Use  DataDict.pkg          // DataDictionary Class Definition
29676>>>>>Use  DDvalTbl.pkg          // Validation Table Class Definitions
29676>>>>>
29676>>>>>Open Invt
29678>>>>>Open OrderDtl
Including file: OrderDtl.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\OrderDtl.fd)
29680>>>>>Open Vendor
29682>>>>>
29682>>>>>Register_Object Invt_sl
29682>>>>>Register_Object oInvtWebLookup
29682>>>>>
29682>>>>>Class Invt_DataDictionary Is A DataDictionary
29683>>>>>
29683>>>>>    Procedure Construct_Object
29685>>>>>        Forward Send Construct_Object
29687>>>>>
29687>>>>>        Set Main_File To Invt.File_Number
29688>>>>>        Set Cascade_Delete_State To False
29689>>>>>
29689>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
29690>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
29691>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
29692>>>>>
29692>>>>>        Set Add_Client_File to OrderDtl.File_Number
29693>>>>>
29693>>>>>        Set Add_Server_File to Vendor.File_Number
29694>>>>>
29694>>>>>
29694>>>>>        Set Field_Label_Long Field Invt.Item_ID To "Invt. Item ID"
29695>>>>>        Set Field_Label_Short Field Invt.Item_ID To "Item ID"
29696>>>>>        Set Field_Option Field Invt.Item_ID DD_AUTOFIND to True
29697>>>>>        Set Field_Option Field Invt.Item_ID DD_REQUIRED to True
29698>>>>>        Set Field_Option Field Invt.Item_ID DD_CAPSLOCK to True
29699>>>>>        Set Field_Prompt_Object Field Invt.Item_ID to Invt_sl
29700>>>>>        Set Field_WebPrompt_Object Field Invt.Item_ID to oInvtWebLookup
29701>>>>>        Set Key_Field_State Field Invt.Item_ID to True
29702>>>>>        Set Status_Help Field Invt.Item_ID To "Inventory Item Id - user defined identification"
29703>>>>>
29703>>>>>        Set Field_Label_Long Field Invt.Description To "Invt. Description"
29704>>>>>        Set Field_Label_Short Field Invt.Description To "Description"
29705>>>>>        Set Field_Option Field Invt.Description DD_REQUIRED to True
29706>>>>>        Set Status_Help Field Invt.Description To "Inventory Part Description"
29707>>>>>
29707>>>>>        Set Field_Option Field Invt.Vendor_ID DD_CAPSLOCK to True
29708>>>>>        Set Status_Help Field Invt.Vendor_ID To "Vendor Number"
29709>>>>>
29709>>>>>        Set Field_Option Field Invt.Vendor_Part_ID DD_REQUIRED to True
29710>>>>>        Set Status_Help Field Invt.Vendor_Part_ID To "Vendor ID name for this item"
29711>>>>>
29711>>>>>        Set Field_Mask_Type Field Invt.Unit_Price To MASK_CURRENCY_WINDOW
29712>>>>>        Set Field_Value_Range Field Invt.Unit_Price To 0 999999.99
29713>>>>>        Set Status_Help Field Invt.Unit_Price To "Retail unit price"
29714>>>>>
29714>>>>>        Set Field_Value_Range Field Invt.On_Hand To -999999 999999
29715>>>>>        Set Status_Help Field Invt.On_Hand To "Units currently available"
29716>>>>>
29716>>>>>    End_Procedure  //  Construct_Object
29717>>>>>  
29717>>>>>    Function Validate_Save Returns Integer
29719>>>>>        Integer iRetVal
29719>>>>>    
29719>>>>>        Forward Get Validate_Save to iRetVal
29721>>>>>        
29721>>>>>        If iRetVal Function_Return iRetVal
29724>>>>>    
29724>>>>>        If Invt.On_Hand Lt 0 Begin
29726>>>>>           Send UserError "Insufficient Inventory Stock" ""
29727>>>>>           Function_Return 1
29728>>>>>        End   
29728>>>>>>
29728>>>>>    End_Function  // Validate_Save
29729>>>>>
29729>>>>>
29729>>>>>    Procedure Field_Defaults
29731>>>>>        Forward Send Field_Defaults
29733>>>>>    End_Procedure    // Field_Defaults
29734>>>>>    
29734>>>>>End_Class    //  Invt_DataDictionary
29735>>>>>Use InvtWebLookup.wo
Including file: InvtWebLookup.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\InvtWebLookup.wo)
29735>>>>>>>// Invt Lookup List
29735>>>>>>>//
29735>>>>>>>
29735>>>>>>>Use cWebModalDialog
29735>>>>>>>Use cWebPanel.pkg
29735>>>>>>>Use cWebButton.pkg
29735>>>>>>>Use cWebPromptList.pkg
29735>>>>>>>Use cWebColumn.pkg
29735>>>>>>>
29735>>>>>>>Use Vendor.DD
29735>>>>>>>Use Invt.DD
29735>>>>>>>
29735>>>>>>>Object oInvtWebLookup is a cWebModalDialog
29737>>>>>>>    Set piColumnCount to 7
29738>>>>>>>    Set psCaption to "Invt Lookup List"
29739>>>>>>>    Set piWidth to 700
29740>>>>>>>    Set piHeight to 400
29741>>>>>>>
29741>>>>>>>    Object oVendor_DD is a Vendor_DataDictionary
29743>>>>>>>    End_Object 
29744>>>>>>>
29744>>>>>>>    Object oInvt_DD is a Invt_DataDictionary
29746>>>>>>>        Set DDO_Server To oVendor_DD
29747>>>>>>>    End_Object 
29748>>>>>>>
29748>>>>>>>    Set Main_DD To oInvt_DD
29749>>>>>>>    Set Server  To oInvt_DD
29750>>>>>>>
29750>>>>>>>
29750>>>>>>>    Object oWebMainPanel is a cWebPanel
29752>>>>>>>        Set piColumnCount to 7
29753>>>>>>>
29753>>>>>>>        Object oPromptList is a cWebPromptList
29755>>>>>>>            Set pbFillHeight to True
29756>>>>>>>            Set piColumnSpan to 7
29757>>>>>>>            
29757>>>>>>>            // Since there are only a few records, we set this property so all records are sent to 
29757>>>>>>>            // the client at once. This improves the performance of scrolling and searching and 
29757>>>>>>>            // enables sorting on all columns.
29757>>>>>>>            Set peDbGridType to gtAllData
29758>>>>>>>
29758>>>>>>>            Object oInvtItem_ID is a cWebColumn
29760>>>>>>>                Entry_Item Invt.Item_ID
29761>>>>>>>                Set psCaption to "Item ID"
29762>>>>>>>                Set piWidth to 147
29763>>>>>>>            End_Object 
29764>>>>>>>
29764>>>>>>>            Object oInvtDescription is a cWebColumn
29766>>>>>>>                Entry_Item Invt.Description
29767>>>>>>>                Set psCaption to "Description"
29768>>>>>>>                Set piWidth to 337
29769>>>>>>>            End_Object 
29770>>>>>>>
29770>>>>>>>            Object oInvtUnit_Price is a cWebColumn
29772>>>>>>>                Entry_Item Invt.Unit_Price
29773>>>>>>>                Set psCaption to "Unit Price"
29774>>>>>>>                Set piWidth to 94
29775>>>>>>>            End_Object 
29776>>>>>>>
29776>>>>>>>            Object oInvtOn_Hand is a cWebColumn
29778>>>>>>>                Entry_Item Invt.On_Hand
29779>>>>>>>                Set psCaption to "On Hand"
29780>>>>>>>                Set piWidth to 94
29781>>>>>>>            End_Object 
29782>>>>>>>        End_Object 
29783>>>>>>>
29783>>>>>>>        Object oOkButton is a cWebButton
29785>>>>>>>            Set psCaption to "OK"
29786>>>>>>>            Set piColumnSpan to 1
29787>>>>>>>            Set piColumnIndex to 4
29788>>>>>>>
29788>>>>>>>            Procedure OnClick
29791>>>>>>>                Send Ok of oPromptList
29792>>>>>>>            End_Procedure
29793>>>>>>>
29793>>>>>>>        End_Object 
29794>>>>>>>
29794>>>>>>>        Object oCancelButton is a cWebButton
29796>>>>>>>            Set psCaption to "Cancel"
29797>>>>>>>            Set piColumnSpan to 1
29798>>>>>>>            Set piColumnIndex to 5
29799>>>>>>>            Procedure OnClick
29802>>>>>>>                Send Cancel of oPromptList
29803>>>>>>>            End_Procedure
29804>>>>>>>
29804>>>>>>>        End_Object 
29805>>>>>>>
29805>>>>>>>        Object oSearchButton is a cWebButton
29807>>>>>>>            Set psCaption to "Search..."
29808>>>>>>>            Set piColumnSpan to 1
29809>>>>>>>            Set piColumnIndex to 6
29810>>>>>>>
29810>>>>>>>            Procedure OnClick
29813>>>>>>>                Send Search of oPromptList
29814>>>>>>>            End_Procedure
29815>>>>>>>
29815>>>>>>>        End_Object 
29816>>>>>>>    End_Object 
29817>>>>>>>
29817>>>>>>>    Set pbServerOnShow to True
29818>>>>>>>    Procedure OnShow 
29821>>>>>>>        Send InitializePromptList of oPromptList
29822>>>>>>>    End_Procedure 
29823>>>>>>>
29823>>>>>>>    Set pbServerOnSubmit to True
29824>>>>>>>    Procedure OnSubmit 
29827>>>>>>>        Send Ok of oPromptList
29828>>>>>>>    End_Procedure 
29829>>>>>>>
29829>>>>>>>End_Object 
29830>>>>>
29830>>>>>
29830>>>Use Customer.DD
Including file: Customer.dd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Customer.dd)
29830>>>>>Use Windows.pkg           // Basic Definitions
29830>>>>>Use DataDict.pkg          // DataDictionary Class Definition
29830>>>>>Use DDvalTbl.pkg          // Validation Table Class Definitions
29830>>>>>
29830>>>>>Open Customer
Including file: Customer.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Customer.fd)
29832>>>>>Open OrderHea
Including file: OrderHea.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\OrderHea.fd)
29834>>>>>Open Ordsys
29836>>>>>
29836>>>>>
29836>>>>>Register_Object Customer_State_VT
29836>>>>>
29836>>>>>Object Customer_State_VT  is a CodeValidationTable
29838>>>>>    Set Type_Value        To "STATES"
29839>>>>>    Set Table_Title       To "States"
29840>>>>>End_Object   // Customer_State_VT
29841>>>>>
29841>>>>>Register_Function ValidateEmail Integer iColumn String sValue Returns Boolean
29841>>>>>
29841>>>>>Register_Object Customer_sl
29841>>>>>Register_Object oCustomerWebLookup
29841>>>>>
29841>>>>>Class Customer_DataDictionary Is A DataDictionary
29842>>>>>
29842>>>>>    Procedure Construct_Object
29844>>>>>        Forward Send Construct_Object
29846>>>>>
29846>>>>>        Set Main_File To Customer.File_Number
29847>>>>>        Set Cascade_Delete_State To False
29848>>>>>
29848>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
29849>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
29850>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
29851>>>>>
29851>>>>>        Set Add_Client_File to OrderHea.File_Number
29852>>>>>
29852>>>>>        Set Add_System_File to Ordsys.File_Number DD_LOCK_ON_NEW_SAVE
29853>>>>>
29853>>>>>        Set Field_Auto_Increment Field Customer.Customer_Number to File_Field Ordsys.Cust_Number
29854>>>>>        Set Field_Label_Long Field Customer.Customer_Number To "Customer Number"
29855>>>>>        Set Field_Label_Short Field Customer.Customer_Number To "Number"
29856>>>>>        Set Field_Option Field Customer.Customer_Number DD_AUTOFIND to True
29857>>>>>        Set Field_Option Field Customer.Customer_Number DD_NOPUT to True
29858>>>>>        Set Field_Prompt_Object Field Customer.Customer_Number to Customer_sl
29859>>>>>        Set Field_WebPrompt_Object Field Customer.Customer_Number to oCustomerWebLookup
29860>>>>>        Set Key_Field_State Field Customer.Customer_Number to True
29861>>>>>        Set Status_Help Field Customer.Customer_Number To "Customer Id Number (system assigned)."
29862>>>>>
29862>>>>>        Set Field_Label_Long Field Customer.Name To "Customer Name"
29863>>>>>        Set Field_Label_Short Field Customer.Name To "Customer Name"
29864>>>>>        Set Field_Option Field Customer.Name DD_REQUIRED to True
29865>>>>>        Set Field_Prompt_Object Field Customer.Name to Customer_sl
29866>>>>>        Set Field_WebPrompt_Object Field Customer.Name to oCustomerWebLookup
29867>>>>>        Set Status_Help Field Customer.Name to "Customer/Company Name."
29868>>>>>
29868>>>>>        Set Field_Label_Long Field Customer.Address To "Street Address"
29869>>>>>        Set Field_Label_Short Field Customer.Address To "Address"
29870>>>>>        Set Status_Help Field Customer.Address To "Street Address."
29871>>>>>
29871>>>>>        Set Status_Help Field Customer.City To "City Name."
29872>>>>>
29872>>>>>        Set Field_Class_Name Field Customer.State To "dbComboForm"
29873>>>>>        Set Field_Label_Long Field Customer.State To "State"
29874>>>>>        Set Field_Label_Short Field Customer.State To "St."
29875>>>>>        Set Field_Option Field Customer.State DD_CAPSLOCK to True
29876>>>>>        Set Field_Value_Table Field Customer.State to Customer_State_VT
29877>>>>>        Set Status_Help Field Customer.State To "Two letter state ID."
29878>>>>>
29878>>>>>        Set Field_Label_Long Field Customer.Zip To "Zip/Postal Code"
29879>>>>>        Set Field_Label_Short Field Customer.Zip To "Zip"
29880>>>>>        Set Field_Mask Field Customer.Zip To "#####-####"
29881>>>>>        Set Field_Mask_Type Field Customer.Zip To MASK_WINDOW
29882>>>>>        Set Status_Help Field Customer.Zip To "Zip or Postal Code."
29883>>>>>
29883>>>>>        Set Field_Label_Long Field Customer.Phone_Number To "Phone Number"
29884>>>>>        Set Field_Label_Short Field Customer.Phone_Number To "Phone"
29885>>>>>        Set Status_Help Field Customer.Phone_Number To "Phone Number."
29886>>>>>
29886>>>>>        Set Field_Label_Long Field Customer.Fax_Number To "Fax Number"
29887>>>>>        Set Field_Label_Short Field Customer.Fax_Number To "Fax"
29888>>>>>        Set Status_Help Field Customer.Fax_Number To "Fax Phone Number."
29889>>>>>
29889>>>>>        Set Field_Label_Long Field Customer.Email_Address To "E-Mail Address"
29890>>>>>        Set Field_Label_Short Field Customer.Email_Address To "E-Mail"
29891>>>>>        Set Status_Help Field Customer.Email_Address To "E-mail Address (internet)."
29892>>>>>        Set Field_Validate_msg Field Customer.EMail_Address to (RefFunc(ValidateEmail))
29893>>>>>        Set Field_Option Field Customer.EMail_Address DD_REQUIRED to True
29894>>>>>
29894>>>>>        Set Field_Class_Name Field Customer.Credit_Limit To "dbSpinForm"
29895>>>>>        Set Field_Mask_Type Field Customer.Credit_Limit To MASK_CURRENCY_WINDOW
29896>>>>>
29896>>>>>        Set Field_Label_Long Field Customer.Purchases To "Total Purchases"
29897>>>>>        Set Field_Label_Short Field Customer.Purchases To "Purchases"
29898>>>>>        Set Field_Mask_Type Field Customer.Purchases To MASK_CURRENCY_WINDOW
29899>>>>>        Set Field_Option Field Customer.Purchases DD_DISPLAYONLY to True
29900>>>>>
29900>>>>>        Set Field_Label_Long Field Customer.Balance To "Balance Due"
29901>>>>>        Set Field_Label_Short Field Customer.Balance To "Balance"
29902>>>>>        Set Field_Mask_Type Field Customer.Balance To MASK_CURRENCY_WINDOW
29903>>>>>        Set Field_Option Field Customer.Balance DD_DISPLAYONLY to True
29904>>>>>
29904>>>>>        Set Status_Help Field Customer.Comments To "Additional Comments and Notes."
29905>>>>>
29905>>>>>        Set Field_Checkbox_Values Field Customer.Status To "Y" "N"
29906>>>>>        Set Field_Label_Long Field Customer.Status To "Active Status"
29907>>>>>        Set Field_Label_Short Field Customer.Status To "Status"
29908>>>>>        Set Status_Help Field Customer.Status To "Active Inactive Status of customer"
29909>>>>>    End_Procedure  //  Construct_Object
29910>>>>>
29910>>>>>    Procedure Field_defaults
29912>>>>>        Forward Send Field_Defaults
29914>>>>>        Set Field_Changed_Value   Field Customer.State To "FL"
29915>>>>>        Set Field_Changed_Value   Field Customer.Credit_Limit To 1000
29916>>>>>        Set Field_Changed_Value   Field Customer.Status To "Y"
29917>>>>>    End_Procedure
29918>>>>>
29918>>>>>    //
29918>>>>>    //  Validates if the field contains a valid email address (it allows empty values too).
29918>>>>>    //
29918>>>>>    Function ValidateEmail Integer iColumn String sValue Returns Boolean
29920>>>>>        Integer iAt iDot
29920>>>>>        Boolean bResult
29920>>>>>        
29920>>>>>        If (Trim(sValue) <> "") Begin
29922>>>>>            Move (Pos("@", sValue)) to iAt
29923>>>>>            Move (RightPos(".", sValue)) to iDot
29924>>>>>            
29924>>>>>            If (not(iAt > 1 and iDot > 0 and iDot > iAt + 1 and iDot < Length(sValue))) Begin
29926>>>>>                Send Data_set_error iColumn DFERR_OPERATOR "Please enter a valid email address"
29927>>>>>                Move True to bResult
29928>>>>>            End
29928>>>>>>
29928>>>>>        End
29928>>>>>>
29928>>>>>        
29928>>>>>        Function_Return bResult
29929>>>>>    End_Function
29930>>>>>
29930>>>>>
29930>>>>>End_Class    //  Customer_DataDictionary
29931>>>>>
29931>>>>>Use CustomerWebLookup.wo
Including file: CustomerWebLookup.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\CustomerWebLookup.wo)
29931>>>>>>>// Customer Lookup List
29931>>>>>>>//
29931>>>>>>>
29931>>>>>>>Use cWebModalDialog
29931>>>>>>>Use cWebPanel.pkg
29931>>>>>>>Use cWebButton.pkg
29931>>>>>>>Use cWebPromptList.pkg
29931>>>>>>>Use cWebColumn.pkg
29931>>>>>>>
29931>>>>>>>Use Customer.DD
29931>>>>>>>
29931>>>>>>>Object oCustomerWebLookup is a cWebModalDialog
29933>>>>>>>    Set piColumnCount to 6
29934>>>>>>>    Set psCaption to "Customer Lookup List"
29935>>>>>>>    Set piWidth to 550
29936>>>>>>>    Set piHeight to 400
29937>>>>>>>
29937>>>>>>>    Object oCustomer_DD is a Customer_DataDictionary
29939>>>>>>>    End_Object 
29940>>>>>>>
29940>>>>>>>    Set Main_DD To oCustomer_DD
29941>>>>>>>    Set Server  To oCustomer_DD
29942>>>>>>>
29942>>>>>>>
29942>>>>>>>    Object oWebMainPanel is a cWebPanel
29944>>>>>>>        Set piColumnCount to 6
29945>>>>>>>
29945>>>>>>>        Object oPromptList is a cWebPromptList
29947>>>>>>>            Set pbFillHeight to True
29948>>>>>>>            Set piColumnSpan to 6
29949>>>>>>>
29949>>>>>>>            Object oCustomerCustomer_Number is a cWebColumn
29951>>>>>>>                Entry_Item Customer.Customer_Number
29952>>>>>>>                Set psCaption to "Number"
29953>>>>>>>                Set piWidth to 100
29954>>>>>>>            End_Object 
29955>>>>>>>
29955>>>>>>>            Object oCustomerName is a cWebColumn
29957>>>>>>>                Entry_Item Customer.Name
29958>>>>>>>                Set psCaption to "Customer Name"
29959>>>>>>>                Set piWidth to 315
29960>>>>>>>            End_Object 
29961>>>>>>>
29961>>>>>>>            Object oCustomerBalance is a cWebColumn
29963>>>>>>>                Entry_Item Customer.Balance
29964>>>>>>>                Set psCaption to "Balance"
29965>>>>>>>                Set piWidth to 110
29966>>>>>>>            End_Object 
29967>>>>>>>        End_Object 
29968>>>>>>>
29968>>>>>>>        Object oOkButton is a cWebButton
29970>>>>>>>            Set psCaption to "OK"
29971>>>>>>>            Set piColumnSpan to 1
29972>>>>>>>            Set piColumnIndex to 3
29973>>>>>>>
29973>>>>>>>            Procedure OnClick
29976>>>>>>>                Send Ok of oPromptList
29977>>>>>>>            End_Procedure
29978>>>>>>>        End_Object 
29979>>>>>>>
29979>>>>>>>        Object oCancelButton is a cWebButton
29981>>>>>>>            Set psCaption to "Cancel"
29982>>>>>>>            Set piColumnSpan to 1
29983>>>>>>>            Set piColumnIndex to 4
29984>>>>>>>            Procedure OnClick
29987>>>>>>>                Send Cancel of oPromptList
29988>>>>>>>            End_Procedure
29989>>>>>>>
29989>>>>>>>        End_Object 
29990>>>>>>>
29990>>>>>>>        Object oSearchButton is a cWebButton
29992>>>>>>>            Set psCaption to "Search..."
29993>>>>>>>            Set piColumnSpan to 1
29994>>>>>>>            Set piColumnIndex to 5
29995>>>>>>>
29995>>>>>>>            Procedure OnClick
29998>>>>>>>                Send Search of oPromptList
29999>>>>>>>            End_Procedure
30000>>>>>>>
30000>>>>>>>        End_Object 
30001>>>>>>>    End_Object 
30002>>>>>>>
30002>>>>>>>    Set pbServerOnShow to True
30003>>>>>>>    Procedure OnShow 
30006>>>>>>>        Send InitializePromptList of oPromptList
30007>>>>>>>    End_Procedure 
30008>>>>>>>
30008>>>>>>>    Set pbServerOnSubmit to True
30009>>>>>>>    Procedure OnSubmit 
30012>>>>>>>        Send Ok of oPromptList
30013>>>>>>>    End_Procedure 
30014>>>>>>>
30014>>>>>>>End_Object 
30015>>>>>
30015>>>Use SalesP.DD
Including file: SalesP.dd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\SalesP.dd)
30015>>>>>Use  Windows.pkg           // Basic Definitions
30015>>>>>Use  DataDict.pkg          // DataDictionary Class Definition
30015>>>>>Use  DDvalTbl.pkg          // Validation Table Class Definitions
30015>>>>>
30015>>>>>Open Salesp
Including file: SalesP.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\SalesP.fd)
30017>>>>>Open Orderhea
30019>>>>>
30019>>>>>Register_Object SalesP_sl
30019>>>>>Register_Object oSalesPWebLookup
30019>>>>>
30019>>>>>Class SalesP_DataDictionary Is A DataDictionary
30020>>>>>
30020>>>>>    Procedure Construct_Object
30022>>>>>        Forward Send Construct_Object
30024>>>>>
30024>>>>>        Set Main_File To Salesp.File_Number
30025>>>>>        Set Cascade_Delete_State To FALSE
30026>>>>>
30026>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
30027>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
30028>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
30029>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
30030>>>>>
30030>>>>>        Set Add_Client_File to Orderhea.File_Number
30031>>>>>
30031>>>>>
30031>>>>>        Set Field_Label_Long Field Salesp.Id To "Sales Person ID"
30032>>>>>        Set Field_Label_Short Field Salesp.Id To "ID"
30033>>>>>        Set Field_Option Field Salesp.Id DD_AUTOFIND to True
30034>>>>>        Set Field_Option Field Salesp.Id DD_REQUIRED to True
30035>>>>>        Set Field_Option Field Salesp.Id DD_CAPSLOCK to True
30036>>>>>        Set Field_Prompt_Object Field Salesp.Id to SalesP_sl
30037>>>>>        Set Field_WebPrompt_Object Field SalesP.ID to oSalesPWebLookup
30038>>>>>        Set Key_Field_State Field Salesp.Id To TRUE
30039>>>>>        Set Status_Help Field Salesp.Id To "Sales person ID code - Upper case alpha"
30040>>>>>
30040>>>>>        Set Field_Label_Long Field Salesp.Name To "Sales Person Name"
30041>>>>>        Set Field_Label_Short Field Salesp.Name To "Sales Person Name"
30042>>>>>        Set Field_Prompt_Object Field Salesp.Name to SalesP_sl
30043>>>>>        Set Status_Help Field Salesp.Name To "Sales person name - first and last"
30044>>>>>
30044>>>>>    End_Procedure  //  Construct_Object
30045>>>>>
30045>>>>>
30045>>>>>    Procedure Field_Defaults
30047>>>>>        Forward Send Field_Defaults
30049>>>>>    End_Procedure    // Field_Defaults
30050>>>>>    
30050>>>>>End_Class    //  Salesp_DataDictionary
30051>>>>>Use SalesPWebLookup.wo
Including file: SalesPWebLookup.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\SalesPWebLookup.wo)
30051>>>>>>>// Sales Person Lookup List
30051>>>>>>>//
30051>>>>>>>
30051>>>>>>>Use cWebModalDialog
30051>>>>>>>Use cWebPanel.pkg
30051>>>>>>>Use cWebButton.pkg
30051>>>>>>>Use cWebPromptList.pkg
30051>>>>>>>Use cWebColumn.pkg
30051>>>>>>>
30051>>>>>>>Use SalesP.DD
30051>>>>>>>
30051>>>>>>>Object oSalesPWebLookup is a cWebModalDialog
30053>>>>>>>    Set piColumnCount to 5
30054>>>>>>>    Set psCaption to "Sales Person Lookup List"
30055>>>>>>>    Set piWidth to 450
30056>>>>>>>    Set piHeight to 400
30057>>>>>>>
30057>>>>>>>    Object oSalesP_DD is a SalesP_DataDictionary
30059>>>>>>>    End_Object 
30060>>>>>>>
30060>>>>>>>    Set Main_DD To oSalesP_DD
30061>>>>>>>    Set Server  To oSalesP_DD
30062>>>>>>>
30062>>>>>>>
30062>>>>>>>    Object oWebMainPanel is a cWebPanel
30064>>>>>>>        Set piColumnCount to 5
30065>>>>>>>
30065>>>>>>>        Object oPromptList is a cWebPromptList
30067>>>>>>>            Set pbFillHeight to True
30068>>>>>>>            Set piColumnSpan to 5
30069>>>>>>>            
30069>>>>>>>            // Since there are only a few records, we set this property so all records are sent to 
30069>>>>>>>            // the client at once. This improves the performance of scrolling and searching and 
30069>>>>>>>            // enables sorting on all columns.
30069>>>>>>>            Set peDbGridType to gtAllData
30070>>>>>>>
30070>>>>>>>            Object oSalesPID is a cWebColumn
30072>>>>>>>                Entry_Item SalesP.ID
30073>>>>>>>                Set psCaption to "ID"
30074>>>>>>>                Set piWidth to 70
30075>>>>>>>            End_Object 
30076>>>>>>>
30076>>>>>>>            Object oSalesPName is a cWebColumn
30078>>>>>>>                Entry_Item SalesP.Name
30079>>>>>>>                Set psCaption to "Sales Person Name"
30080>>>>>>>                Set piWidth to 262
30081>>>>>>>            End_Object 
30082>>>>>>>        End_Object 
30083>>>>>>>
30083>>>>>>>        Object oOkButton is a cWebButton
30085>>>>>>>            Set psCaption to "OK"
30086>>>>>>>            Set piColumnSpan to 1
30087>>>>>>>            Set piColumnIndex to 2
30088>>>>>>>
30088>>>>>>>            Procedure OnClick
30091>>>>>>>                Send Ok of oPromptList
30092>>>>>>>            End_Procedure
30093>>>>>>>
30093>>>>>>>        End_Object 
30094>>>>>>>
30094>>>>>>>        Object oCancelButton is a cWebButton
30096>>>>>>>            Set psCaption to "Cancel"
30097>>>>>>>            Set piColumnSpan to 1
30098>>>>>>>            Set piColumnIndex to 3
30099>>>>>>>            Procedure OnClick
30102>>>>>>>                Send Cancel of oPromptList
30103>>>>>>>            End_Procedure
30104>>>>>>>
30104>>>>>>>        End_Object 
30105>>>>>>>
30105>>>>>>>        Object oSearchButton is a cWebButton
30107>>>>>>>            Set psCaption to "Search..."
30108>>>>>>>            Set piColumnSpan to 1
30109>>>>>>>            Set piColumnIndex to 4
30110>>>>>>>
30110>>>>>>>            Procedure OnClick
30113>>>>>>>                Send Search of oPromptList
30114>>>>>>>            End_Procedure
30115>>>>>>>
30115>>>>>>>        End_Object 
30116>>>>>>>    End_Object 
30117>>>>>>>
30117>>>>>>>    Set pbServerOnShow to True
30118>>>>>>>    Procedure OnShow 
30121>>>>>>>        Send InitializePromptList of oPromptList
30122>>>>>>>    End_Procedure 
30123>>>>>>>
30123>>>>>>>    Set pbServerOnSubmit to True
30124>>>>>>>    Procedure OnSubmit 
30127>>>>>>>        Send Ok of oPromptList
30128>>>>>>>    End_Procedure 
30129>>>>>>>
30129>>>>>>>End_Object 
30130>>>>>
30130>>>>>
30130>>>Use OrderHea.DD
Including file: OrderHea.dd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\OrderHea.dd)
30130>>>>>Use  Windows.pkg           // Basic Definitions
30130>>>>>Use  DataDict.pkg          // DataDictionary Class Definition
30130>>>>>Use  DDvalTbl.pkg          // Validation Table Class Definitions
30130>>>>>
30130>>>>>Open OrderHea
30132>>>>>Open OrderDtl
30134>>>>>Open Customer
30136>>>>>Open SalesP
30138>>>>>Open OrdSys
30140>>>>>
30140>>>>>
30140>>>>>Register_Object Terms_table
30140>>>>>Register_Object Ship_Table
30140>>>>>
30140>>>>>Object Terms_table  is a DescriptionValidationTable
30142>>>>>
30142>>>>>    Procedure Fill_List
30145>>>>>        Forward Send Fill_List
30147>>>>>        Send Add_Table_Value  "NONE"  "None established"
30148>>>>>        Send Add_Table_Value  "COD"  "COD"
30149>>>>>        Send Add_Table_Value  "NET30"  "Net 30"
30150>>>>>        Send Add_Table_Value  "NET60"  "Net 60"
30151>>>>>        Send Add_Table_Value  "NET90"  "Net 90"
30152>>>>>        Send Add_Table_Value  "PREPAY"  "Pre-payment required"
30153>>>>>    End_Procedure    // Fill_List
30154>>>>>End_Object   // Terms_table
30155>>>>>
30155>>>>>Object Ship_Table  is a CodeValidationTable
30157>>>>>    Set Type_Value        To "SHIPPING"
30158>>>>>    Set Allow_Blank_State To True
30159>>>>>End_Object   // Ship_Table
30160>>>>>
30160>>>>>Register_Object OrderHea_sl
30160>>>>>Register_Object oOrderWebLookup
30160>>>>>
30160>>>>>Class OrderHea_DataDictionary is a DataDictionary
30161>>>>>
30161>>>>>    Procedure Construct_Object
30163>>>>>        Forward Send Construct_Object
30165>>>>>
30165>>>>>        Set Main_File To OrderHea.File_Number
30166>>>>>
30166>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
30167>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
30168>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
30169>>>>>
30169>>>>>        Set Add_Client_File to OrderDtl.File_Number
30170>>>>>
30170>>>>>        Set Add_Server_File to Customer.File_Number
30171>>>>>        Set Add_Server_File to SalesP.File_Number
30172>>>>>
30172>>>>>        Set ParentNoSwitchIfCommitted Customer.File_Number to True
30173>>>>>
30173>>>>>        Set Add_System_File to OrdSys.File_Number DD_LOCK_ON_NEW_SAVE_DELETE
30174>>>>>
30174>>>>>        Set Field_Auto_Increment Field OrderHea.Order_Number to File_Field OrdSys.Order_Number
30175>>>>>
30175>>>>>
30175>>>>>        Set Field_Option Field OrderHea.Order_Number DD_AUTOFIND to True
30176>>>>>        Set Field_Prompt_Object Field OrderHea.Order_Number to OrderHea_SL
30177>>>>>        Set Field_WebPrompt_Object Field OrderHea.Order_Number to oOrderWebLookup
30178>>>>>        
30178>>>>>        Set Key_Field_State Field OrderHea.Order_Number to True
30179>>>>>        Set Status_Help Field OrderHea.Order_Number To "Order Number - New orders are assigned numbers automatically"
30180>>>>>
30180>>>>>
30180>>>>>        Set Field_Class_Name Field OrderHea.Order_Date To "dbSpinForm"
30181>>>>>        Set Field_Entry_msg Field OrderHea.Order_Date To Entry_Order_Date
30182>>>>>        Set Field_Mask_Type Field OrderHea.Order_Date To MASK_DATE_WINDOW
30183>>>>>        Set Field_Prompt_Object Field OrderHea.Order_Date to OrderHea_SL
30184>>>>>        Set Field_WebPrompt_Object Field OrderHea.Order_Date to oOrderWebLookup
30185>>>>>
30185>>>>>        Set Status_Help Field OrderHea.Order_Date to "Date on which the order was placed"
30186>>>>>
30186>>>>>        Set Field_Class_Name Field OrderHea.Terms To "dbComboForm"
30187>>>>>        Set Field_Value_Table Field OrderHea.Terms to Terms_table
30188>>>>>        Set Status_Help Field OrderHea.Terms To "Payment terms"
30189>>>>>
30189>>>>>        Set Field_Class_Name Field OrderHea.Ship_Via To "dbComboForm"
30190>>>>>        Set Field_Value_Table Field OrderHea.Ship_Via to Ship_Table
30191>>>>>        Set Status_Help Field OrderHea.Ship_Via To "Shipping method"
30192>>>>>
30192>>>>>        Set Status_Help Field OrderHea.Ordered_By To "Order placed by"
30193>>>>>        Set Field_Option Field OrderHea.Ordered_By DD_COMMIT to True
30194>>>>>
30194>>>>>        Set Field_Label_Long Field OrderHea.Salesperson_ID To "Sales Person ID"
30195>>>>>        Set Field_Label_Short Field OrderHea.Salesperson_ID To "Sales ID"
30196>>>>>        Set Status_Help Field OrderHea.Salesperson_ID To "Sales Person who initiated the order"
30197>>>>>
30197>>>>>        Set Field_Mask_Type Field OrderHea.Order_Total To MASK_CURRENCY_WINDOW
30198>>>>>        Set Field_Option Field OrderHea.Order_Total DD_DISPLAYONLY to True
30199>>>>>
30199>>>>>
30199>>>>>    End_Procedure  // Construct_Object
30200>>>>>
30200>>>>>    Procedure Field_Defaults
30202>>>>>        Forward Send Field_Defaults
30204>>>>>    End_Procedure
30205>>>>>
30205>>>>>    // Add a default date if the field is blank
30205>>>>>    Procedure Entry_Order_Date Integer iField Date dDate
30207>>>>>         Integer iChanged
30207>>>>>         
30207>>>>>         Get Field_Changed_State iField To iChanged
30208>>>>>         If (iChanged=0 And dDate=0) Begin
30210>>>>>            SysDate dDate
30211>>>>>            Set Field_Default_Value iField To dDate
30212>>>>>         End
30212>>>>>>
30212>>>>>    End_Procedure
30213>>>>>
30213>>>>>    Procedure Update
30215>>>>>        Forward Send Update
30217>>>>>        Send Adjust_Balances OrderHea.Order_Total
30218>>>>>    End_Procedure
30219>>>>>
30219>>>>>    Procedure Backout
30221>>>>>        Forward Send Backout
30223>>>>>        Send Adjust_Balances (-OrderHea.Order_Total)
30224>>>>>    End_Procedure
30225>>>>>
30225>>>>>    Procedure Adjust_Balances Number Amt
30227>>>>>        Add Amt To Customer.Purchases
30228>>>>>        Add Amt To Customer.Balance
30229>>>>>    End_Procedure
30230>>>>>
30230>>>>>    Procedure Deleting
30232>>>>>        Forward Send Deleting
30234>>>>>        // see if we can decrement the order number in sys table...
30234>>>>>        // can only do this if this is the newest order.
30234>>>>>        If (OrderHea.Order_Number=OrdSys.Order_Number) Begin // if this is
30236>>>>>           Decrement OrdSys.Order_Number          // the last number,
30237>>>>>           Saverecord OrdSys                      // decrement and save.
30238>>>>>        End
30238>>>>>>
30238>>>>>    End_Procedure
30239>>>>>
30239>>>>>End_Class    //  OrderHea_DataDictionary
30240>>>>>Use OrderWebLookup.wo
Including file: OrderWebLookup.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\OrderWebLookup.wo)
30240>>>>>>>// Order Lookup List
30240>>>>>>>//
30240>>>>>>>
30240>>>>>>>Use cWebModalDialog
30240>>>>>>>Use cWebPanel.pkg
30240>>>>>>>Use cWebButton.pkg
30240>>>>>>>Use cWebPromptList.pkg
30240>>>>>>>Use cWebColumn.pkg
30240>>>>>>>
30240>>>>>>>Use Customer.DD
30240>>>>>>>Use SalesP.DD
30240>>>>>>>Use OrderHea.DD
30240>>>>>>>
30240>>>>>>>Object oOrderWebLookup is a cWebModalDialog
30242>>>>>>>    Set piColumnCount to 8
30243>>>>>>>    Set psCaption to "Order Lookup List"
30244>>>>>>>    Set piWidth to 700
30245>>>>>>>    Set piHeight to 400
30246>>>>>>>
30246>>>>>>>    Object oCustomer_DD is a Customer_DataDictionary
30248>>>>>>>    End_Object 
30249>>>>>>>
30249>>>>>>>    Object oSalesP_DD is a SalesP_DataDictionary
30251>>>>>>>    End_Object 
30252>>>>>>>
30252>>>>>>>    Object oOrderHea_DD is a OrderHea_DataDictionary
30254>>>>>>>        Set DDO_Server To oCustomer_DD
30255>>>>>>>        Set DDO_Server To oSalesP_DD
30256>>>>>>>    End_Object 
30257>>>>>>>
30257>>>>>>>    Set Main_DD To oOrderHea_DD
30258>>>>>>>    Set Server  To oOrderHea_DD
30259>>>>>>>
30259>>>>>>>
30259>>>>>>>    Object oWebMainPanel is a cWebPanel
30261>>>>>>>        Set piColumnCount to 8
30262>>>>>>>
30262>>>>>>>        Object oPromptList is a cWebPromptList
30264>>>>>>>            Set pbFillHeight to True
30265>>>>>>>            Set piColumnSpan to 8
30266>>>>>>>
30266>>>>>>>            Object oOrderHeaOrder_Number is a cWebColumn
30268>>>>>>>                Entry_Item OrderHea.Order_Number
30269>>>>>>>                Set psCaption to "Order Num"
30270>>>>>>>                Set piWidth to 115
30271>>>>>>>            End_Object 
30272>>>>>>>
30272>>>>>>>            Object oCustomerName is a cWebColumn
30274>>>>>>>                Entry_Item Customer.Name
30275>>>>>>>                Set psCaption to "Customer"
30276>>>>>>>                Set piWidth to 315
30277>>>>>>>            End_Object 
30278>>>>>>>
30278>>>>>>>            Object oSalesPName is a cWebColumn
30280>>>>>>>                Entry_Item SalesP.Name
30281>>>>>>>                Set psCaption to "Sales Person"
30282>>>>>>>                Set piWidth to 262
30283>>>>>>>            End_Object 
30284>>>>>>>
30284>>>>>>>            Object oOrderHeaOrder_Total is a cWebColumn
30286>>>>>>>                Entry_Item OrderHea.Order_Total
30287>>>>>>>                Set psCaption to "Price"
30288>>>>>>>                Set piWidth to 115
30289>>>>>>>            End_Object 
30290>>>>>>>        End_Object 
30291>>>>>>>
30291>>>>>>>        Object oOkButton is a cWebButton
30293>>>>>>>            Set psCaption to "OK"
30294>>>>>>>            Set piColumnSpan to 1
30295>>>>>>>            Set piColumnIndex to 5
30296>>>>>>>
30296>>>>>>>            Procedure OnClick
30299>>>>>>>                Send Ok of oPromptList
30300>>>>>>>            End_Procedure
30301>>>>>>>
30301>>>>>>>        End_Object 
30302>>>>>>>
30302>>>>>>>        Object oCancelButton is a cWebButton
30304>>>>>>>            Set psCaption to "Cancel"
30305>>>>>>>            Set piColumnSpan to 1
30306>>>>>>>            Set piColumnIndex to 6
30307>>>>>>>            Procedure OnClick
30310>>>>>>>                Send Cancel of oPromptList
30311>>>>>>>            End_Procedure
30312>>>>>>>
30312>>>>>>>        End_Object 
30313>>>>>>>
30313>>>>>>>        Object oSearchButton is a cWebButton
30315>>>>>>>            Set psCaption to "Search..."
30316>>>>>>>            Set piColumnSpan to 1
30317>>>>>>>            Set piColumnIndex to 7
30318>>>>>>>
30318>>>>>>>            Procedure OnClick
30321>>>>>>>                Send Search of oPromptList
30322>>>>>>>            End_Procedure
30323>>>>>>>
30323>>>>>>>        End_Object 
30324>>>>>>>    End_Object 
30325>>>>>>>
30325>>>>>>>    Set pbServerOnShow to True
30326>>>>>>>    Procedure OnShow 
30329>>>>>>>        Send InitializePromptList of oPromptList
30330>>>>>>>    End_Procedure 
30331>>>>>>>
30331>>>>>>>    Set pbServerOnSubmit to True
30332>>>>>>>    Procedure OnSubmit 
30335>>>>>>>        Send Ok of oPromptList
30336>>>>>>>    End_Procedure 
30337>>>>>>>
30337>>>>>>>End_Object 
30338>>>>>
30338>>>>>
30338>>>Use OrderDtl.DD
Including file: OrderDtl.dd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\OrderDtl.dd)
30338>>>>>Use  Windows.pkg           // Basic Definitions
30338>>>>>Use  DataDict.pkg          // DataDictionary Class Definition
30338>>>>>Use  DDvalTbl.pkg          // Validation Table Class Definitions
30338>>>>>
30338>>>>>Open OrderDtl
30340>>>>>Open OrderHea
30342>>>>>Open Invt
30344>>>>>
30344>>>>>
30344>>>>>Class OrderDtl_DataDictionary Is A DataDictionary
30345>>>>>
30345>>>>>    Procedure Construct_Object
30347>>>>>        Forward Send Construct_Object
30349>>>>>
30349>>>>>        Set Main_File To OrderDtl.File_Number
30350>>>>>        Set Cascade_Delete_State To False
30351>>>>>
30351>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
30352>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
30353>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
30354>>>>>
30354>>>>>        Set Add_Server_File to OrderHea.File_Number
30355>>>>>        Set Add_Server_File to Invt.File_Number
30356>>>>>
30356>>>>>        Set Field_Auto_Increment Field OrderDtl.Detail_Number to File_Field OrderHea.Last_Detail_Num
30357>>>>>
30357>>>>>
30357>>>>>        Set Field_Option Field OrderDtl.Order_Number DD_NOPUT to True
30358>>>>>
30358>>>>>        Set Field_Option Field OrderDtl.Detail_Number DD_NOPUT to True
30359>>>>>
30359>>>>>
30359>>>>>        Set Field_Exit_msg Field OrderDtl.Qty_Ordered To Adjust_Display_Total
30360>>>>>        Set Field_Label_Long Field OrderDtl.Qty_Ordered To "Quantity Ordered"
30361>>>>>        Set Field_Label_Short Field OrderDtl.Qty_Ordered To "Quantity"
30362>>>>>        Set Field_Mask_Type Field OrderDtl.Qty_Ordered to Mask_Numeric_Window
30363>>>>>        Set Status_Help Field OrderDtl.Qty_Ordered To "Number of items ordered"
30364>>>>>
30364>>>>>        Set Field_Entry_msg Field OrderDtl.Price To Entering_Price
30365>>>>>        Set Field_Exit_msg Field OrderDtl.Price To Adjust_Display_Total
30366>>>>>        Set Field_Label_Long Field OrderDtl.Price To "Price per Unit"
30367>>>>>        Set Field_Label_Short Field OrderDtl.Price To "Price"
30368>>>>>        Set Field_Mask_Type Field OrderDtl.Price To MASK_CURRENCY_WINDOW
30369>>>>>        Set Status_Help Field OrderDtl.Price To "Price per Unit"
30370>>>>>
30370>>>>>        Set Field_Label_Long Field OrderDtl.Extended_Price To "Extended Price"
30371>>>>>        Set Field_Label_Short Field OrderDtl.Extended_Price To "Total"
30372>>>>>        Set Field_Mask_Type Field OrderDtl.Extended_Price To MASK_CURRENCY_WINDOW
30373>>>>>        Set Field_Option Field OrderDtl.Extended_Price DD_DISPLAYONLY to True
30374>>>>>        Set Status_Help Field OrderDtl.Extended_Price To "Total extended price"
30375>>>>>
30375>>>>>    End_Procedure  //  Construct_Object
30376>>>>>
30376>>>>>    // Update and Backout need to adjust the Invt.On_Hand quantity,
30376>>>>>    // the OrderDtl line's extended price and the OrderHea total.
30376>>>>>    // We will call the same procedure (Adjust_Balances) to insure that
30376>>>>>    // Backout and Update are inverses of each other.
30376>>>>>    // Note that Backout does not need to change the extended_price.
30376>>>>>    // This only gets changed as part of update.
30376>>>>>    Procedure Update
30378>>>>>        Forward Send Update
30380>>>>>        Move (OrderDtl.Price * OrderDtl.Qty_Ordered) To OrderDtl.Extended_Price
30381>>>>>        Send Adjust_Balances OrderDtl.Qty_Ordered OrderDtl.Extended_Price
30382>>>>>    End_Procedure
30383>>>>>    
30383>>>>>    Procedure Backout
30385>>>>>        Forward Send Backout
30387>>>>>        Send Adjust_Balances (-OrderDtl.Qty_Ordered) (-OrderDtl.Extended_Price)
30388>>>>>    End_Procedure
30389>>>>>
30389>>>>>    // Called by Backout and Update, passing the quantity and the extended price. 
30389>>>>>    // Subtract quantity from on-hand Invt and add extended Amt to order total.
30389>>>>>    Procedure Adjust_Balances Number Qty Number Amt
30391>>>>>        Subtract Qty From Invt.On_Hand
30392>>>>>        Add      Amt To   OrderHea.Order_Total
30393>>>>>    End_Procedure
30394>>>>>
30394>>>>>    // When entering the price field, we may wish to update the
30394>>>>>    // current field value with the standard unit price from the Invt table.
30394>>>>>    // Only do this if the current amount is zero and an item was actually picked.
30394>>>>>    // If non-zero or no item picked, we assume the field is being edited (and we make no assumptions).
30394>>>>>    Procedure Entering_Price Integer Field# Number nAmnt
30396>>>>>        Handle hoInvtDD
30396>>>>>        Boolean bHasRecord
30396>>>>>
30396>>>>>        Get Data_Set Invt.File_Number to hoInvtDD
30397>>>>>
30397>>>>>        If (hoInvtDD) Begin
30399>>>>>            Get HasRecord of hoInvtDD to bHasRecord
30400>>>>>        
30400>>>>>            If (nAmnt=0 and bHasRecord) Begin
30402>>>>>               Get File_Field_Current_Value File_Field Invt.Unit_Price to nAmnt
30403>>>>>               Set Field_Changed_Value Field# to nAmnt
30404>>>>>               Send Adjust_Display_Total
30405>>>>>            End
30405>>>>>>
30405>>>>>        End
30405>>>>>>
30405>>>>>    End_Procedure
30406>>>>>
30406>>>>>    // This updates the extended price field, which will update any display balances.
30406>>>>>    // This is only done for display purposes.
30406>>>>>    // The actual amount is updated to the field during the save.
30406>>>>>    Procedure Adjust_Display_total Integer iField String sValue
30408>>>>>        Integer iQty
30408>>>>>        Number  nAmnt
30408>>>>>        
30408>>>>>        Get Field_Current_Value Field OrderDtl.Qty_Ordered    To iQty
30409>>>>>        Get Field_Current_Value Field OrderDtl.Price          To nAmnt
30410>>>>>        Set Field_Current_Value Field OrderDtl.Extended_Price To (nAmnt * iQty)
30411>>>>>        // note: we set value, but not changed_state!
30411>>>>>    End_Procedure
30412>>>>>
30412>>>>>
30412>>>>>    Procedure Field_Defaults
30414>>>>>        Forward Send Field_Defaults
30416>>>>>        Set Field_Changed_Value Field OrderDtl.Qty_Ordered to 1
30417>>>>>    End_Procedure    // Field_Defaults
30418>>>>>    
30418>>>>>End_Class    //  OrderDtl_DataDictionary
30419>>>>>
30419>>>Use cWebParentCombo.pkg
30419>>>
30419>>>Object oOrder is a cWebView
30421>>>    Set piColumnCount to 10
30422>>>    Set psCaption to "Order Entry"
30423>>>    Set piWidth to 800
30424>>>    
30424>>>    Delegate Set phoDefaultView to Self      // Automatically load this view when starting the webapp
30426>>>
30426>>>    Object oVendor_DD is a Vendor_DataDictionary
30428>>>    End_Object 
30429>>>
30429>>>    Object oInvt_DD is a Invt_DataDictionary
30431>>>        Set DDO_Server To oVendor_DD
30432>>>        
30432>>>        Procedure OnPostFind Integer eMessage Boolean bFound
30435>>>            Boolean bSynching
30435>>>
30435>>>            // Each time an inventory item is selected, we use the unit price as the
30435>>>            // suggested price for the line item.
30435>>>            
30435>>>            Get AppSynching to bSynching
30436>>>            // Do not perform this action while synchronizing DDOs to the WebApp Client
30436>>>            If (not(bSynching)) Begin
30438>>>                Send SetPriceDefault of oOrderDtl_DD Invt.Unit_Price
30439>>>            End
30439>>>>
30439>>>        End_Procedure
30440>>>    End_Object 
30441>>>
30441>>>    Object oCustomer_DD is a Customer_DataDictionary
30443>>>    End_Object 
30444>>>
30444>>>    Object oSalesP_DD is a SalesP_DataDictionary
30446>>>    End_Object 
30447>>>
30447>>>    Object oOrderHea_DD is a OrderHea_DataDictionary
30449>>>        Set DDO_Server To oCustomer_DD
30450>>>        Set DDO_Server To oSalesP_DD
30451>>>        // this lets you save a new parent DD record from within child DD
30451>>>        Set Allow_Foreign_New_Save_State to True
30452>>>    End_Object 
30453>>>
30453>>>    Object oOrderDtl_DD is a OrderDtl_DataDictionary
30455>>>        Set DDO_Server To oOrderHea_DD
30456>>>        Set DDO_Server To oInvt_DD
30457>>>        Set Constrain_File To OrderHea.File_Number
30458>>>
30458>>>        // set the default price and adjust the display total
30458>>>        Procedure SetPriceDefault Number nNum
30461>>>            Set Field_Changed_Value Field OrderDtl.Price to nNum
30462>>>            Send Adjust_Display_total 
30463>>>        End_Procedure
30464>>>    End_Object 
30465>>>
30465>>>    Set Main_DD To oOrderHea_DD
30466>>>    Set Server  To oOrderHea_DD
30467>>>
30467>>>
30467>>>    Object oWebMainPanel is a cWebPanel
30469>>>        Set piColumnCount to 10
30470>>>
30470>>>        Object oOrderHeaOrder_Number is a cWebForm
30472>>>            Entry_Item OrderHea.Order_Number
30473>>>            Set piColumnSpan to 3
30474>>>            Set piColumnIndex to 0
30475>>>            Set psLabel to "Order Number:"
30476>>>            Set peLabelAlign to alignRight
30477>>>        End_Object 
30478>>>
30478>>>        Object oCustomerCustomer_Number is a cWebForm
30480>>>            Entry_Item Customer.Customer_Number
30481>>>            Set piColumnSpan to 3
30482>>>            Set piColumnIndex to 3
30483>>>            Set psLabel to "Customer Number:"
30484>>>            Set peLabelAlign to alignRight
30485>>>        End_Object 
30486>>>
30486>>>        Object oOrderHeaOrder_Date is a cWebDateForm
30488>>>            Entry_Item OrderHea.Order_Date
30489>>>            Set piColumnSpan to 4
30490>>>            Set piColumnIndex to 6
30491>>>            Set psLabel to "Order Date:"
30492>>>            Set peLabelAlign to alignRight
30493>>>        End_Object 
30494>>>
30494>>>        Object oCustomerName is a cWebForm
30496>>>            Entry_Item Customer.Name
30497>>>            Set piColumnSpan to 6
30498>>>            Set piColumnIndex to 0
30499>>>            Set psLabel to "Customer Name:"
30500>>>            Set peLabelAlign to alignRight
30501>>>        End_Object 
30502>>>
30502>>>        Object oCustomerAddress is a cWebForm
30504>>>            Entry_Item Customer.Address
30505>>>            Set piColumnSpan to 6
30506>>>            Set piColumnIndex to 0
30507>>>            Set psLabel to "Street Address:"
30508>>>            Set peLabelAlign to alignRight
30509>>>        End_Object 
30510>>>
30510>>>        Object oCustomerCity is a cWebForm
30512>>>            Entry_Item Customer.City
30513>>>            Set piColumnSpan to 3
30514>>>            Set piColumnIndex to 0
30515>>>            Set psLabel to "City:"
30516>>>            Set peLabelAlign to alignRight
30517>>>        End_Object 
30518>>>
30518>>>        Object oCustomerZip is a cWebForm
30520>>>            Entry_Item Customer.Zip
30521>>>            Set piColumnSpan to 3
30522>>>            Set piColumnIndex to 3
30523>>>            Set psLabel to "Zip:"
30524>>>            Set peLabelAlign to alignRight
30525>>>        End_Object 
30526>>>
30526>>>        Object oOrderHeaOrdered_By is a cWebForm
30528>>>            Entry_Item OrderHea.Ordered_By
30529>>>            Set piColumnSpan to 3
30530>>>            Set piColumnIndex to 7
30531>>>            Set psLabel to "Ordered By:"
30532>>>            Set peLabelAlign to alignRight
30533>>>        End_Object 
30534>>>
30534>>>        Object oCustomerState is a cWebCombo
30536>>>            Entry_Item Customer.State
30537>>>            Set piColumnSpan to 3
30538>>>            Set piColumnIndex to 0
30539>>>            Set psLabel to "State:"
30540>>>            Set peLabelAlign to alignRight
30541>>>        End_Object 
30542>>>
30542>>>        Object oSalesPID is a cWebParentCombo
30544>>>            Entry_Item SalesP.Name
30545>>>            Set piColumnSpan to 5
30546>>>            Set piColumnIndex to 5
30547>>>            Set psLabel to "Salesperson:"
30548>>>            Set peLabelAlign to alignRight
30549>>>        End_Object 
30550>>>
30550>>>        Object oOrderHeaTerms is a cWebCombo
30552>>>            Entry_Item OrderHea.Terms
30553>>>            Set piColumnSpan to 5
30554>>>            Set piColumnIndex to 0
30555>>>            Set psLabel to "Terms:"
30556>>>            Set peLabelAlign to alignRight
30557>>>        End_Object 
30558>>>
30558>>>        Object oOrderHeaShip_Via is a cWebCombo
30560>>>            Entry_Item OrderHea.Ship_Via
30561>>>            Set piColumnSpan to 5
30562>>>            Set piColumnIndex to 5
30563>>>            Set psLabel to "Ship Via:"
30564>>>            Set peLabelAlign to alignRight
30565>>>        End_Object 
30566>>>
30566>>>        Object oDetailGrid is a cWebGrid
30568>>>            Set Server to oOrderDtl_DD
30569>>>            Set piOrdering to 1
30570>>>            Set pbFillHeight to True
30571>>>            Set piColumnSpan to 10
30572>>>            Set piMinHeight to 200
30573>>>
30573>>>            Object oInvtItem_ID is a cWebColumn
30575>>>                Entry_Item Invt.Item_ID
30576>>>                Set psCaption to "Item ID"
30577>>>                Set piWidth to 130
30578>>>            End_Object 
30579>>>
30579>>>            Object oInvtDescription is a cWebColumn
30581>>>                Entry_Item Invt.Description
30582>>>                Set psCaption to "Description"
30583>>>                Set piWidth to 320
30584>>>            End_Object 
30585>>>
30585>>>            Object oInvtUnit_Price is a cWebColumn
30587>>>                Entry_Item Invt.Unit_Price
30588>>>                Set psCaption to "Unit Price"
30589>>>                Set piWidth to 94
30590>>>            End_Object 
30591>>>
30591>>>            Object oOrderDtlPrice is a cWebColumn
30593>>>                Entry_Item OrderDtl.Price
30594>>>                Set psCaption to "Price"
30595>>>                Set piWidth to 94
30596>>>                Set pbServerOnChange to True
30597>>>                
30597>>>                Procedure OnChange String sNewValue String sOldValue
30600>>>                    Send Adjust_Display_total of oOrderDtl_DD
30601>>>                End_Procedure
30602>>>            End_Object 
30603>>>
30603>>>            Object oOrderDtlQty_Ordered is a cWebColumn
30605>>>                Entry_Item OrderDtl.Qty_Ordered
30606>>>                Set psCaption to "Quantity"
30607>>>                Set piWidth to 94
30608>>>                Set pbServerOnChange to True
30609>>>                
30609>>>                Procedure OnChange String sNewValue String sOldValue
30612>>>                    Send Adjust_Display_total of oOrderDtl_DD
30613>>>                End_Procedure
30614>>>            End_Object 
30615>>>
30615>>>            Object oOrderDtlExtended_Price is a cWebColumn
30617>>>                Entry_Item OrderDtl.Extended_Price
30618>>>                Set psCaption to "Total"
30619>>>                Set piWidth to 115
30620>>>            End_Object 
30621>>>        End_Object 
30622>>>        Object oOrderHea_Order_Total is a cWebForm
30624>>>            Entry_Item OrderHea.Order_Total
30625>>>            Set psLabel to "Order Total:"
30626>>>            
30626>>>            Set piColumnIndex to 6
30627>>>            Set peLabelAlign to alignRight
30628>>>            Set piColumnSpan to 4
30629>>>        End_Object
30630>>>    End_Object 
30631>>>
30631>>>End_Object 
30632>    Use Customer.wo
Including file: Customer.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\Customer.wo)
30632>>>// Customer Maintenance
30632>>>//
30632>>>
30632>>>Use cWebView.pkg
30632>>>Use cWebPanel.pkg
30632>>>Use cWebForm.pkg
30632>>>Use cWebCheckBox.pkg
30632>>>Use cWebTabContainer.pkg
30632>>>Use cWebTabPage.pkg
30632>>>Use cWebCombo.pkg
30632>>>Use cWebEdit.pkg
30632>>>
30632>>>Use Customer.DD
30632>>>
30632>>>Object oCustomer is a cWebView
30634>>>    Set piColumnCount to 10
30635>>>    Set psCaption to "Customer Maintenance"
30636>>>    Set piWidth to 600
30637>>>
30637>>>
30637>>>    Object oCustomer_DD is a Customer_DataDictionary
30639>>>    End_Object 
30640>>>
30640>>>    Set Main_DD To oCustomer_DD
30641>>>    Set Server  To oCustomer_DD
30642>>>
30642>>>    Object oWebMainPanel is a cWebPanel
30644>>>        Set piColumnCount to 10
30645>>>
30645>>>        Object oCustomerCustomer_Number is a cWebForm
30647>>>            Entry_Item Customer.Customer_Number
30648>>>            Set piColumnSpan to 4
30649>>>            Set piColumnIndex to 0
30650>>>            Set psLabel to "Customer Num:"
30651>>>            Set peLabelAlign to alignRight
30652>>>        End_Object 
30653>>>
30653>>>        Object oCustomerName is a cWebForm
30655>>>            Entry_Item Customer.Name
30656>>>            Set piColumnSpan to 6
30657>>>            Set piColumnIndex to 4
30658>>>            Set psLabel to "Name:"
30659>>>            Set peLabelAlign to alignRight
30660>>>            Set piLabelOffset to 60
30661>>>        End_Object 
30662>>>
30662>>>        Object oWebTabContainer is a cWebTabContainer
30664>>>            Set piColumnSpan to 10
30665>>>            Set pbShowLabel to False
30666>>>
30666>>>            Object oAddress_page is a cWebTabPage
30668>>>                Set piColumnCount to 10
30669>>>                Set psCaption to "Address"
30670>>>
30670>>>                Object oCustomerAddress is a cWebForm
30672>>>                    Entry_Item Customer.Address
30673>>>                    Set piColumnSpan to 9
30674>>>                    Set piColumnIndex to 0
30675>>>                    Set psLabel to "Street Address:"
30676>>>                    Set peLabelAlign to alignRight
30677>>>                End_Object 
30678>>>
30678>>>                Object oCustomerCity is a cWebForm
30680>>>                    Entry_Item Customer.City
30681>>>                    Set piColumnSpan to 5
30682>>>                    Set piColumnIndex to 0
30683>>>                    Set psLabel to "City / State / Zip:"
30684>>>                    Set peLabelAlign to alignRight
30685>>>                End_Object 
30686>>>
30686>>>                Object oCustomerState is a cWebCombo
30688>>>                    Entry_Item Customer.State
30689>>>                    Set piColumnSpan to 2
30690>>>                    Set piColumnIndex to 5
30691>>>                    Set pbShowLabel to False
30692>>>                    Set peLabelAlign to alignRight
30693>>>                End_Object 
30694>>>
30694>>>                Object oCustomerZip is a cWebForm
30696>>>                    Entry_Item Customer.Zip
30697>>>                    Set piColumnSpan to 2
30698>>>                    Set piColumnIndex to 7
30699>>>                    Set pbShowLabel to False
30700>>>                    Set peLabelAlign to alignRight
30701>>>                End_Object 
30702>>>
30702>>>                Object oCustomerPhone_Number is a cWebForm
30704>>>                    Entry_Item Customer.Phone_Number
30705>>>                    Set piColumnSpan to 5
30706>>>                    Set piColumnIndex to 0
30707>>>                    Set psLabel to "Phone Number:"
30708>>>                    Set peLabelAlign to alignRight
30709>>>                End_Object 
30710>>>
30710>>>                Object oCustomerFax_Number is a cWebForm
30712>>>                    Entry_Item Customer.Fax_Number
30713>>>                    Set piColumnSpan to 4
30714>>>                    Set piColumnIndex to 5
30715>>>                    Set psLabel to "Fax:"
30716>>>                    Set peLabelAlign to alignRight
30717>>>                    Set piLabelOffset to 50
30718>>>                End_Object 
30719>>>
30719>>>                Object oCustomerEMail_Address is a cWebForm
30721>>>                    Entry_Item Customer.EMail_Address
30722>>>                    Set piColumnSpan to 8
30723>>>                    Set piColumnIndex to 0
30724>>>                    Set psLabel to "E-Mail Address:"
30725>>>                    Set peLabelAlign to alignRight
30726>>>                End_Object 
30727>>>
30727>>>                Object oCustomerStatus is a cWebCheckBox
30729>>>                    Entry_Item Customer.Status
30730>>>                    Set piColumnIndex to 0
30731>>>                    Set psCaption to "Active Customer"
30732>>>                    Set piColumnSpan to 8
30733>>>                    Set pbShowLabel to True
30734>>>                End_Object 
30735>>>            End_Object 
30736>>>
30736>>>            Object oBalances_page is a cWebTabPage
30738>>>                Set piColumnCount to 12
30739>>>                Set psCaption to "Balances"
30740>>>
30740>>>                Object oCustomerCredit_Limit is a cWebForm
30742>>>                    Entry_Item Customer.Credit_Limit
30743>>>                    Set piColumnSpan to 6
30744>>>                    Set piColumnIndex to 0
30745>>>                    Set psLabel to "Credit Limit:"
30746>>>                    Set peLabelAlign to alignRight
30747>>>                End_Object 
30748>>>
30748>>>                Object oCustomerPurchases is a cWebForm
30750>>>                    Entry_Item Customer.Purchases
30751>>>                    Set piColumnSpan to 6
30752>>>                    Set piColumnIndex to 0
30753>>>                    Set psLabel to "Total Purchases:"
30754>>>                    Set peLabelAlign to alignRight
30755>>>                End_Object 
30756>>>
30756>>>                Object oCustomerBalance is a cWebForm
30758>>>                    Entry_Item Customer.Balance
30759>>>                    Set piColumnSpan to 6
30760>>>                    Set piColumnIndex to 0
30761>>>                    Set psLabel to "Balance Due:"
30762>>>                    Set peLabelAlign to alignRight
30763>>>                End_Object 
30764>>>            End_Object 
30765>>>
30765>>>            Object oComments_page is a cWebTabPage
30767>>>                Set piColumnCount to 10
30768>>>                Set psCaption to "Comments"
30769>>>
30769>>>                Object oCustomerComments is a cWebEdit
30771>>>                    Entry_Item Customer.Comments
30772>>>                    Set piColumnSpan to 0
30773>>>                    Set piColumnIndex to 0
30774>>>                    Set pbShowLabel to False
30775>>>                    Set pbFillHeight to True
30776>>>                    Set peLabelAlign to alignRight
30777>>>                End_Object 
30778>>>            End_Object 
30779>>>        End_Object 
30780>>>    End_Object 
30781>>>
30781>>>End_Object 
30782>    Use Inventory.wo
Including file: Inventory.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\Inventory.wo)
30782>>>// Inventory Maintenance
30782>>>//
30782>>>
30782>>>Use cWebView.pkg
30782>>>Use cWebPanel.pkg
30782>>>Use cWebForm.pkg
30782>>>
30782>>>Use Vendor.DD
30782>>>Use Invt.DD
30782>>>
30782>>>Object oInventory is a cWebView
30784>>>    Set piColumnCount to 10
30785>>>    Set psCaption to "Inventory Maintenance"
30786>>>    Set piWidth to 700
30787>>>
30787>>>    Object oVendor_DD is a Vendor_DataDictionary
30789>>>    End_Object 
30790>>>
30790>>>    Object oInvt_DD is a Invt_DataDictionary
30792>>>        Set DDO_Server To oVendor_DD
30793>>>    End_Object 
30794>>>
30794>>>    Set Main_DD To oInvt_DD
30795>>>    Set Server  To oInvt_DD
30796>>>
30796>>>
30796>>>    Object oWebMainPanel is a cWebPanel
30798>>>        Set piColumnCount to 10
30799>>>
30799>>>        Object oInvtItem_ID is a cWebForm
30801>>>            Entry_Item Invt.Item_ID
30802>>>            Set piColumnSpan to 4
30803>>>            Set piColumnIndex to 0
30804>>>            Set psLabel to "Item ID:"
30805>>>            Set peLabelAlign to alignRight
30806>>>        End_Object 
30807>>>
30807>>>        Object oInvtDescription is a cWebForm
30809>>>            Entry_Item Invt.Description
30810>>>            Set piColumnSpan to 6
30811>>>            Set piColumnIndex to 4
30812>>>            Set psLabel to "Description:"
30813>>>            Set peLabelAlign to alignRight
30814>>>        End_Object 
30815>>>
30815>>>        Object oVendorID is a cWebForm
30817>>>            Entry_Item Vendor.ID
30818>>>            Set piColumnSpan to 4
30819>>>            Set piColumnIndex to 0
30820>>>            Set psLabel to "Vendor ID:"
30821>>>            Set peLabelAlign to alignRight
30822>>>        End_Object 
30823>>>
30823>>>        Object oVendorName is a cWebForm
30825>>>            Entry_Item Vendor.Name
30826>>>            Set piColumnSpan to 6
30827>>>            Set piColumnIndex to 4
30828>>>            Set psLabel to "Vendor Name:"
30829>>>            Set peLabelAlign to alignRight
30830>>>        End_Object 
30831>>>
30831>>>        Object oInvtVendor_Part_ID is a cWebForm
30833>>>            Entry_Item Invt.Vendor_Part_ID
30834>>>            Set piColumnSpan to 5
30835>>>            Set piColumnIndex to 0
30836>>>            Set psLabel to "Vendor Part ID:"
30837>>>            Set peLabelAlign to alignRight
30838>>>        End_Object 
30839>>>
30839>>>        Object oInvtUnit_Price is a cWebForm
30841>>>            Entry_Item Invt.Unit_Price
30842>>>            Set piColumnSpan to 4
30843>>>            Set piColumnIndex to 0
30844>>>            Set psLabel to "Unit Price:"
30845>>>            Set peLabelAlign to alignRight
30846>>>        End_Object 
30847>>>
30847>>>        Object oInvtOn_Hand is a cWebForm
30849>>>            Entry_Item Invt.On_Hand
30850>>>            Set piColumnSpan to 3
30851>>>            Set piColumnIndex to 4
30852>>>            Set psLabel to "Qty On Hand:"
30853>>>            Set peLabelAlign to alignRight
30854>>>        End_Object 
30855>>>    End_Object 
30856>>>
30856>>>End_Object 
30857>    Use Vendor.wo
Including file: Vendor.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\Vendor.wo)
30857>>>// Vendor Maintenance
30857>>>//
30857>>>
30857>>>Use cWebView.pkg
30857>>>Use cWebPanel.pkg
30857>>>Use cWebForm.pkg
30857>>>Use cWebCombo.pkg
30857>>>
30857>>>Use Vendor.DD
30857>>>
30857>>>Object oVendor is a cWebView
30859>>>    Set piColumnCount to 10
30860>>>    Set psCaption to "Vendor Maintenance"
30861>>>    Set piWidth to 700
30862>>>
30862>>>    Object oVendor_DD is a Vendor_DataDictionary
30864>>>    End_Object 
30865>>>
30865>>>    Set Main_DD To oVendor_DD
30866>>>    Set Server  To oVendor_DD
30867>>>
30867>>>
30867>>>    Object oWebMainPanel is a cWebPanel
30869>>>        Set piColumnCount to 10
30870>>>
30870>>>        Object oVendorID is a cWebForm
30872>>>            Entry_Item Vendor.ID
30873>>>            Set piColumnSpan to 4
30874>>>            Set piColumnIndex to 0
30875>>>            Set psLabel to "ID:"
30876>>>            Set peLabelAlign to alignRight
30877>>>        End_Object 
30878>>>
30878>>>        Object oVendorName is a cWebForm
30880>>>            Entry_Item Vendor.Name
30881>>>            Set piColumnSpan to 6
30882>>>            Set piColumnIndex to 4
30883>>>            Set psLabel to "Name:"
30884>>>            Set peLabelAlign to alignRight
30885>>>            Set piLabelOffset to 70
30886>>>        End_Object 
30887>>>
30887>>>        Object oVendorAddress is a cWebForm
30889>>>            Entry_Item Vendor.Address
30890>>>            Set piColumnSpan to 10
30891>>>            Set piColumnIndex to 0
30892>>>            Set psLabel to "Street:"
30893>>>            Set peLabelAlign to alignRight
30894>>>        End_Object 
30895>>>
30895>>>        Object oVendorCity is a cWebForm
30897>>>            Entry_Item Vendor.City
30898>>>            Set piColumnSpan to 5
30899>>>            Set piColumnIndex to 0
30900>>>            Set psLabel to "City \ State \ ZIP:"
30901>>>            Set peLabelAlign to alignRight
30902>>>        End_Object 
30903>>>
30903>>>        Object oVendorState is a cWebCombo
30905>>>            Entry_Item Vendor.State
30906>>>            Set piColumnSpan to 3
30907>>>            Set piColumnIndex to 5
30908>>>            Set peLabelAlign to alignRight
30909>>>            Set pbShowLabel to False
30910>>>        End_Object 
30911>>>
30911>>>        Object oVendorZip is a cWebForm
30913>>>            Entry_Item Vendor.Zip
30914>>>            Set piColumnSpan to 2
30915>>>            Set piColumnIndex to 8
30916>>>            Set peLabelAlign to alignRight
30917>>>            Set pbShowLabel to False
30918>>>        End_Object 
30919>>>
30919>>>        Object oVendorPhone_Number is a cWebForm
30921>>>            Entry_Item Vendor.Phone_Number
30922>>>            Set piColumnSpan to 5
30923>>>            Set piColumnIndex to 0
30924>>>            Set psLabel to "Phone:"
30925>>>            Set peLabelAlign to alignRight
30926>>>        End_Object 
30927>>>
30927>>>        Object oVendorFax_Number is a cWebForm
30929>>>            Entry_Item Vendor.Fax_Number
30930>>>            Set piColumnSpan to 5
30931>>>            Set piColumnIndex to 5
30932>>>            Set psLabel to "Fax:"
30933>>>            Set peLabelAlign to alignRight
30934>>>        End_Object 
30935>>>    End_Object 
30936>>>
30936>>>End_Object 
30937>    Use SalesPerson.wo
Including file: SalesPerson.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\SalesPerson.wo)
30937>>>// Sales Person Maintenance
30937>>>//
30937>>>
30937>>>Use cWebView.pkg
30937>>>Use cWebPanel.pkg
30937>>>Use cWebForm.pkg
30937>>>
30937>>>Use SalesP.DD
30937>>>
30937>>>Object oSalesPerson is a cWebView
30939>>>    Set piColumnCount to 10
30940>>>    Set psCaption to "Sales Person Maintenance"
30941>>>    Set piWidth to 600
30942>>>
30942>>>    Object oSalesP_DD is a SalesP_DataDictionary
30944>>>    End_Object 
30945>>>
30945>>>    Set Main_DD To oSalesP_DD
30946>>>    Set Server  To oSalesP_DD
30947>>>
30947>>>
30947>>>    Object oWebMainPanel is a cWebPanel
30949>>>        Set piColumnCount to 10
30950>>>
30950>>>        Object oSalesPID is a cWebForm
30952>>>            Entry_Item SalesP.ID
30953>>>            Set piColumnSpan to 3
30954>>>            Set piColumnIndex to 0
30955>>>            Set psLabel to "ID:"
30956>>>            Set peLabelAlign to alignRight
30957>>>            Set piLabelOffset to 50
30958>>>        End_Object 
30959>>>
30959>>>        Object oSalesPName is a cWebForm
30961>>>            Entry_Item SalesP.Name
30962>>>            Set piColumnSpan to 7
30963>>>            Set piColumnIndex to 3
30964>>>            Set psLabel to "Name:"
30965>>>            Set peLabelAlign to alignRight
30966>>>            Set piLabelOffset to 50
30967>>>        End_Object 
30968>>>    End_Object 
30969>>>
30969>>>End_Object 
30970>    
30970>    Use CustomerListSample.wo
Including file: CustomerListSample.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\CustomerListSample.wo)
30970>>>Use cWebView.pkg
30970>>>Use cWebPanel.pkg
30970>>>Use cWebForm.pkg
30970>>>Use cWebRadio.pkg
30970>>>Use cWebCheckbox.pkg
30970>>>Use cWebForm.pkg
30970>>>Use cWebButton.pkg
30970>>>Use cWebLabel.pkg
30970>>>Use cWebGroup.pkg
30970>>>
30970>>>// Note: This sample does not actually run a DataFlex Reports report. The .pdf file that would normally
30970>>>// be generated by DataFlex Reports is a previously generated file, which was installed with DataFlex.
30970>>>
30970>>>// If you have an installed version of DataFlex Reports compatible with this version of DataFlex, then
30970>>>// you could comment out the code below to generate a live DataFlex Reports report.
30970>>>Object oCustomerListSample is a cWebView
30972>>>    Set piWidth to 700
30973>>>    Set psCaption to "Customer List (DataFlex Reports)"
30974>>>
30974>>>// If you are using DataFlex Reports, here is how you would actually
30974>>>// initialize, run and save the report to a PDF file.
30974>>>
30974>>>//    Use cDRReport.pkg // Move this line to the other USE statement lines above the cWebView component
30974>>>//
30974>>>//    Object oReport is a cDRReport
30974>>>//        Procedure OnInitializeReport
30974>>>//            Send SetFilters
30974>>>//            Send SetSortFields
30974>>>//        End_Procedure
30974>>>//
30974>>>//        Procedure SetFilters
30974>>>//            Integer[] iCustomerCustomerNumbers
30974>>>//            String[] sCustomerNames
30974>>>//            String sReportId
30974>>>//
30974>>>//            Get psReportId to sReportId
30974>>>//            Send RemoveAllFilters sReportId  // clear any previous filters
30974>>>//
30974>>>//            WebGet psValue of oFromCustomerCustomerNumber to iCustomerCustomerNumbers[0]
30974>>>//            WebGet psValue of oToCustomerCustomerNumber to iCustomerCustomerNumbers[1]
30974>>>//
30974>>>//            Move (SortArray (iCustomerCustomerNumbers)) to iCustomerCustomerNumbers
30974>>>//            If (iCustomerCustomerNumbers[0] <> 0) Begin
30974>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Customer_Number}" C_DRGreaterThanOrEqual iCustomerCustomerNumbers[0]
30974>>>//            End
30974>>>//            If (iCustomerCustomerNumbers[1] <> 0) Begin
30974>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Customer_Number}" C_DRLessThanOrEqual iCustomerCustomerNumbers[1]
30974>>>//            End
30974>>>//
30974>>>//            WebGet psValue of oFromCustomerName to sCustomerNames[0]
30974>>>//            WebGet psValue of oToCustomerName to sCustomerNames[1]
30974>>>//
30974>>>//            Move (Trim (sCustomerNames[0])) to sCustomerNames[0]
30974>>>//            Move (Trim (sCustomerNames[1])) to sCustomerNames[1]
30974>>>//            Move (SortArray (sCustomerNames)) to sCustomerNames
30974>>>//
30974>>>//            If (sCustomerNames[0] <> "") Begin
30974>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Name}" C_DRGreaterThanOrEqual sCustomerNames[0]
30974>>>//            End
30974>>>//            If (sCustomerNames[1] <> "") Begin
30974>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Name}" C_DRLessThanOrEqual sCustomerNames[1]
30974>>>//            End
30974>>>//        End_Procedure
30974>>>//
30974>>>//        Procedure SetSortFields
30974>>>//            Integer iRadio
30974>>>//            Boolean bAscending
30974>>>//
30974>>>//            WebGet psValue of oSortNumber to iRadio
30974>>>//            Get GetChecked of oSortAscending to bAscending
30974>>>//            
30974>>>//            Send RemoveAllRecordSortFields C_USEMAINDRREPORTID
30974>>>//            If (iRadio=0) Begin
30974>>>//                Send AddRecordSortField C_USEMAINDRREPORTID "{Customer.Customer_Number}" (If(bAscending, C_drAscending, C_drDescending))
30974>>>//            End
30974>>>//            Else Begin
30974>>>//                Send AddRecordSortField C_USEMAINDRREPORTID "{Customer.Name}" (If(bAscending, C_DRAscending, C_DRDescending))
30974>>>//            End
30974>>>//        End_Procedure
30974>>>//
30974>>>//        Function GenerateReport Returns String
30974>>>//            String sReportId sPath
30974>>>//            DRPDFExportOptions PDFReportOptions
30974>>>//            Boolean bCanceled
30974>>>//
30974>>>//            Set psReportName to "CustomerList.dr"
30974>>>//            Get OpenReport to sReportId
30974>>>//
30974>>>//            If (sReportId <> "") Begin
30974>>>//                Get DefaultPDFExportOptions to PDFReportOptions
30974>>>//                Move C_drHigh to PDFReportOptions.iImageQuality
30974>>>//                Set pPDFExportOptions to PDFReportOptions
30974>>>//
30974>>>//                Get ReportCacheFileName '.pdf' to sPath
30974>>>//
30974>>>//                If (sPath <> "") Begin
30974>>>//                    Send ExportReport C_DRPDF sPath
30974>>>//
30974>>>//                    // see if report ran ok, if not return empty path
30974>>>//                    Get pbCanceled to bCanceled
30974>>>//                    If (bCanceled) Begin
30974>>>//                        Move "" to sPath
30974>>>//                    End
30974>>>//                End
30974>>>//
30974>>>//                Send CloseReport sReportId
30974>>>//            End
30974>>>//            
30974>>>//            Function_Return sPath
30974>>>//        End_Function
30974>>>//    End_Object
30974>>>
30974>>>// This is a dummy object that is used in place of the report PDF that would have been
30974>>>// generated using DataFlex Reports. Note that this also shows you how to download a
30974>>>// static file (could be any kind of file) from a secure non-web location. In this case,
30974>>>// the dummy report is located in \Data, which is not a web path.
30974>>>
30974>>>    Object oReport is a cObject
30976>>>        Function GenerateReport Returns String
30979>>>            String sPath
30979>>>
30979>>>            Get GetReportsCache of ghoWebApp True to sPath
30980>>>            If (sPath <> "") Begin
30982>>>                Move (sPath + "\CustomerListSample.pdf") to sPath
30983>>>            End
30983>>>>
30983>>>            Function_Return sPath
30984>>>        End_Function
30985>>>    End_Object
30986>>>
30986>>>    Procedure RunReport
30989>>>        String sFile sUrl
30989>>>
30989>>>        // generate the report file and return its full file path name (not a URL)
30989>>>        Get GenerateReport of oReport to sFile
30990>>>
30990>>>        If (sFile="") Begin
30992>>>            Send ShowInfoBox "The Report could not be generated"
30993>>>        End
30993>>>>
30993>>>        Else Begin
30994>>>            Get DownloadURL of ghoWebResourceManager sFile to sUrl
30995>>>
30995>>>            // this is used to show a PDF file in a new browser tab or window
30995>>>            // use btNewTab to open a new browser tab page
30995>>>            // use btNewWindow to open a new browser window
30995>>>            Send NavigateToPage sUrl btNewTab
30996>>>
30996>>>            // this is used to show a PDF file in an embedded viewer within this view
30996>>>            //WebSet psUrl of oWebIFrame1 to sUrl
30996>>>        End
30996>>>>
30996>>>    End_Procedure
30997>>>
30997>>>    Object oWebMainPanel is a cWebPanel
30999>>>        Set piColumnCount to 10
31000>>>
31000>>>        Object oCustomerCustomerNumberGroup is a cWebGroup
31002>>>            Set piColumnSpan to 3
31003>>>            Set psCaption to "Customer Number:"
31004>>>            Set piColumnCount to 10
31005>>>
31005>>>            Object oFromCustomerCustomerNumber is a cWebform
31007>>>               Set psLabel to "From:"
31008>>>               Set piLabelOffset to 50
31009>>>               Set piColumnSpan to 0
31010>>>            End_Object
31011>>>
31011>>>            Object oToCustomerCustomerNumber is a cWebform
31013>>>               Set psLabel to "To:"
31014>>>               Set piLabelOffset to 50
31015>>>               Set piColumnSpan to 0
31016>>>            End_Object
31017>>>        End_Object
31018>>>
31018>>>        Object oWebLabel1 is a cWebLabel
31020>>>            Set piColumnSpan to 0
31021>>>            Set psCaption to "Note: This view simply displays a static file ('CustomerListSample.pdf'), so these settings do not really change the output."
31022>>>            Set piColumnIndex to 3
31023>>>        End_Object
31024>>>
31024>>>        Object oCustomerCustoNameGroup is a cWebGroup
31026>>>            Set psCaption to "Customer Name:"
31027>>>            Set piColumnSpan to 5
31028>>>            Set piColumnCount to 10
31029>>>
31029>>>            Object oFromCustomerName is a cWebform
31031>>>               Set psLabel to "From:"
31032>>>               Set piLabelOffset to 50
31033>>>               Set piColumnSpan to 0
31034>>>            End_Object
31035>>>
31035>>>            Object oToCustomerName is a cWebform
31037>>>               Set psLabel to "To:"
31038>>>               Set piLabelOffset to 50
31039>>>               Set piColumnSpan to 0
31040>>>            End_Object
31041>>>        End_Object
31042>>>
31042>>>        Object oSortOrderGroup is a cWebGroup
31044>>>            Set psCaption to "Order By:"
31045>>>            Set piColumnSpan to 5
31046>>>
31046>>>            Object oSortNumber is a cWebRadio
31048>>>               Set psCaption to "Customer Number"
31049>>>               Set psGroupName to "Sort"
31050>>>               Set psRadioValue to "0"
31051>>>            End_Object
31052>>>
31052>>>            Object oSortName is a cWebRadio
31054>>>               Set psCaption to "Customer Name"
31055>>>               Set psGroupName to "Sort"
31056>>>               Set psRadioValue to "1"
31057>>>            End_Object
31058>>>
31058>>>            Object oSortAscending is a cWebCheckbox
31060>>>               Set psCaption to "Ascending"
31061>>>               Set psChecked to 1
31062>>>               Set psUnChecked to 0
31063>>>               Set psValue to 1
31064>>>            End_Object
31065>>>        End_Object
31066>>>
31066>>>        Object oRunButton is a cWebButton
31068>>>            Set psCaption to "Run Report"
31069>>>            Set piColumnSpan to 3
31070>>>
31070>>>            Procedure OnClick
31073>>>                Send RunReport
31074>>>            End_Procedure
31075>>>        End_Object
31076>>>
31076>>>// this would be used if you wanted to output to an embedded window
31076>>>//        Object oWebIFrame1 is a cWebIFrame
31076>>>//           Set pbFillHeight to True
31076>>>//           Set pbShowBorder to True
31076>>>//        End_Object
31076>>>
31076>>>   End_Object
31077>>>End_Object
31078>    Use OrderListSample.wo
Including file: OrderListSample.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\OrderListSample.wo)
31078>>>Use cWebView.pkg
31078>>>Use cWebPanel.pkg
31078>>>Use cWebForm.pkg
31078>>>Use cWebRadio.pkg
31078>>>Use cWebCheckbox.pkg
31078>>>Use cWebForm.pkg
31078>>>Use cWebButton.pkg
31078>>>Use cWebLabel.pkg
31078>>>Use cWebGroup.pkg
31078>>>
31078>>>// Note: This sample does not actually run a DataFlex Reports report. The .pdf file that would normally
31078>>>// be generated by DataFlex Reports is a previously generated file which was installed with DataFlex.
31078>>>
31078>>>// If you have an installed version of DataFlex Reports compatible with this version of DataFlex, then
31078>>>// you could comment out the code below to generate a live DataFlex Reports report.
31078>>>Object oOrderListSample is a cWebView
31080>>>    Set psCaption to "Order List (DataFlex Reports)"
31081>>>    Set piWidth to 700
31082>>>    Set piColumnCount to 10
31083>>>
31083>>>// If you are using DataFlex Reports, here is how you would actually
31083>>>// initialize, run and save the report to a PDF file.
31083>>>
31083>>>//    Use cDRReport.pkg // Move this line to the other USE statement lines above the cWebView component
31083>>>//
31083>>>//    Object oReport is a cDRReport
31083>>>//        Procedure OnInitializeReport
31083>>>//            Send SetFilters
31083>>>//        End_Procedure
31083>>>//
31083>>>//        Procedure SetFilters
31083>>>//            Number nMinOrderTotal
31083>>>//            String sReportId
31083>>>//
31083>>>//            Get psReportId to sReportId
31083>>>//            Send RemoveAllFilters sReportId  // clear any previous filters
31083>>>//
31083>>>//            WebGet psValue of oFromOrderHeaOrderTotal to nMinOrderTotal
31083>>>//            // Send AddFilter C_USEMAINDRREPORTID "{OrderHea.Order_Total}" C_DRGreaterThanOrEqual nMinOrderTotal
31083>>>//            // psFilterFunction is displayed in the report's page header so we use this instead of AddFilter
31083>>>//            Set psFilterFunction C_USEMAINDRREPORTID to ('return ({OrderHea.Order_Total} > ' + String(nMinOrderTotal) + ')')
31083>>>//        End_Procedure
31083>>>//
31083>>>//        Function GenerateReport Returns String
31083>>>//            String sReportId sPath
31083>>>//            DRPDFExportOptions PDFReportOptions
31083>>>//            Boolean bCanceled
31083>>>//
31083>>>//            Set psReportName to "OrderList.DR"
31083>>>//            Get OpenReport to sReportId
31083>>>//
31083>>>//            If (sReportId <> "") Begin
31083>>>//                Get DefaultPDFExportOptions to PDFReportOptions
31083>>>//                Move C_drHigh to PDFReportOptions.iImageQuality
31083>>>//                Set pPDFExportOptions to PDFReportOptions
31083>>>//
31083>>>//                Get ReportCacheFileName '.pdf' to sPath
31083>>>//
31083>>>//                If (sPath <> "") Begin
31083>>>//                    Send ExportReport C_DRPDF sPath
31083>>>//
31083>>>//                    // see if report ran ok, if not return empty path
31083>>>//                    Get pbCanceled to bCanceled
31083>>>//                    If (bCanceled) Begin
31083>>>//                        Move "" to sPath
31083>>>//                    End
31083>>>//                End
31083>>>//
31083>>>//                Send CloseReport sReportId
31083>>>//            End
31083>>>//
31083>>>//            Function_Return sPath
31083>>>//        End_Function
31083>>>//    End_Object
31083>>>
31083>>>// This is a dummy object that is used in place of a report PDF file that would have been
31083>>>// generated using DataFlex Reports. Note that this also shows you how to download a
31083>>>// static file (could be any kind of file) from a secure non-web location. In this case,
31083>>>// the dummy report is located in \Data, which is not a web path.
31083>>>
31083>>>    Object oReport is a cObject
31085>>>        Function GenerateReport Returns String
31088>>>            String sPath
31088>>>
31088>>>            Get GetReportsCache of ghoWebApp True to sPath
31089>>>            If (sPath <> "") Begin
31091>>>                Move (sPath + "\OrderListSample.pdf") to sPath
31092>>>            End
31092>>>>
31092>>>            Function_Return sPath
31093>>>        End_Function
31094>>>    End_Object
31095>>>
31095>>>    Procedure RunReport
31098>>>        String sFile sUrl
31098>>>
31098>>>        // generate the report file and return its full file path name (not a URL)
31098>>>        Get GenerateReport of oReport to sFile
31099>>>
31099>>>        If (sFile="") Begin
31101>>>            Send ShowInfoBox "The Report could not be generated"
31102>>>        End
31102>>>>
31102>>>        Else Begin
31103>>>            Get DownloadURL of ghoWebResourceManager sFile to sUrl
31104>>>
31104>>>            // this is used to show a PDF file in a new browser tab or window
31104>>>            // use btNewTab to open a new browser tab page
31104>>>            // use btNewWindow to open a new browser window
31104>>>            Send NavigateToPage sUrl btNewTab
31105>>>
31105>>>            // this is used to show a PDF file in an embedded viewer within this view
31105>>>            //WebSet psUrl of oWebIFrame1 to sUrl
31105>>>        End
31105>>>>
31105>>>    End_Procedure
31106>>>
31106>>>    Object oOrderTotalGroup is a cWebGroup
31108>>>        Set psCaption to "Minimum Order Total:"
31109>>>        Set piColumnSpan to 3
31110>>>        Set piColumnCount to 6
31111>>>
31111>>>        Object oFromOrderHeaOrderTotal is a cWebForm
31113>>>            Set psLabel to "From:"
31114>>>            Set psValue to 5000
31115>>>            Set piColumnSpan to 6
31116>>>            Set piLabelOffset to 50
31117>>>        End_Object
31118>>>    End_Object
31119>>>
31119>>>    Object oWebLabel1 is a cWebLabel
31121>>>        Set piColumnSpan to 0
31122>>>        Set psCaption to "Note: This view simply displays a static file ('OrderListSample.pdf'), so this setting does not really change the output."
31123>>>        Set piColumnIndex to 3
31124>>>    End_Object
31125>>>
31125>>>    Object oRunButton is a cWebButton
31127>>>        Set psCaption to "Run Report"
31128>>>        Set piColumnSpan to 3
31129>>>
31129>>>        Procedure OnClick
31132>>>            Send RunReport
31133>>>        End_Procedure
31134>>>    End_Object
31135>>>
31135>>>// this would be used if you wanted to output to an embedded window
31135>>>//        Object oWebIFrame1 is a cWebIFrame
31135>>>//           Set pbFillHeight to True
31135>>>//           Set pbShowBorder to True
31135>>>//        End_Object
31135>>>End_Object
31136>    Use CustomerOrdersSample.wo
Including file: CustomerOrdersSample.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\CustomerOrdersSample.wo)
31136>>>Use cWebView.pkg
31136>>>Use cWebPanel.pkg
31136>>>Use cWebForm.pkg
31136>>>Use cWebRadio.pkg
31136>>>Use cWebCheckbox.pkg
31136>>>Use cWebForm.pkg
31136>>>Use cWebButton.pkg
31136>>>Use cWebLabel.pkg
31136>>>Use cWebIFrame.pkg
31136>>>Use cWebSpacer.pkg
31136>>>Use cWebGroup.pkg
31136>>>
31136>>>// Note: This sample does not actually run a DataFlex Reports report. The .pdf file that would normally
31136>>>// be generated by DataFlex Reports is a previously generated file, which was installed with DataFlex.
31136>>>
31136>>>// If you have an installed version of DataFlex Reports compatible with this version of DataFlex, then
31136>>>// you could comment out the code below to generate a live DataFlex Reports report.
31136>>>Object oCustomerOrdersSample is a cWebView
31138>>>    Set psCaption to "Customer Orders (DataFlex Reports)"
31139>>>    Set piMinWidth to 800
31140>>>    Set piColumnCount to 10
31141>>>
31141>>>// If you are using DataFlex Reports, here is how you would actually
31141>>>// initialize, run and save the report to a PDF file.
31141>>>//
31141>>>//    Use cDRReport.pkg // Move this line to the other USE statement lines above the cWebView component
31141>>>//
31141>>>//    Object oReport is a cDRReport
31141>>>//        Procedure OnInitializeReport
31141>>>//            Send SetFilters
31141>>>//        End_Procedure
31141>>>//
31141>>>//        Procedure SetFilters
31141>>>//            Integer[] iCustomerCustomerNumbers
31141>>>//            String sReportId
31141>>>//
31141>>>//            Get psReportId to sReportId
31141>>>//            Send RemoveAllFilters sReportId  // clear any previous filters
31141>>>//
31141>>>//            WebGet psValue of oFromCustomerCustomerNumber to iCustomerCustomerNumbers[0]
31141>>>//            WebGet psValue of oToCustomerCustomerNumber to iCustomerCustomerNumbers[1]
31141>>>//
31141>>>//            Move (SortArray (iCustomerCustomerNumbers)) to iCustomerCustomerNumbers
31141>>>//            If (iCustomerCustomerNumbers[0] <> 0) Begin
31141>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Customer_Number}" C_DRGreaterThanOrEqual iCustomerCustomerNumbers[0]
31141>>>//            End
31141>>>//            If (iCustomerCustomerNumbers[1] <> 0) Begin
31141>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Customer_Number}" C_DRLessThanOrEqual iCustomerCustomerNumbers[1]
31141>>>//            End
31141>>>//        End_Procedure
31141>>>//
31141>>>//        Function GenerateReport Returns String
31141>>>//            String sReportId sPath
31141>>>//            DRPDFExportOptions PDFReportOptions
31141>>>//            Boolean bCanceled
31141>>>//
31141>>>//            Set psReportName to "CustomerOrders.DR"
31141>>>//            Get OpenReport to sReportId
31141>>>//
31141>>>//            If (sReportId <> "") Begin
31141>>>//                Get DefaultPDFExportOptions to PDFReportOptions
31141>>>//                Move C_drHigh to PDFReportOptions.iImageQuality
31141>>>//                Set pPDFExportOptions to PDFReportOptions
31141>>>//
31141>>>//                Get ReportCacheFileName '.pdf' to sPath
31141>>>//                If (sPath <> "") Begin
31141>>>//                    Send ExportReport C_DRPDF sPath
31141>>>//
31141>>>//                    // see if report ran ok, if not return empty path
31141>>>//                    Get pbCanceled to bCanceled
31141>>>//                    If (bCanceled) Begin
31141>>>//                        Move "" to sPath
31141>>>//                    End
31141>>>//                End
31141>>>//
31141>>>//                Send CloseReport sReportId
31141>>>//            End
31141>>>//
31141>>>//            Function_Return sPath
31141>>>//        End_Function
31141>>>//    End_Object
31141>>>
31141>>>// This is a dummy object that is used in place of a report PDF that would have been
31141>>>// generated using DataFlex Reports. Note that this also shows you how to download a
31141>>>// static file (could be any kind of file) from a secure non-web location. In this case,
31141>>>// the dummy report results is located in \ReportsCache folder, which is not a web path.
31141>>>
31141>>>    Object oReport is a cObject
31143>>>        Function GenerateReport Returns String
31146>>>            String sPath
31146>>>
31146>>>            Get GetReportsCache of ghoWebApp True to sPath
31147>>>            If (sPath <> "") Begin
31149>>>                Move (sPath + "\CustomerOrderSample.pdf") to sPath
31150>>>            End
31150>>>>
31150>>>            Function_Return sPath
31151>>>        End_Function
31152>>>    End_Object
31153>>>
31153>>>    Procedure RunReport
31156>>>        String sFile sUrl
31156>>>
31156>>>        // generate the report file and return its full file path name (not a URL)
31156>>>        Get GenerateReport of oReport to sFile
31157>>>
31157>>>        If (sFile="") Begin
31159>>>            Send ShowInfoBox "The Report could not be generated"
31160>>>        End
31160>>>>
31160>>>        Else Begin
31161>>>            Get DownloadURL of ghoWebResourceManager sFile to sUrl
31162>>>
31162>>>            // this is used to show a PDF file in a new browser tab or window
31162>>>            // use btNewTab to open a new browser tab page
31162>>>            // use btNewWindow to open a new browser window
31162>>>            //Send NavigateToPage sUrl btNewTab
31162>>>
31162>>>            // this is used to show PDF in an embedded viewer within this view
31162>>>            WebSet psUrl of oWebIFrame to sUrl
31163>>>        End
31163>>>>
31163>>>    End_Procedure
31164>>>
31164>>>    Object oWebPanelTop is a cWebPanel
31166>>>        Set peRegion to prTop
31167>>>
31167>>>        Object oWebPanelTopLeft is a cWebPanel
31169>>>            Set peRegion to prLeft
31170>>>            Set piWidth to 200
31171>>>
31171>>>            Object oCustomerCustomerNumberGroup is a cWebGroup
31173>>>                Set psCaption to "Customer Number:"
31174>>>                Set piColumnSpan to 0
31175>>>                Set piColumnCount to 10
31176>>>
31176>>>                Object oFromCustomerCustomerNumber is a cWebform
31178>>>                   Set psLabel to "From:"
31179>>>                   Set piLabelOffset to 50
31180>>>                   Set piColumnSpan to 0
31181>>>                End_Object
31182>>>
31182>>>                Object oToCustomerCustomerNumber is a cWebform
31184>>>                   Set psLabel to "To:"
31185>>>                   Set piLabelOffset to 50
31186>>>                   Set piColumnSpan to 0
31187>>>                End_Object
31188>>>            End_Object
31189>>>
31189>>>            Object oRunButton is a cWebButton
31191>>>                Set psCaption to "Run Report"
31192>>>                Set piColumnSpan to 0
31193>>>
31193>>>                Procedure OnClick
31196>>>                    Send RunReport
31197>>>                End_Procedure
31198>>>            End_Object
31199>>>        End_Object
31200>>>
31200>>>        Object oWebPanelTopCenter is a cWebPanel
31202>>>            Set peRegion to prCenter
31203>>>
31203>>>            Object oWebLabel1 is a cWebLabel
31205>>>                Set piColumnSpan to 0
31206>>>                Set psCaption to "Note: This view simply displays a static file ('CustomerOrderSample.pdf'), so these settings do not really change the output."
31207>>>                Set piColumnIndex to 3
31208>>>            End_Object
31209>>>        End_Object
31210>>>    End_Object
31211>>>
31211>>>    Object oWebPanelCenter is a cWebPanel
31213>>>        Set peRegion to prCenter
31214>>>
31214>>>        // output to an embedded window
31214>>>        Object oWebIFrame is a cWebIFrame
31216>>>           Set pbFillHeight to True
31217>>>           Set pbShowBorder to True
31218>>>        End_Object
31219>>>    End_Object
31220>>>End_Object
31221>    
31221>    Use DemoSliders.wo
Including file: DemoSliders.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoSliders.wo)
31221>>>Use cWebView.pkg
31221>>>Use cWebPanel.pkg
31221>>>Use cWebTabContainer.pkg
31221>>>Use cWebTabPage.pkg
31221>>>Use cWebForm.pkg
31221>>>Use cWebLabel.pkg
31221>>>Use cWebSlider.pkg
31221>>>Use cWebGroup.pkg
31221>>>
31221>>>Use Customer.dd
31221>>>
31221>>>Object oDemoSliders is a cWebView
31223>>>    Set piWidth to 700
31224>>>    Set psCaption to "Demo Sliders"
31225>>>    
31225>>>    Object oCustomer_DD is a Customer_DataDictionary
31227>>>    End_Object
31228>>>
31228>>>    Set Main_DD to oCustomer_DD
31229>>>    Set Server to oCustomer_DD
31230>>>
31230>>>    Object oWebMainPanel is a cWebPanel
31232>>>        Set piColumnCount to 10
31233>>>
31233>>>        Object oWebTabContainer is a cWebTabContainer
31235>>>            
31235>>>            
31235>>>            Object oVerticalPage is a cWebTabPage
31237>>>                Set piColumnCount to 10
31238>>>                Set psCaption to "Vertical"
31239>>>                
31239>>>                Object oLabel1 is a cWebLabel
31241>>>                    Set piColumnSpan to 1
31242>>>                    Set psCaption to "Default"
31243>>>                End_Object
31244>>>                
31244>>>                Object oLabel2 is a cWebLabel
31246>>>                    Set piColumnSpan to 1
31247>>>                    Set piColumnIndex to 1
31248>>>                    Set psCaption to "Markers"
31249>>>                End_Object
31250>>>                
31250>>>                Object oLabel3 is a cWebLabel
31252>>>                    Set piColumnSpan to 3
31253>>>                    Set piColumnIndex to 2
31254>>>                    Set psCaption to "Labels"
31255>>>                End_Object
31256>>>                
31256>>>                
31256>>>                Object oLabel4 is a cWebLabel
31258>>>                    Set piColumnSpan to 3
31259>>>                    Set piColumnIndex to 5
31260>>>                    Set psCaption to "Labels & Markers"
31261>>>                End_Object
31262>>>                
31262>>>                Object oLabel5 is a cWebLabel
31264>>>                    Set piColumnSpan to 1
31265>>>                    Set piColumnIndex to 8
31266>>>                    Set psCaption to "0 - 100"
31267>>>                End_Object
31268>>>                                
31268>>>                Object oLabel6 is a cWebLabel
31270>>>                    Set piColumnSpan to 1
31271>>>                    Set piColumnIndex to 9
31272>>>                    Set psCaption to "Range"
31273>>>                End_Object
31274>>>                                
31274>>>
31274>>>                Object oSlider1 is a cWebSlider
31276>>>                    Set piColumnSpan to 1
31277>>>                    Set pbVertical to True
31278>>>                    Set piHeight to 400
31279>>>                    Set pbShowLabel to False
31280>>>                End_Object
31281>>>                
31281>>>                
31281>>>                Object oSlider2 is a cWebSlider
31283>>>                    Set piColumnSpan to 1
31284>>>                    Set piColumnIndex to 1
31285>>>                    Set pbVertical to True
31286>>>                    Set piHeight to 400
31287>>>                    Set pbShowLabel to False
31288>>>                    Set pbShowMarkers to True
31289>>>                End_Object
31290>>>                
31290>>>                Object oSlider3 is a cWebSlider
31292>>>                    Set piMaxValue to 5
31293>>>                    Set piMinValue to 1
31294>>>                    Set piInterval to 1
31295>>>                    Set pbVertical to True
31296>>>                    Set piHeight to 400
31297>>>                    Set pbShowLabel to False
31298>>>                    Set piColumnIndex to 2
31299>>>                    Set piColumnSpan to 3
31300>>>                    Procedure OnFillLabels
31303>>>                        Send AddLabel 1 "First" 
31304>>>                        Send AddLabel 2 "Second" 
31305>>>                        Send AddLabel 3 "Third" 
31306>>>                        Send AddLabel 4 "Fourth" 
31307>>>                        Send AddLabel 5 "Fifth" 
31308>>>                    End_Procedure
31309>>>                End_Object
31310>>>                
31310>>>                Object oSlider4 is a cWebSlider
31312>>>                    Set pbVertical to True
31313>>>                    Set piHeight to 400
31314>>>                    Set pbShowLabel to False
31315>>>                    Set piColumnIndex to 5
31316>>>                    Set piColumnSpan to 3
31317>>>                    
31317>>>                    Set piMaxValue to 50
31318>>>                    Set piMinValue to 10
31319>>>                    Set piInterval to 1
31320>>>                    Set pbShowMarkers to True
31321>>>                    Procedure OnFillLabels
31324>>>                        Send AddLabel 10 "Ten" 
31325>>>                        Send AddLabel 20 "Twenty" 
31326>>>                        Send AddLabel 30 "Thirty" 
31327>>>                        Send AddLabel 40 "Forty" 
31328>>>                        Send AddLabel 50 "Fifty" 
31329>>>                    End_Procedure
31330>>>                End_Object
31331>>>                
31331>>>                Object oSlider5 is a cWebSlider
31333>>>                    Set pbVertical to True
31334>>>                    Set piHeight to 400
31335>>>                    Set pbShowLabel to False
31336>>>                    Set piColumnIndex to 8
31337>>>                    Set piColumnSpan to 1
31338>>>                    
31338>>>                    Set psLabel to "1 - 100"
31339>>>                    Set piMaxValue to 100
31340>>>                    Set piMinValue to 1
31341>>>                    Set piInterval to 1
31342>>>                    Set pbShowValue to True
31343>>>                    Set piSliderValue to 50
31344>>>                    Set pbShowMarkers to True
31345>>>                    Set pbShowRange to True
31346>>>                End_Object
31347>>>                
31347>>>                Object oSlider6 is a cWebSlider
31349>>>                    Set pbVertical to True
31350>>>                    Set piHeight to 400
31351>>>                    Set pbShowLabel to False
31352>>>                    Set piColumnIndex to 9
31353>>>                    Set piColumnSpan to 1
31354>>>                    
31354>>>                    Set psLabel to "Range 0 - 100"
31355>>>                    Set piMaxValue to 100
31356>>>                    Set piMinValue to 0
31357>>>                    Set piInterval to 1
31358>>>                    Set piFrom to 20
31359>>>                    Set piTo to 50
31360>>>                    Set pbShowValue to True
31361>>>                    Set pbRanged to True
31362>>>                    Set pbShowRange to True
31363>>>                End_Object
31364>>>            End_Object 
31365>>>
31365>>>            Object oHorizontalPage is a cWebTabPage
31367>>>                Set piColumnCount to 10
31368>>>                Set psCaption to "Horizontal"
31369>>>                
31369>>>                Object oSlider1 is a cWebSlider
31371>>>                    Set psLabel to "Default"
31372>>>                    Set piColumnSpan to 0
31373>>>                End_Object               
31374>>>                
31374>>>                Object oSlider2 is a cWebSlider
31376>>>                    Set psLabel to "Markers"
31377>>>                    Set piColumnSpan to 0
31378>>>                    Set pbShowMarkers to True
31379>>>                End_Object     
31380>>>                
31380>>>                Object oSlider3 is a cWebSlider
31382>>>                    Set psLabel to "Labels"
31383>>>                    Set piMaxValue to 5
31384>>>                    Set piMinValue to 1
31385>>>                    Set piInterval to 1
31386>>>                    Set pbShowMarkers to False
31387>>>                    Procedure OnFillLabels
31390>>>                        Send AddLabel 1 "First" 
31391>>>                        Send AddLabel 2 "Second" 
31392>>>                        Send AddLabel 3 "Third" 
31393>>>                        Send AddLabel 4 "Fourth" 
31394>>>                        Send AddLabel 5 "Fifth" 
31395>>>                    End_Procedure
31396>>>                End_Object
31397>>>                                
31397>>>                Object oSlider4 is a cWebSlider
31399>>>                    Set psLabel to "Labels & Markers"
31400>>>                    Set piMaxValue to 50
31401>>>                    Set piMinValue to 10
31402>>>                    Set piInterval to 1
31403>>>                    Set pbShowMarkers to True
31404>>>                    Procedure OnFillLabels
31407>>>                        Send AddLabel 10 "Ten" 
31408>>>                        Send AddLabel 20 "Twenty" 
31409>>>                        Send AddLabel 30 "Thirty" 
31410>>>                        Send AddLabel 40 "Forty" 
31411>>>                        Send AddLabel 50 "Fifty" 
31412>>>                    End_Procedure
31413>>>                End_Object
31414>>>                
31414>>>                Object oSlider5 is a cWebSlider
31416>>>                    Set psLabel to "1 - 100"
31417>>>                    Set piMaxValue to 100
31418>>>                    Set piMinValue to 1
31419>>>                    Set piInterval to 1
31420>>>                    Set pbShowValue to True
31421>>>                    Set piSliderValue to 50
31422>>>                    Set pbShowMarkers to True
31423>>>                    Set pbShowRange to True
31424>>>                End_Object
31425>>>                
31425>>>                Object oSlider6 is a cWebSlider
31427>>>                    Set psLabel to "Range 0 - 100"
31428>>>                    Set piMaxValue to 100
31429>>>                    Set piMinValue to 0
31430>>>                    Set piInterval to 1
31431>>>                    Set piFrom to 20
31432>>>                    Set piTo to 50
31433>>>                    Set pbShowValue to True
31434>>>                    Set pbRanged to True
31435>>>                    Set pbShowRange to True
31436>>>                End_Object
31437>>>
31437>>>                Object oCustomerCardContainer is a cWebGroup
31439>>>                    Set psCaption to "Customer Sliders:"
31440>>>                    Set piColumnCount to 10
31441>>>    
31441>>>                    Object oCustomer_Number is a cWebForm
31443>>>                        Entry_Item Customer.Customer_Number
31444>>>                        Set piColumnSpan to 4
31445>>>                        Set psLabel to "Customer:"
31446>>>                    End_Object
31447>>>    
31447>>>                    Object oCustomer_Name is a cWebForm
31449>>>                        Entry_Item Customer.Name
31450>>>                        Set piColumnSpan to 0
31451>>>                        Set piColumnIndex to 4
31452>>>                        Set pbShowLabel to False
31453>>>                        Set psLabel to "Customer Name:"
31454>>>                    End_Object
31455>>>                    
31455>>>                    Object oCustomer_Credit_Limit is a cWebSlider
31457>>>                        Entry_Item Customer.Credit_Limit
31458>>>                        Set psLabel to "Credit Limit:"
31459>>>                        Set piMinValue to 10000
31460>>>                        Set piMaxValue to 500000
31461>>>                        Set pbShowValue to True
31462>>>                        Set pbShowRange to True
31463>>>
31463>>>                        Procedure OnFillLabels
31466>>>                            Send AddLabel 100000 "Low"
31467>>>                            Send AddLabel 250000 "Medium" 
31468>>>                            Send AddLabel 400000 "High" 
31469>>>                        End_Procedure
31470>>>                    End_Object
31471>>>                    
31471>>>                    Object oCustomer_Purchases is a cWebSlider
31473>>>                        Entry_Item Customer.Purchases
31474>>>                        Set psLabel to "Purchases:"
31475>>>                        Set piMinValue to 10000
31476>>>                        Set piMaxValue to 500000
31477>>>                        Set pbShowValue to True
31478>>>                        Set pbShowRange to True
31479>>>                    End_Object
31480>>>                    
31480>>>                    Object oCustomer_Balance is a cWebSlider
31482>>>                        Entry_Item Customer.Balance
31483>>>                        Set psLabel to "Balance:"
31484>>>                        Set piMinValue to 10000
31485>>>                        Set piMaxValue to 500000
31486>>>                        Set pbShowValue to True
31487>>>                        Set pbShowRange to True
31488>>>                    End_Object
31489>>>                End_Object
31490>>>            End_Object
31491>>>        End_Object 
31492>>>    End_Object 
31493>>>End_Object
31494>    Use DemoConstrainedGrid.wo
Including file: DemoConstrainedGrid.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoConstrainedGrid.wo)
31494>>>Use cWebView.pkg
31494>>>Use cWebForm.pkg
31494>>>Use cWebCombo.pkg
31494>>>Use cWebButton.pkg
31494>>>Use cWebGrid.pkg
31494>>>Use cWebColumn.pkg
31494>>>Use cWebColumnCombo.pkg
31494>>>Use cWebColumnCheckbox.pkg
31494>>>Use cWebPanel.pkg
31494>>>Use Customer.DD
31494>>>
31494>>>
31494>>>Object oDemoConstrainedGrid is a cWebView
31496>>>    Object oCustomer_DD is a Customer_DataDictionary
31498>>>        Set Auto_Fill_State to True
31499>>>
31499>>>        Procedure OnConstrain
31502>>>            String sFilter sFrom sTo
31502>>>            Forward Send OnConstrain
31504>>>            
31504>>>            WebGet psFilter of oDemoConstrainedGrid to sFilter
31506>>>            WebGet psFilterFrom of oDemoConstrainedGrid to sFrom
31508>>>            WebGet psFilterTo of oDemoConstrainedGrid to sTo
31510>>>            
31510>>>            If (sFilter = "NUMBER") Begin
31512>>>                Constrain Customer.Customer_Number Between sFrom and sTo
31516>>>            End
31516>>>>
31516>>>            
31516>>>            If (sFilter = "NAME") Begin
31518>>>                Constrain Customer.Name Between sFrom and sTo
31522>>>            End
31522>>>>
31522>>>            
31522>>>        End_Procedure
31523>>>    End_Object
31524>>>
31524>>>    Set Main_DD to oCustomer_DD
31525>>>    Set Server to oCustomer_DD
31526>>>    
31526>>>    Set psCaption to "Constrained Grid"
31527>>>    
31527>>>    //  Web Properties used to store constraint values
31527>>>    Property String psFilter ""
31531>>>    Property String psFilterFrom ""
31535>>>    Property String psFilterTo ""
31539>>>    
31539>>>    //  Fill the grid on load
31539>>>    Procedure OnLoad
31542>>>        Send Find of oCustomer_DD FIRST_RECORD Index.1
31543>>>    End_Procedure
31544>>>    
31544>>>    Object oTopPanel is a cWebPanel
31546>>>        Set peRegion to prTop
31547>>>        Set piColumnCount to 4
31548>>>        
31548>>>        Object oFilterCombo is a cWebCombo
31550>>>            Set psLabel to "Filter on:"
31551>>>            
31551>>>            Procedure OnFill
31554>>>                Forward Send OnFill
31556>>>                
31556>>>                Send AddComboItem "" "None"
31557>>>                Send AddComboItem "NUMBER" "Number"
31558>>>                Send AddComboItem "NAME" "Name"
31559>>>            End_Procedure
31560>>>        End_Object
31561>>>        
31561>>>        Object oFromForm is a cWebForm
31563>>>            Set piColumnIndex to 1
31564>>>            Set psLabel to "From:"
31565>>>        End_Object
31566>>>        
31566>>>        Object oToForm is a cWebForm
31568>>>            Set piColumnIndex to 2
31569>>>            Set psLabel to "To:"
31570>>>        End_Object
31571>>>        
31571>>>        Object oUpdate is a cWebButton
31573>>>            Set psCaption to "Update"
31574>>>            Set piColumnIndex to 3
31575>>>            
31575>>>            Set pbServerOnClick to True
31576>>>            Procedure OnClick
31579>>>                String sVal
31579>>>                
31579>>>                WebGet psValue of oFilterCombo to sVal
31580>>>                WebSet psFilter of oDemoConstrainedGrid to sVal
31581>>>                
31581>>>                WebGet psValue of oFromForm to sVal
31582>>>                WebSet psFilterFrom of oDemoConstrainedGrid to sVal
31583>>>                
31583>>>                WebGet psValue of oToForm to sVal
31584>>>                WebSet psFilterTo of oDemoConstrainedGrid to sVal
31585>>>                
31585>>>                Send Rebuild_Constraints of oCustomer_DD
31586>>>
31586>>>                // make sure buffer has correct (old) record
31586>>>                // and rebuild list around valid record close to this one
31586>>>                Send Refind_Records of oCustomer_DD
31587>>>                Send FindDDRecordInBuffer of oList
31588>>>            End_Procedure
31589>>>        End_Object
31590>>>    End_Object
31591>>>    
31591>>>    Object oMainPanel is a cWebPanel
31593>>>        Set peRegion to prCenter
31594>>>            
31594>>>        
31594>>>        Object oList is a cWebGrid
31596>>>            Set pbFillHeight to True
31597>>>            Set pbShowLabel to False
31598>>>            Set piOrdering to 1
31599>>>            
31599>>>            Object oCustomerNumber is a cWebColumn
31601>>>                Set piWidth to 10
31602>>>                Set psCaption to "Number"
31603>>>                Set pbPromptButton to False
31604>>>                
31604>>>                Entry_Item Customer.Customer_Number
31605>>>            End_Object
31606>>>            
31606>>>            Object oCustomerName is a cWebColumn
31608>>>                Set piWidth to 20
31609>>>                Set psCaption to "Name"
31610>>>                Set pbPromptButton to False
31611>>>                
31611>>>                Entry_Item Customer.Name
31612>>>            End_Object
31613>>>            
31613>>>            Object oCustomerAddress is a cWebColumn
31615>>>                Set piWidth to 20
31616>>>                Set psCaption to "Address"
31617>>>                
31617>>>                Entry_Item Customer.Address 
31618>>>            End_Object
31619>>>            
31619>>>            Object oCustomerState is a cWebColumnCombo
31621>>>                Set piWidth to 14
31622>>>                Set psCaption to "State"
31623>>>                
31623>>>                Entry_Item Customer.State
31624>>>            End_Object
31625>>>            
31625>>>            Object oCustomerStatus is a cWebColumnCheckbox
31627>>>                Set piWidth to 8
31628>>>                Set psCaption to "Status"
31629>>>                                
31629>>>                Entry_Item Customer.Status
31630>>>            End_Object
31631>>>            
31631>>>            Object oCalculated is a cWebColumn
31633>>>                Set piWidth to 6
31634>>>                Set psCaption to "Calc"
31635>>>                Set pbEnabled to False
31636>>>                
31636>>>                //  The OnSetCalculatedValue procedure can be used on any data entry object (DEO)
31636>>>                Procedure OnSetCalculatedValue String ByRef sValue
31639>>>                    Move ("$" + string(Customer.Credit_Limit)) to sValue
31640>>>                End_Procedure
31641>>>            End_Object
31642>>>        End_Object
31643>>>    End_Object
31644>>>End_Object
31645>>>
31645>>>
31645>    Use DemoDialogs.wo
Including file: DemoDialogs.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoDialogs.wo)
31645>>>Use cWebView.pkg
31645>>>Use cWebButton.pkg
31645>>>Use cWebApp.pkg
31645>>>Use cWebHorizontalLine.pkg
31645>>>
31645>>>Use DemoActionDialog.wo
Including file: DemoActionDialog.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoActionDialog.wo)
31645>>>>>Use cWebModalDialog.pkg
31645>>>>>Use cWebButton.pkg
31645>>>>>Use cWebLabel.pkg
31645>>>>>Use cWebPanel.pkg
31645>>>>>Use cWebForm.pkg
31645>>>>>
31645>>>>>Object oDemoActionDialog is a cWebModalDialog
31647>>>>>    Set psCaption to "Question.."
31648>>>>>    Set pbResizable to False
31649>>>>>    Set piWidth to 400
31650>>>>>    Set piColumnCount to 4
31651>>>>>    
31651>>>>>    Property String psReturnMsg ""
31655>>>>>    
31655>>>>>    Property String psReturnObj ""
31659>>>>>    
31659>>>>>    Object oMainPanel is a cWebPanel
31661>>>>>        Set peRegion to prCenter
31662>>>>>        
31662>>>>>        Object oQuestionLbl is a cWebLabel
31664>>>>>            Set psCaption to "Are you sure that you want to do this?"
31665>>>>>        End_Object
31666>>>>>        
31666>>>>>        Object oResponseFrm is a cWebForm
31668>>>>>            Set pbShowLabel to False
31669>>>>>        End_Object
31670>>>>>    End_Object
31671>>>>>    
31671>>>>>    Object oButtonPanel is a cWebPanel
31673>>>>>        Set peRegion to prBottom
31674>>>>>        Set piColumnCount to 4
31675>>>>>        
31675>>>>>        Object oOkBtn is a cWebButton
31677>>>>>            Set pbShowLabel to False
31678>>>>>            Set psCaption to "Ok"
31679>>>>>            Set piColumnIndex to 1
31680>>>>>            
31680>>>>>            Procedure OnClick
31683>>>>>                Send SendResponse True
31684>>>>>            End_Procedure
31685>>>>>        End_Object
31686>>>>>        
31686>>>>>        Object oCancelBtn is a cWebButton
31688>>>>>            Set pbShowLabel to False
31689>>>>>            Set psCaption to "Cancel"
31690>>>>>            Set piColumnIndex to 2
31691>>>>>            
31691>>>>>            Procedure OnClick
31694>>>>>                Send SendResponse False
31695>>>>>            End_Procedure
31696>>>>>        End_Object
31697>>>>>    End_Object
31698>>>>>    
31698>>>>>    Set pbServerOnSubmit to True
31699>>>>>    Procedure OnSubmit
31702>>>>>        Send SendResponse True
31703>>>>>    End_Procedure
31704>>>>>    
31704>>>>>    Procedure AskQuestion String sTitle String sQuestion Handle hReturnObj Handle hReturnMsg
31707>>>>>        String sWO sMethod
31707>>>>>        
31707>>>>>        Get WebObjectName of hReturnObj to sWO
31708>>>>>        Get WebMethodName of hReturnObj hReturnMsg to sMethod
31709>>>>>        If (sMethod <> "") Begin
31711>>>>>            WebSet psReturnObj to sWO
31712>>>>>            WebSet psReturnMsg to sMethod
31713>>>>>            
31713>>>>>            WebSet psCaption of oDemoActionDialog to sTitle
31714>>>>>            WebSet psCaption of oQuestionLbl to sQuestion
31715>>>>>            
31715>>>>>            WebSet psValue of oResponseFrm to ""
31716>>>>>                    
31716>>>>>            Send Show of oDemoActionDialog
31717>>>>>        End
31717>>>>>>
31717>>>>>    End_Procedure
31718>>>>>    
31718>>>>>    Procedure SendResponse Boolean bOk
31721>>>>>        Handle hReturnMsg hReturnObj
31721>>>>>        String sName sResponse
31721>>>>>        
31721>>>>>        //  Get handle to web object
31721>>>>>        WebGet psReturnObj of oDemoActionDialog to sName
31722>>>>>        Get WebObjectByName sName to hReturnObj
31723>>>>>        
31723>>>>>        If (hReturnObj > 0) Begin
31725>>>>>            //  Get handle to return message
31725>>>>>            WebGet psReturnMsg of oDemoActionDialog to sName
31726>>>>>            Get WebMethodByName of hReturnObj sName to hReturnMsg
31727>>>>>                
31727>>>>>            If (hReturnMsg > 0) Begin
31729>>>>>                WebGet psValue of oResponseFrm to sResponse
31730>>>>>                Send Hide of oDemoActionDialog
31731>>>>>
31731>>>>>                //  Call handler method
31731>>>>>                Send hReturnMsg of hReturnObj bOk sResponse
31732>>>>>            End
31732>>>>>>
31732>>>>>        End
31732>>>>>>
31732>>>>>    End_Procedure
31733>>>>>End_Object
31734>>>>>
31734>>>>>
31734>>>>>
31734>>>Use DemoQuestionDialog.wo
Including file: DemoQuestionDialog.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoQuestionDialog.wo)
31734>>>>>Use cWebModalDialog.pkg
31734>>>>>Use cWebButton.pkg
31734>>>>>Use cWebLabel.pkg
31734>>>>>Use cWebPanel.pkg
31734>>>>>Use cWebForm.pkg
31734>>>>>
31734>>>>>Object oDemoQuestionDialog is a cWebModalDialog
31736>>>>>    Set psCaption to "Question.."
31737>>>>>    Set pbResizable to False
31738>>>>>    Set piWidth to 400
31739>>>>>    Set piColumnCount to 4
31740>>>>>    
31740>>>>>    // send reply on Esc or "x" as submit, which will send the callback on a cancel
31740>>>>>    Set pbServerOnEscape to True
31741>>>>>    
31741>>>>>    
31741>>>>>    Object oMainPanel is a cWebPanel
31743>>>>>        Set peRegion to prCenter
31744>>>>>        
31744>>>>>        Object oQuestionLbl is a cWebLabel
31746>>>>>            Set psCaption to "Are you sure that you want to do this?"
31747>>>>>        End_Object
31748>>>>>        
31748>>>>>        Object oResponseFrm is a cWebForm
31750>>>>>            Set pbShowLabel to False
31751>>>>>        End_Object
31752>>>>>    End_Object
31753>>>>>    
31753>>>>>    Object oButtonPanel is a cWebPanel
31755>>>>>        Set peRegion to prBottom
31756>>>>>        Set piColumnCount to 4
31757>>>>>        
31757>>>>>        Object oOkBtn is a cWebButton
31759>>>>>            Set pbShowLabel to False
31760>>>>>            Set psCaption to "Ok"
31761>>>>>            Set piColumnIndex to 1
31762>>>>>            
31762>>>>>            Procedure OnClick
31765>>>>>                Send Ok
31766>>>>>            End_Procedure
31767>>>>>        End_Object
31768>>>>>        
31768>>>>>        Object oCancelBtn is a cWebButton
31770>>>>>            Set pbShowLabel to False
31771>>>>>            Set psCaption to "Cancel"
31772>>>>>            Set piColumnIndex to 2
31773>>>>>            
31773>>>>>            Procedure OnClick
31776>>>>>                Send Cancel
31777>>>>>            End_Procedure
31778>>>>>        End_Object
31779>>>>>    End_Object
31780>>>>>    
31780>>>>>    Set pbServerOnSubmit to True
31781>>>>>   
31781>>>>>    Procedure OnSubmit
31784>>>>>        Send Ok
31785>>>>>    End_Procedure
31786>>>>>    
31786>>>>>    Procedure InitializeDialog String sTitle String sQuestion
31789>>>>>        WebSet psCaption of oDemoQuestionDialog to sTitle
31790>>>>>        WebSet psCaption of oQuestionLbl to sQuestion
31791>>>>>        WebSet psValue of oResponseFrm to ""
31792>>>>>    End_Procedure
31793>>>>>    
31793>>>>>    Procedure GetAnswers String ByRef sResponse Boolean ByRef bCancel
31796>>>>>        WebGet psValue of oResponseFrm to sResponse
31797>>>>>        WebGet pbCanceled to bCancel
31798>>>>>    End_Procedure
31799>>>>>
31799>>>>>    Procedure OnEscape
31802>>>>>        Forward Send OnEscape
31804>>>>>    End_Procedure
31805>>>>>    
31805>>>>>End_Object
31806>>>>>
31806>>>>>
31806>>>>>
31806>>>Use DemoFileDialog.wo
Including file: DemoFileDialog.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoFileDialog.wo)
31806>>>>>Use cWebModalDialog.pkg
31806>>>>>Use cWebButton.pkg
31806>>>>>Use cWebTreeView.pkg
31806>>>>>Use cWebImage.pkg
31806>>>>>Use cWebPanel.pkg
31806>>>>>Use cWebList.pkg
31806>>>>>Use cWebColumn.pkg
31806>>>>>
31806>>>>>Define C_FileAttributeDirectory for |CI$0010
31806>>>>>
31806>>>>>// tFileTime
31806>>>>>// ---------
31806>>>>>
31806>>>>>// A 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 (UTC).
31806>>>>>Struct tFileTime
31806>>>>>    DWord dwLowDateTime    // Low-order part of the file time.
31806>>>>>    DWord dwHighDateTime   // High-order part of the file time.
31806>>>>>End_Struct
31806>>>>>
31806>>>>>// tWin32FindData
31806>>>>>// --------------
31806>>>>>
31806>>>>>// This structure describes a file that the FindFirstFile, FindFirstFileEx, or FindNextFile functions find.
31806>>>>>Struct tWin32FindData
31806>>>>>    DWord     dwFileAttributes                
31806>>>>>    tFileTime ftCreationTime    
31806>>>>>    tFileTime ftCreationTime    
31806>>>>>    tFileTime ftLastAccessTime  
31806>>>>>    tFileTime ftLastAccessTime  
31806>>>>>    tFileTime ftLastWriteTime   
31806>>>>>    tFileTime ftLastWriteTime   
31806>>>>>    DWord     nFileSizeHigh
31806>>>>>    DWord     nFileSizeLow
31806>>>>>    DWord     dwReserved0
31806>>>>>    DWord     dwReserved1
31806>>>>>    Char[MAX_PATH] cFileName         
31806>>>>>    Char[14]       cAlternateFileName
31806>>>>>End_Struct
31806>>>>>
31806>>>>>External_Function FindClose "FindClose" Kernel32.dll Handle hOpenFile Returns Integer
31807>>>>>External_Function FindFirstFile "FindFirstFileA" Kernel32.dll String sFileSpec Pointer lpWin32FindData Returns Handle
31808>>>>>External_Function FindNextFile "FindNextFileA" Kernel32.dll Handle hFindFile Pointer lpWin32FindData Returns Handle
31809>>>>>
31809>>>>>Object oDemoFileDialog is a cWebModalDialog
31811>>>>>    Set piColumnCount to 3
31812>>>>>    Set piWidth to 900
31813>>>>>    Set piHeight to 600
31814>>>>>    Set psCaption to "Select folder.." 
31815>>>>>
31815>>>>>    
31815>>>>>    Object oLeftPanel is a cWebPanel
31817>>>>>        Set peRegion to prLeft
31818>>>>>        Set pbResizable to True
31819>>>>>        Set piWidth to 300
31820>>>>>        
31820>>>>>        Object oTreeView is a cWebTreeView
31822>>>>>            Set pbFillHeight to True
31823>>>>>            Property String psStartupPath "C:\Users\Harm\Pictures\"
31825>>>>>//            Send RegisterDownloadFolder of ghoWebResourceManager "C:\Users\Harm\Pictures\"
31825>>>>>            
31825>>>>>            // To fill the tree with items, we implement the OnLoadChildNodes event that is called
31825>>>>>            // by the tree engine. It returns sub tree items based on the parent id, value or the 
31825>>>>>            // current level. In this implementation we look at the file system and generate
31825>>>>>            // items for that.
31825>>>>>            Function OnLoadChildNodes String sId String sValue Integer iLevel Returns tWebTreeItem[]
31828>>>>>                tWebTreeItem[] aItems
31828>>>>>                tWebTreeItem[] aItems
31829>>>>>                Integer iCount iDrive iDriveStatus
31829>>>>>                String sLoc sLine
31829>>>>>                
31829>>>>>                String sDirectory sFileName sSize
31829>>>>>                Integer iRow iAttributes iSize iVoid
31829>>>>>                Number nSize
31829>>>>>                Boolean bIsDirectory
31829>>>>>                Pointer lpWin32FindData
31829>>>>>                Handle hFileFind hMoreFiles
31829>>>>>                tWin32FindData Win32FindData
31829>>>>>                tWin32FindData Win32FindData
31829>>>>>                
31829>>>>>                Move 0 to iCount
31830>>>>>                
31830>>>>>                If (iLevel = 0) Begin
31832>>>>>                    //  At the root level, we display the drives that are available
31832>>>>>                    For iDrive from 1 to 26
31838>>>>>>
31838>>>>>                        GetDskInfo iDrive iDriveStatus
31839>>>>>                        If (iDriveStatus > Drive_root_not_exist) Begin
31841>>>>>                            Move (Character (iDrive + 64) + ":\") to sLoc
31842>>>>>                            Move sLoc   to aItems[iCount].sName
31843>>>>>                            Move sLoc   to aItems[iCount].sValue        //  Store the full path as value
31844>>>>>                            Move sLoc   to aItems[iCount].sAltText
31845>>>>>                            Move True   to aItems[iCount].bFolder
31846>>>>>                            Move True   to aItems[iCount].bLoadChildren
31847>>>>>                            
31847>>>>>                            //  We need to generate a unique ID here without special characters, since we want to return multiple levels at initialization
31847>>>>>                            Move (Replaces(":", Replaces("\", sLoc, ""), "")) to aItems[iCount].sId
31848>>>>>                            Move sId to aItems[iCount].sParentId
31849>>>>>                            
31849>>>>>                            //  We have different icons for some of the drive types
31849>>>>>                            Case Begin
31849>>>>>                                Case (iDriveStatus = Drive_fixed)
31851>>>>>                                    Move "Images/Harddisk.png" to aItems[iCount].sIcon
31852>>>>>                                    Case Break
31853>>>>>                                Case (iDriveStatus = Drive_cdrom)
31856>>>>>                                    Move "Images/CDRom.png" to aItems[iCount].sIcon
31857>>>>>                                    Case Break
31858>>>>>                                Case (iDriveStatus = Drive_remote)
31861>>>>>                                    Move "Images/NetworkDrive.png" to aItems[iCount].sIcon
31862>>>>>                                    Case Break
31863>>>>>                            Case End
31863>>>>>                            
31863>>>>>                            Increment iCount
31864>>>>>                        End
31864>>>>>>
31864>>>>>                    Loop
31865>>>>>>
31865>>>>>                End
31865>>>>>>
31865>>>>>                Else Begin
31866>>>>>                    
31866>>>>>                    // Test if this is actually a valid directory.... 
31866>>>>>                    Delegate Get IsDirectory sValue to bIsDirectory
31868>>>>>                    
31868>>>>>                    If (bIsDirectory) Begin
31870>>>>>                
31870>>>>>                        // Iterate all the files in this directory....
31870>>>>>                        Move (AddressOf(Win32FindData)) to lpWin32FindData
31871>>>>>                        Move (FindFirstFile(sValue - "*.*", lpWin32FindData)) to hFileFind
31872>>>>>                
31872>>>>>                        If (hFileFind <> -1) Begin
31874>>>>>                            Repeat
31874>>>>>>
31874>>>>>                                Get CharArrayToString Win32FindData.cFileName to sFileName
31875>>>>>                                Move Win32FindData.dwFileAttributes to iAttributes
31876>>>>>                
31876>>>>>                                // Is it a file or a directory?....
31876>>>>>                                If (IsFlagIn(C_FileAttributeDirectory, iAttributes)) Begin
31878>>>>>                                    If (sFileName <> "" and sFileName <> "." and sFileName <> "..") Begin
31880>>>>>                                        Get CharArrayToString Win32FindData.cFileName to sFileName
31881>>>>>                                        Move Win32FindData.dwFileAttributes to iAttributes
31882>>>>>                    
31882>>>>>                                        Move (sValue + sFileName + "\") to sLoc
31883>>>>>                                
31883>>>>>                                        Move sFileName      to aItems[iCount].sName
31884>>>>>                                        Move sLoc           to aItems[iCount].sValue    //  Store the full path as value
31885>>>>>                                        Move sLoc           to aItems[iCount].sAltText
31886>>>>>                                        Move True           to aItems[iCount].bFolder
31887>>>>>                                        Move True           to aItems[iCount].bLoadChildren
31888>>>>>    
31888>>>>>                                        //  We need to generate a unique ID here without special characters, since we want to return multiple levels at initialization
31888>>>>>                                        Move (Replaces(":", Replaces("\", sLoc, ""), "")) to aItems[iCount].sId
31889>>>>>                                        Move sId to aItems[iCount].sParentId
31890>>>>>    
31890>>>>>                                        Increment iCount
31891>>>>>                                    End
31891>>>>>>
31891>>>>>                                End
31891>>>>>>
31891>>>>>                
31891>>>>>                                Move (FindNextFile(hFileFind, lpWin32FindData)) to hMoreFiles
31892>>>>>                            Until (hMoreFiles = 0)
31894>>>>>                
31894>>>>>                            Move (FindClose(hFileFind)) to iVoid
31895>>>>>                        End
31895>>>>>>
31895>>>>>                    End
31895>>>>>>
31895>>>>>                    
31895>>>>>                    
31895>>>>>//                    //  At sub levels we read the contents of the folder and return those as tree items
31895>>>>>//                    Direct_Input ("dir: " + sValue)
31895>>>>>//    
31895>>>>>//                    Repeat
31895>>>>>//                        Readln sLine
31895>>>>>//                        
31895>>>>>//                        Move (Trim(sLine)) to sLine
31895>>>>>//                        
31895>>>>>//                        If (sLine <> "" and sLine <> "[.]" and sLine <> "[..]") Begin
31895>>>>>//                            //  Switch between folders and files
31895>>>>>//                            If (Left(sLine, 1) = "[") Begin
31895>>>>>//                                Move (Mid(sLine, Length(sLine) - 2, 2)) to sLine
31895>>>>>//                                
31895>>>>>//                                Move (sValue + Trim(sLine) + "\") to sLoc
31895>>>>>//                            
31895>>>>>//                                Move (Trim(sLine))  to aItems[iCount].sName
31895>>>>>//                                Move sLoc           to aItems[iCount].sValue    //  Store the full path as value
31895>>>>>//                                Move sLoc           to aItems[iCount].sAltText
31895>>>>>//                                Move True           to aItems[iCount].bFolder
31895>>>>>//                                Move True           to aItems[iCount].bLoadChildren
31895>>>>>//                            End
31895>>>>>//                            Else Begin
31895>>>>>//                                Move (sValue + Trim(sLine)) to sLoc
31895>>>>>//                                
31895>>>>>//                                Move (Trim(sLine))  to aItems[iCount].sName
31895>>>>>//                                Move sLoc           to aItems[iCount].sValue    //  Store the full path as value
31895>>>>>//                                Move sLoc           to aItems[iCount].sAltText
31895>>>>>//                                Move False          to aItems[iCount].bFolder
31895>>>>>//                                Move False          to aItems[iCount].bLoadChildren
31895>>>>>//                            End
31895>>>>>//                            
31895>>>>>//                            //  We need to generate a unique ID here without special characters, since we want to return multiple levels at initialization
31895>>>>>//                            Move (Replaces(":", Replaces("\", sLoc, ""), "")) to aItems[iCount].sId
31895>>>>>//                            Move sId to aItems[iCount].sParentId
31895>>>>>//                            
31895>>>>>//                            Increment iCount
31895>>>>>//                        End
31895>>>>>//                    Until (SeqEof) 
31895>>>>>                End
31895>>>>>>
31895>>>>>                
31895>>>>>                Function_Return aItems
31896>>>>>            End_Function
31897>>>>>            
31897>>>>>            Set pbServerOnSelect to True
31898>>>>>            
31898>>>>>            Procedure OnSelect String sId String sValue Integer iLevel
31901>>>>>
31901>>>>>                
31901>>>>>                // Now Refresh oFileList
31901>>>>>                WebSet psDirectory of oFileList to sValue
31903>>>>>                Send GridRefresh to oFileList
31904>>>>>            End_Procedure
31905>>>>>            
31905>>>>>            
31905>>>>>            //  We override the OnLoad event and manually fill the tree. We need to do this because
31905>>>>>            //  we want to expand it to our initial path and select the current item.
31905>>>>>            Procedure OnLoad
31908>>>>>                tWebTreeItem[] aTree aLevel
31908>>>>>                tWebTreeItem[] aTree aLevel
31910>>>>>                tWebTreeItem tItem
31910>>>>>                tWebTreeItem tItem
31910>>>>>                String sPath sCurPath sPart
31910>>>>>                Integer iPos iTo iLevel iItem
31910>>>>>                Boolean bContinue
31910>>>>>                
31910>>>>>                //  Load root level
31910>>>>>                Get OnLoadChildNodes "" "" 0 to aTree
31911>>>>>                
31911>>>>>                Get psStartupPath to sPath
31912>>>>>                Move 0 to iPos
31913>>>>>                Move 0 to iItem
31914>>>>>                Move 1 to iLevel
31915>>>>>                
31915>>>>>                //  Loop through the parts of the path (the different folders)
31915>>>>>                While (iPos < Length(sPath))                    
31919>>>>>                    //  Cut the current folder out of the full path string
31919>>>>>                    Move (Pos("\", sPath, iPos + 1)) to iTo
31920>>>>>                    If (iTo = 0) Begin
31922>>>>>                        Move (Length(sPath)) to iTo
31923>>>>>                    End
31923>>>>>>
31923>>>>>                    Move (Mid(sPath, iTo - iPos, iPos + 1)) to sPart
31924>>>>>                    
31924>>>>>                    If (Trim(sPart) <> "") Begin
31926>>>>>                        Move (Trim(sCurPath) + Trim(sPart)) to sCurPath
31927>>>>>                        Move True to bContinue
31928>>>>>                        
31928>>>>>                        //  Find the folder in the generated tree nodes
31928>>>>>                        While (iItem < SizeOfArray(aTree) and bContinue)
31932>>>>>                            If (aTree[iItem].sValue = sCurPath) Begin
31934>>>>>                                Move aTree[iItem] to tItem
31935>>>>>                                
31935>>>>>                                //  Mark as expanded
31935>>>>>                                Move True to aTree[iItem].bExpanded
31936>>>>>                                
31936>>>>>                                //  Generate the tree nodes for the new level
31936>>>>>                                Get OnLoadChildNodes aTree[iItem].sId aTree[iItem].sValue iLevel to aLevel
31937>>>>>                                Get ConcatArrays aTree aLevel to aTree
31938>>>>>                                
31938>>>>>                                Move False to bContinue
31939>>>>>                            End
31939>>>>>>
31939>>>>>                            
31939>>>>>                            Increment iItem
31940>>>>>                        Loop
31941>>>>>>
31941>>>>>                    End
31941>>>>>>
31941>>>>>                    
31941>>>>>                    Move iTo to iPos
31942>>>>>                    Increment iLevel
31943>>>>>                Loop
31944>>>>>>
31944>>>>>                
31944>>>>>                //  Update the tree with the new nodes
31944>>>>>                Send UpdateSubNodes "" aTree
31945>>>>>                
31945>>>>>                //  Mark the current item as selected
31945>>>>>                If (tItem.sId <> "") Begin
31947>>>>>                    Send Select tItem.sId
31948>>>>>                    
31948>>>>>                End
31948>>>>>>
31948>>>>>            End_Procedure
31949>>>>>            
31949>>>>>            Function ConcatArrays tWebTreeItem[] aMain tWebTreeItem[] aAdd Returns tWebTreeItem[]
31952>>>>>                Integer i iTo
31952>>>>>                
31952>>>>>                Move (SizeOfArray(aAdd) - 1) to iTo
31953>>>>>                For i from 0 to iTo
31959>>>>>>
31959>>>>>                    Move aAdd[i] to aMain[SizeOfArray(aMain)]
31960>>>>>                Loop
31961>>>>>>
31961>>>>>                    
31961>>>>>                Function_Return aMain
31962>>>>>            End_Function
31963>>>>>            
31963>>>>>        End_Object
31964>>>>>        
31964>>>>>        Object oRefresh is a cWebButton
31966>>>>>            Set psCaption to "Refresh"
31967>>>>>            Set pbShowLabel to False
31968>>>>>            Set pbServerOnClick to True
31969>>>>>            
31969>>>>>            Procedure OnClick
31972>>>>>                Forward Send OnClick
31974>>>>>                
31974>>>>>                Send FullRefresh of oTreeView
31975>>>>>            End_Procedure
31976>>>>>        End_Object
31977>>>>>    End_Object
31978>>>>>    
31978>>>>>    Object oCenter is a cWebPanel
31980>>>>>        Set peRegion to prCenter
31981>>>>>
31981>>>>>        Object oCenterPanel is a cWebPanel
31983>>>>>            Set peRegion to prCenter
31984>>>>>        
31984>>>>>            Object oPreview is a cWebImage
31986>>>>>                Set pbFillHeight to True
31987>>>>>                
31987>>>>>                Set pePosition to wiCenter
31988>>>>>                Set pbScroll to True
31989>>>>>                Set pbShowBorder to True
31990>>>>>                Set psUrl to "Images/PoweredByDataFlex.png"
31991>>>>>            End_Object
31992>>>>>        End_Object
31993>>>>>
31993>>>>>        
31993>>>>>        Object oBottomPanel is a cWebPanel
31995>>>>>            Set peRegion to prBottom
31996>>>>>            Set pbResizable to True
31997>>>>>            Set piHeight to 250
31998>>>>>            Set piMinHeight to 200
31999>>>>>            
31999>>>>>            Object oFileList is a cWebList
32001>>>>>                Property String psDirectory ""
32005>>>>>                
32005>>>>>                Set pbFillHeight to True
32006>>>>>                
32006>>>>>                Set pbDataAware to False
32007>>>>>                Set piSortColumn to 0
32008>>>>>                
32008>>>>>                Object oFileName is a cWebColumn
32010>>>>>                    Set psCaption to "File name"
32011>>>>>                    Set piWidth to 10
32012>>>>>                End_Object
32013>>>>>                
32013>>>>>                Object oFileSize is a cWebColumn
32015>>>>>                    Set psCaption to "Size"
32016>>>>>                    Set piWidth to 4
32017>>>>>                End_Object 
32018>>>>>                
32018>>>>>                Procedure OnChangeCurrentRow String sFromRowID String sToRowID
32021>>>>>                    //  If an item is selected in the tree, we want to update the previewer if it is an image.
32021>>>>>                    //  If no image is selected, we reset the previewer to the default image.
32021>>>>>                    String sExt sPath
32021>>>>>                    
32021>>>>>                    WebGet psDirectory to sPath
32022>>>>>                    If (Right(sPath, 1) <> "\") Move (sPath + "\") to sPath
32025>>>>>                    Move (sPath + sToRowID) to sPath
32026>>>>>                    
32026>>>>>                    Move (Lowercase(Trim(Right(sPath, Length(sPath) - RightPos(".", sPath))))) to sExt
32027>>>>>                    If (sExt = "jpg" or sExt = "png" or sExt = "gif" or sExt = "bmp" or sExt = "ico" or sExt = "jpeg" or sExt = "svg") Begin
32029>>>>>                        WebSet psUrl of (oPreview) to ""
32030>>>>>                        
32030>>>>>                        
32030>>>>>                        Send UpdateLocalImage of oPreview sPath
32031>>>>>                    End
32031>>>>>>
32031>>>>>                    Else Begin
32032>>>>>                        WebSet psUrl of (oPreview) to "Images/PoweredByDataFlex.png"
32033>>>>>                    End
32033>>>>>>
32033>>>>>                End_Procedure                
32034>>>>>                
32034>>>>>                
32034>>>>>                
32034>>>>>                Procedure OnManualLoadData tWebRow[] ByRef aTheRows String ByRef sCurrentRowID
32037>>>>>                    String sDirectory sFileName sSize
32037>>>>>                    Integer iRow iAttributes iSize iVoid
32037>>>>>                    Number nSize
32037>>>>>                    Boolean bIsDirectory
32037>>>>>                    Pointer lpWin32FindData
32037>>>>>                    Handle hFileFind hMoreFiles
32037>>>>>                    tWin32FindData Win32FindData
32037>>>>>                    tWin32FindData Win32FindData
32037>>>>>
32037>>>>>                    Move 0 to iRow
32038>>>>>                    WebGet psDirectory to sDirectory
32039>>>>>                    
32039>>>>>                    // Test if this is actually a valid directory.... 
32039>>>>>                    Delegate Get IsDirectory sDirectory to bIsDirectory
32041>>>>>                    
32041>>>>>                    If (bIsDirectory) Begin
32043>>>>>                        // Iterate all the files in this directory....
32043>>>>>                        Move (AddressOf(Win32FindData)) to lpWin32FindData
32044>>>>>                        Move (FindFirstFile(sDirectory - "*.*", lpWin32FindData)) to hFileFind
32045>>>>>                
32045>>>>>                        If (hFileFind <> -1) Begin
32047>>>>>                            Repeat
32047>>>>>>
32047>>>>>                                Get CharArrayToString Win32FindData.cFileName to sFileName
32048>>>>>                                Move Win32FindData.dwFileAttributes to iAttributes
32049>>>>>                
32049>>>>>                                // Is it a file or a directory?....
32049>>>>>                                If (not(IsFlagIn(C_FileAttributeDirectory, iAttributes))) Begin
32051>>>>>                                    // Get the Size string
32051>>>>>                                    Move Win32FindData.nFileSizeLow to iSize
32052>>>>>                                    If (iSize < 1000) Begin
32054>>>>>                                        Move (String(iSize) * "bytes") to sSize
32055>>>>>                                    End
32055>>>>>>
32055>>>>>                                    Else If (iSize < 1000000) Begin
32058>>>>>                                        Move (iSize / 1000.0) to nSize
32059>>>>>                                        Move (FormatNumber(nSize, 2) * "KB") to sSize
32060>>>>>                                    End
32060>>>>>>
32060>>>>>                                    Else Begin
32061>>>>>                                        Move (iSize / 1000000.0) to nSize
32062>>>>>                                        Move (FormatNumber(nSize, 2) * "MB") to sSize
32063>>>>>                                    End
32063>>>>>>
32063>>>>>                                    
32063>>>>>                                    
32063>>>>>                                    // Populate the row....
32063>>>>>                                    Move sFileName to aTheRows[iRow].sRowID    // RowId
32064>>>>>                                    Move sFileName to aTheRows[iRow].aCells[0].sValue    // File Name
32065>>>>>                                    Move sSize     to aTheRows[iRow].aCells[1].sValue    // File Size 
32066>>>>>                                    If (iRow = 0) Begin
32068>>>>>                                        Move sFileName to sCurrentRowID
32069>>>>>                                        Send OnChangeCurrentRow "" sFileName
32070>>>>>                                    End
32070>>>>>>
32070>>>>>                                    Increment iRow
32071>>>>>                                End
32071>>>>>>
32071>>>>>                
32071>>>>>                                Move (FindNextFile(hFileFind, lpWin32FindData)) to hMoreFiles
32072>>>>>                            Until (hMoreFiles = 0)
32074>>>>>                
32074>>>>>                            Move (FindClose(hFileFind)) to iVoid
32075>>>>>                        End
32075>>>>>>
32075>>>>>                    End
32075>>>>>>
32075>>>>>                    
32075>>>>>                End_Procedure
32076>>>>>            End_Object
32077>>>>>        End_Object
32078>>>>>    End_Object    
32079>>>>>    
32079>>>>>    
32079>>>>>    Set pbServerOnSubmit to True
32080>>>>>    Procedure OnSubmit
32083>>>>>        String sPath sFile
32083>>>>>        
32083>>>>>        WebGet psDirectory of oFileList to sPath
32084>>>>>        If (Right(sPath, 1) <> "\") Move (sPath + "\") to sPath
32087>>>>>        
32087>>>>>        WebGet psCurrentRowID of oFileList to sFile
32088>>>>>        Move (sPath + sFile) to sPath
32089>>>>>        
32089>>>>>        Send ShowInfoBox ("Selected path '" + sPath + "'")
32090>>>>>    End_Procedure
32091>>>>>
32091>>>>>    Function CharArrayToString Char[] ACharArray Returns String
32094>>>>>        // Converts an array of type Char into a DataFlex string. The returned string will not
32094>>>>>        // be null terminated.
32094>>>>>        String sReturn
32094>>>>>        Address pStr
32094>>>>>    
32094>>>>>        Move (AddressOf(ACharArray)) to pStr
32095>>>>>        Move pStr to sReturn         // use built-in DataFlex string address to string conversion
32096>>>>>        Move (CString(sReturn)) to sReturn
32097>>>>>        
32097>>>>>        Function_Return sReturn
32098>>>>>    End_Function
32099>>>>>    
32099>>>>>
32099>>>>>    Function IsDirectory String sPath Returns Boolean
32102>>>>>        // Returns True if the sPath is a directory.
32102>>>>>        Integer iAttributes
32102>>>>>        Move (GetFileAttributes(sPath)) to iAttributes
32103>>>>>        If (iAttributes <> -1) Begin
32105>>>>>            Function_Return  ((iAttributes iand C_FileAttributeDirectory) = C_FileAttributeDirectory)
32106>>>>>        End
32106>>>>>>
32106>>>>>        Function_Return False // File is not a directory (or doesn't exist)
32107>>>>>    End_Function
32108>>>>>End_Object
32109>>>>>
32109>>>>>
32109>>>
32109>>>Object oDemoDialogs is a cWebView
32111>>>    Set piWidth to 300
32112>>>    Set psCaption to "Dialogs"
32113>>>    
32113>>>    Object oInfoBtn is a cWebButton
32115>>>        Set psCaption to "Standard Info Dialog"
32116>>>        
32116>>>        Procedure OnClick
32119>>>            Send ShowInfoBox of oWebApp "Hello world!"
32120>>>        End_Procedure
32121>>>    End_Object
32122>>>    
32122>>>    Object oConfirmBtn is a cWebButton
32124>>>        Set psCaption to "Standard Confirmation Dialog"
32125>>>        
32125>>>        Procedure ConfirmResponse Integer eConfirmMode
32128>>>            If (eConfirmMode = cmYes) Begin
32130>>>                WebSet pbEnabled to False
32131>>>            End
32131>>>>
32131>>>        End_Procedure
32132>>>        //  Publish the response method (Security!)
32132>>>        WebPublishProcedure ConfirmResponse
32133>>>        
32133>>>        Procedure OnClick
32136>>>            Send ShowYesNo of oWebApp (Self) (RefProc(ConfirmResponse)) "Are you sure you want to disable this button?" "Question title!"
32137>>>        End_Procedure
32138>>>    End_Object
32139>>>    
32139>>>    Object oCustomMessage is a cWebButton
32141>>>        Set psCaption to "Custom Message Box"
32142>>>        
32142>>>        Procedure CustomResponse Integer eBtn
32145>>>            Send ShowInfoBox ("You liked " + String(eBtn) + "!")
32146>>>        End_Procedure
32147>>>        //  Publish the response method (Security!)
32147>>>        WebPublishProcedure CustomResponse
32148>>>
32148>>>        Procedure OnClick
32151>>>            String[] aButtons
32152>>>            
32152>>>            Move "One"      to aButtons[0]
32153>>>            Move "Two"      to aButtons[1]
32154>>>            Move "Three"    to aButtons[2]
32155>>>            Move "Four"     to aButtons[3]
32156>>>            
32156>>>            Send ShowMessageBox of oWebApp Self (RefProc(CustomResponse)) "Pick your favorite number!" "Multiple choice" "WebMsgBoxConfirm" 1  aButtons
32157>>>        End_Procedure        
32158>>>    End_Object
32159>>>
32159>>>    Object oWebHorizontalLine1 is a cWebHorizontalLine
32161>>>    End_Object
32162>>>
32162>>>    Object oStandardAction is a cWebButton
32164>>>        Set psCaption to "Standard Question Dialog"
32165>>>        
32165>>>        // Standard dialog calls OnCloseModalDialog callback upon completion
32165>>>        Procedure OnCloseModalDialog Handle hoModalDialog
32168>>>            Boolean bCancel
32168>>>            String sAnswer
32168>>>            Send GetAnswers of hoModalDialog (&sAnswer) (&bCancel) 
32169>>>            If (bCancel) Begin
32171>>>                Send ShowInfoBox ("You didn't want to answer, did you?")
32172>>>            End
32172>>>>
32172>>>            Else Begin
32173>>>                Send ShowInfoBox ("Your name is '" + sAnswer + "'!!!")
32174>>>            End
32174>>>>
32174>>>        End_Procedure
32175>>>
32175>>>        Procedure OnClick
32178>>>            Send InitializeDialog of oDemoQuestionDialog "Question" "What is your name?" 
32179>>>            Send Popup of oDemoQuestionDialog Self
32180>>>        End_Procedure
32181>>>        
32181>>>    End_Object
32182>>>    
32182>>>    Object oCustomAction is a cWebButton
32184>>>        Set psCaption to "Custom Question Dialog"
32185>>>        
32185>>>        Procedure HandleResponse Boolean bOk String sAnswer
32188>>>            If (bOk) Begin
32190>>>                Send ShowInfoBox ("Your name is '" + sAnswer + "'!!!")
32191>>>            End
32191>>>>
32191>>>            Else Begin
32192>>>                Send ShowInfoBox ("You didn't want to answer, did you?")
32193>>>            End
32193>>>>
32193>>>        End_Procedure
32194>>>        //  Publish the response method (Security!)
32194>>>        WebPublishProcedure HandleResponse
32195>>>
32195>>>        Procedure OnClick
32198>>>            Send AskQuestion of oDemoActionDialog "Question" "What is your name?" (Self) (RefProc(HandleResponse))
32199>>>        End_Procedure
32200>>>    End_Object
32201>>>    
32201>>>    Object oWebHorizontalLine2 is a cWebHorizontalLine
32203>>>    End_Object
32204>>>    
32204>>>    Object oErrorDialog is a cWebButton
32206>>>        Set psCaption to "Standard Error Dialog"
32207>>>        
32207>>>        Procedure OnClick
32210>>>            Error 150 "Demo error message shown as unhandled error!"
32211>>>>
32211>>>        End_Procedure
32212>>>    End_Object
32213>>>    
32213>>>    Object oUserErrorDialog is a cWebButton
32215>>>        Set psCaption to "User Error Dialog"
32216>>>        
32216>>>        Procedure OnClick
32219>>>            Send UserError "Friendly error message using the UserError procedure." "Friendly error message :-)"
32220>>>        End_Procedure
32221>>>    End_Object
32222>>>
32222>>>    Object oUnhandledClientError is a cWebButton
32224>>>        Set piColumnSpan to 0
32225>>>        Set psCaption to "Clientside Error Dialog"
32226>>>    
32226>>>        Set psClientOnClick to "DoesNotExist"
32227>>>        Set pbServerOnClick to False
32228>>>    End_Object
32229>>>
32229>>>    Object oWebHorizontalLine3 is a cWebHorizontalLine
32231>>>    End_Object
32232>>>    
32232>>>    
32232>>>    Object oOpenFile is a cWebButton
32234>>>        Set psCaption to "File Dialog"
32235>>>        
32235>>>        Procedure OnClick
32238>>>            Send Show of oDemoFileDialog
32239>>>        End_Procedure
32240>>>    End_Object
32241>>>End_Object
32242>>>
32242>>>
32242>    Use DemoManualDataAwareGrid.wo
Including file: DemoManualDataAwareGrid.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoManualDataAwareGrid.wo)
32242>>>// Inventory List
32242>>>//
32242>>>
32242>>>Use cWebView.pkg
32242>>>Use cWebPanel.pkg
32242>>>Use cWebGrid.pkg
32242>>>Use cWebColumn.pkg
32242>>>
32242>>>Use Vendor.DD
32242>>>Use Invt.DD
32242>>>
32242>>>
32242>>>Object oDemoManualDataAwareGrid is a cWebView
32244>>>    Set piColumnCount to 10
32245>>>    Set psCaption to "Manual Data Aware Grid"
32246>>>    Set piWidth to 750
32247>>>    
32247>>>
32247>>>    Object oVendor_DD is a Vendor_DataDictionary
32249>>>    End_Object 
32250>>>
32250>>>    Object oInvt_DD is a Invt_DataDictionary
32252>>>        Set DDO_Server To oVendor_DD
32253>>>    End_Object 
32254>>>
32254>>>    Set Main_DD To oInvt_DD
32255>>>    Set Server  To oInvt_DD
32256>>>
32256>>>    Object oGrid is a cWebGrid 
32258>>>        Set piHeight to 500
32259>>>        Set pbColumnSortable to True
32260>>>        Set peDbGridType to gtManual
32261>>>        
32261>>>        Object oInvt_Description is a cWebColumn
32263>>>            Entry_Item Invt.Description
32264>>>            Set psCaption to "Inventory Item"
32265>>>            Set piWidth to 75
32266>>>            
32266>>>            Set pbSortable to True
32267>>>        End_Object
32268>>>
32268>>>        Object oInvt_Vendor_Part_ID is a cWebColumn
32270>>>            Entry_Item Invt.Vendor_Part_ID
32271>>>            Set psCaption to "Part ID"
32272>>>            Set piWidth to 40
32273>>>            
32273>>>            Set pbSortable to True
32274>>>        End_Object
32275>>>        
32275>>>        Object oVendor_ID is a cWebColumn
32277>>>            Entry_Item Vendor.ID
32278>>>            Set psCaption to "Vendor"
32279>>>            Set piWidth to 30
32280>>>            
32280>>>            Set pbSortable to True
32281>>>        End_Object
32282>>>        
32282>>>        Object oVendor_Name is a cWebColumn
32284>>>            Entry_Item Vendor.Name
32285>>>            Set psCaption to "Vendor"
32286>>>            Set piWidth to 50
32287>>>            
32287>>>            Set pbSortable to True
32288>>>        End_Object
32289>>>        
32289>>>        Object oInvt_On_Hand is a cWebColumn
32291>>>            Entry_Item Invt.On_Hand
32292>>>            Set psCaption to "On Hand"
32293>>>            Set piWidth to 20
32294>>>            
32294>>>            Set pbSortable to True
32295>>>        End_Object
32296>>>
32296>>>        Object oInvt_Unit_Price is a cWebColumn
32298>>>            Entry_Item Invt.Unit_Price
32299>>>            Set psCaption to "Unit Price"
32300>>>            Set piWidth to 30
32301>>>            
32301>>>            Set pbSortable to True
32302>>>        End_Object
32303>>>
32303>>>
32303>>>        Procedure OnManualLoadData tWebRow[] ByRef aTheRows String ByRef sCurrentRowID
32306>>>            // Loads the first 10 inventory items.
32306>>>            Handle hoDD
32306>>>            RowID riRowID 
32306>>>            String sRowID
32306>>>            Integer iRow
32306>>>
32306>>>            // Establish the find ordering and find the first record.
32306>>>            Move 0 to iRow            
32307>>>            Get Server to hoDD
32308>>>            Get ReadDDFirstRecord hoDD 1 False to riRowID
32309>>>
32309>>>            //  Find remaining records....
32309>>>            While (Found and (iRow < 10))
32313>>>                //  We use the LoadGridRow function to fill the row struct based on the data entry object (DEO) values
32313>>>                Get LoadGridRow to aTheRows[iRow]
32314>>>                
32314>>>                Increment iRow
32315>>>                Send Locate_Next to hoDD
32316>>>            Loop
32317>>>>
32317>>>            
32317>>>            // Set the first row to be the selected row
32317>>>            If (IsNullRowID(riRowID)) Begin
32319>>>                Move "" to sCurrentRowID
32320>>>            End
32320>>>>
32320>>>            Else Begin
32321>>>                Send FindByRowId of oInvt_DD Invt.File_Number riRowID
32322>>>                Move (SerializeRowID(riRowID)) to sCurrentRowID
32323>>>            End
32323>>>>
32323>>>            
32323>>>            
32323>>>        End_Procedure
32324>>>
32324>>>        Procedure OnLoad
32327>>>            Send GridRefresh
32328>>>        End_Procedure
32329>>>    End_Object
32330>>>
32330>>>End_Object 
32331>    Use DemoManualGrid.wo
Including file: DemoManualGrid.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoManualGrid.wo)
32331>>>Use cWebView.pkg
32331>>>Use cWebPanel.pkg
32331>>>Use cWebForm.pkg 
32331>>>Use cWebGrid.pkg
32331>>>Use cWebColumn.pkg
32331>>>Use cWebLabel.pkg
32331>>>Use cWebButton.pkg
32331>>>Use cWebHtmlBox.pkg
32331>>>
32331>>>Object oDemoManualGrid is a cWebView
32333>>>    Set piWidth to 750
32334>>>    Set psCaption to "Manual Grid"
32335>>>    
32335>>>    Set piColumnCount to 10
32336>>>
32336>>>    Object oGrid is a cWebGrid
32338>>>        Set pbFillHeight to True
32339>>>
32339>>>        Set pbDataAware to False
32340>>>        Set pbOfflineEditing to True
32341>>>        
32341>>>        Set pbColumnSortable to True
32342>>>        Set piSortColumn to 0
32343>>>        
32343>>>        Object oArtistCol is a cWebColumn
32345>>>            Set psCaption to "Artist"
32346>>>            Set piWidth to 100
32347>>>        End_Object
32348>>>        
32348>>>        Object oAlbumCol is a cWebColumn
32350>>>            Set psCaption to "Album"
32351>>>            Set piWidth to 100
32352>>>        End_Object
32353>>>
32353>>>        Object oSizeCol is a cWebColumn
32355>>>            Set psCaption to "Size"
32356>>>            Set peDataType to typeNumber
32357>>>            Set piWidth to 40
32358>>>            Set psMask to ",*0.0 MB"
32359>>>            
32359>>>            Set piPrecision to 1
32360>>>            Set piMaxLength to 10
32361>>>        End_Object
32362>>>
32362>>>        Object oLengthCol is a cWebColumn
32364>>>            Set psCaption to "Length"
32365>>>            Set peDataType to typeNumber
32366>>>            Set piWidth to 40
32367>>>            Set psMask to ",*0.00 M"
32368>>>            
32368>>>            
32368>>>            Set piMaxLength to 10
32369>>>            Set piPrecision to 2
32370>>>        End_Object
32371>>>        
32371>>>        Procedure OnManualLoadData tWebRow[] ByRef aTheRows String ByRef sCurrentRowID
32374>>>            Integer iHigh
32374>>>            
32374>>>            Get LoadDataFromFile (&aTheRows) to iHigh
32375>>>        End_Procedure 
32376>>>        
32376>>>        Procedure OnProcessDataSet tWebRow[] aData Integer eOperation Integer iSelectedRowIndex
32379>>>            Send SaveDataToFile aData
32380>>>            
32380>>>            Send ShowInfoBox ("Saved " + String(SizeOfArray(aData)) + " lines!") "Confirm"
32381>>>        End_Procedure
32382>>>        
32382>>>        Procedure OnLoad
32385>>>            Forward Send OnLoad
32387>>>            
32387>>>            Send GridRefresh
32388>>>        End_Procedure
32389>>>    End_Object
32390>>>
32390>>>    Object oWebButton1 is a cWebButton
32392>>>        Set piColumnSpan to 0
32393>>>        Set psCaption to "Save Data!"
32394>>>    
32394>>>        Procedure OnClick
32397>>>            Send ProcessDataSet of oGrid 342
32398>>>        End_Procedure
32399>>>    End_Object
32400>>>    
32400>>>    Object oDescriptionLabel is a cWebHtmlBox
32402>>>        Set psHtml to "<h1>Loading</h1><p>The data shown inside the grid is manually loaded from a CSV file. The <b>pbDataAware</b> property is set to False, so that it is manually loaded and doesn't try to find and save on DDOs. The grid is triggered to fill itself by calling <b>GridRefresh</b> and, because <b>pbDataAware</b> is False, this causes <b>OnManualLoadData</b> to be called. The data is put in an array of <b>tWebRow</b> structs received by reference. The first string in the aValues array is the unique for each row, it is required to provide such an unique ID. The <b>ConvertToClient</b> function can be used to convert values to right format understood by the JavaScript engine.</p><h1>Saving</h1><p>Saving is done for the entire set at once. It is triggered by calling <b>ProcessDataSet</b>, which tells the client to send all rows to the server in a new call. This new call fires the <b>OnProcessDataSet</b> event that gets the data in an array of tWebRow structs. The <b>ConvertFromClient</b> function can be used to convert values back to native DataFlex types.</p>"
32403>>>        Set piColumnSpan to 0
32404>>>    End_Object
32405>>>        
32405>>>    Function LoadDataFromFile tWebRow[] ByRef aTheRows Returns Integer
32408>>>        String sArtist sAlbum sTrash
32408>>>        Number nSize nLength 
32408>>>        Integer iID iNum iDecSep iHighest
32408>>>        
32408>>>        
32408>>>        Direct_Input "ManualData.Csv"
32409>>>        
32409>>>        Get_Attribute DF_DECIMAL_SEPARATOR to iDecSep
32412>>>        Set_Attribute DF_DECIMAL_SEPARATOR to (Ascii("."))
32415>>>        
32415>>>        Move 0 to iNum
32416>>>        Move 0 to iHighest
32417>>>        Repeat
32417>>>>
32417>>>            Readln iID sArtist sAlbum nSize nLength sTrash
32423>>>            
32423>>>            If (Trim(sArtist) <> "") Begin
32425>>>                //  Decode data                             
32425>>>                Move iID                                    to aTheRows[iNum].sRowID
32426>>>                Move sArtist                                to aTheRows[iNum].aCells[0].sValue
32427>>>                Move sAlbum                                 to aTheRows[iNum].aCells[1].sValue
32428>>>                Move (ConvertToClient(typeNumber, nSize))   to aTheRows[iNum].aCells[2].sValue
32429>>>                Move (ConvertToClient(typeNumber, nLength)) to aTheRows[iNum].aCells[3].sValue
32430>>>                
32430>>>                If (iID > iHighest) Begin
32432>>>                    Move iID to iHighest                        
32433>>>                End
32433>>>>
32433>>>                
32433>>>                Increment iNum                                
32434>>>            End
32434>>>>
32434>>>        Until (SeqEof)// or iNum > 3)
32436>>>        
32436>>>        Set_Attribute DF_DECIMAL_SEPARATOR to iDecSep
32439>>>        
32439>>>        Close_Input
32440>>>        
32440>>>        WebSet piHighest to iHighest
32442>>>                
32442>>>        Function_Return iHighest
32443>>>    End_Function
32444>>>    
32444>>>    Property Integer piHighest 0
32448>>>    
32448>>>    Procedure SaveDataToFile tWebRow[] aData
32451>>>        //Send ShowInfoBox (SFormat("We are going to save %1 rows!", SizeOfArray(aData))) ("Yeeh!")
32451>>>        Integer iChOut iTo iRow iCol iDecSep iID iHigh
32451>>>        String sArtist sAlbum
32451>>>        Number nSize nLength 
32451>>>        
32451>>>        WebGet piHighest to iHigh
32452>>>        
32452>>>        Get_Attribute DF_DECIMAL_SEPARATOR to iDecSep
32455>>>        Set_Attribute DF_DECIMAL_SEPARATOR to (Ascii("."))
32458>>>        
32458>>>        EraseFile "Albums.csv"
32459>>>>
32459>>>        
32459>>>        Move (Seq_New_Channel()) to iChOut
32460>>>        Direct_Output channel iChOut "ManualData.csv"
32462>>>        
32462>>>        Move (SizeOfArray(aData) - 1) to iTo
32463>>>        
32463>>>        For iRow from 0 to iTo
32469>>>>
32469>>>            If (Left(aData[iRow].sRowID, 4) = "new_") Begin
32471>>>                //  Autonumber
32471>>>                Increment iHigh
32472>>>                Move iHigh to iID
32473>>>            End
32473>>>>
32473>>>            Else Begin
32474>>>                Move (aData[iRow].sRowID) to iID
32475>>>            End
32475>>>>
32475>>>            
32475>>>            //  Encode data
32475>>>            Move (Replaces('"', aData[iRow].aCells[0].sValue, '\"'))           to sArtist
32476>>>            Move (Replaces('"', aData[iRow].aCells[1].sValue, '\"'))           to sAlbum
32477>>>            Move (ConvertFromClient(typeNumber, aData[iRow].aCells[2].sValue)) to nSize
32478>>>            Move (ConvertFromClient(typeNumber, aData[iRow].aCells[3].sValue)) to nLength
32479>>>                
32479>>>            Writeln channel iChOut '"' iID '","' sArtist '","' sAlbum '","' nSize '","' nLength '"'
32492>>>        Loop
32493>>>>
32493>>>        
32493>>>        Close_Output channel iChOut
32495>>>        Send Seq_Release_Channel iChOut
32496>>>        
32496>>>        Set_Attribute DF_DECIMAL_SEPARATOR to iDecSep
32499>>>    End_Procedure
32500>>>
32500>>>End_Object
32501>    Use DemoMultiDDOStructure.wo
Including file: DemoMultiDDOStructure.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoMultiDDOStructure.wo)
32501>>>Use cWebView.pkg
32501>>>Use cWebPanel.pkg
32501>>>Use cWebForm.pkg 
32501>>>Use cWebTabContainer.pkg
32501>>>Use cWebTabPage.pkg
32501>>>Use cWebEdit.pkg
32501>>>Use cWebCheckbox.pkg
32501>>>Use cWebGroup.pkg
32501>>>
32501>>>Use Vendor.DD
32501>>>Use Customer.DD
32501>>>Use Invt.DD
32501>>>
32501>>>Object oDemoMultiDDOStructure is a cWebView
32503>>>    Set piWidth to 900
32504>>>    Set psCaption to "Multi DDO Structure"
32505>>>    Set piColumnCount to 10
32506>>>    
32506>>>    // DDO Structure 1: this will be the view's main DDO structure
32506>>>    Object oCustomer_DD is a Customer_DataDictionary
32508>>>    End_Object
32509>>>
32509>>>    Set Main_DD to oCustomer_DD
32510>>>    
32510>>>    // DDO Structure 2: We need to register this so it will be synchronized at the client
32510>>>    Object oInactiveCustomer_DD is a Customer_DataDictionary
32512>>>        Procedure OnConstrain
32515>>>            Constrain Customer.Status eq "N"
32517>>>        End_Procedure
32518>>>    End_Object
32519>>>    
32519>>>    Send AddDDOStructure oInactiveCustomer_DD
32520>>>    
32520>>>    // DDO Structure 3: We need to register this so it will be synchronized at the client
32520>>>    Object oVendor_DD is a Vendor_DataDictionary
32522>>>    End_Object
32523>>>    
32523>>>    Send AddDDOStructure oVendor_DD
32524>>>
32524>>>    // DDO Structure 4: We need to register this so it will be synchronized at the client
32524>>>    Object oVendorTwo_DD is a Vendor_DataDictionary
32526>>>    End_Object
32527>>>
32527>>>    Object oInvt_DD is a Invt_DataDictionary
32529>>>        Set DDO_Server to oVendorTwo_DD
32530>>>    End_Object
32531>>>
32531>>>    Send AddDDOStructure oInvt_DD
32532>>>
32532>>>    Object oCustomerContainer is a cWebGroup
32534>>>        Set psCaption to "All Customers:"
32535>>>        Set piColumnCount to 9
32536>>>        Set piColumnSpan to 5
32537>>>        
32537>>>        Set Server to oCustomer_DD
32538>>>
32538>>>        Object oCustomer_Customer_Number is a cWebForm
32540>>>            Entry_Item Customer.Customer_Number
32541>>>            Set piColumnSpan to 0
32542>>>            Set psLabel to "Customer Number:"
32543>>>            Set peAlign to alignLeft
32544>>>        End_Object
32545>>>
32545>>>        Object oCustomer_Name is a cWebForm
32547>>>            Entry_Item Customer.Name
32548>>>            Set piColumnSpan to 0
32549>>>            Set psLabel to "Customer Name:"
32550>>>        End_Object
32551>>>
32551>>>        Object oCustomer_Address is a cWebForm
32553>>>            Entry_Item Customer.Address
32554>>>            Set piColumnSpan to 0
32555>>>            Set psLabel to "Street Address:"
32556>>>        End_Object
32557>>>
32557>>>        Object oCustomer_City is a cWebForm
32559>>>            Entry_Item Customer.City
32560>>>            Set piColumnSpan to 0
32561>>>            Set psLabel to "City:"
32562>>>        End_Object
32563>>>
32563>>>        Object oCustomer_Comments is a cWebEdit
32565>>>            Entry_Item Customer.Comments
32566>>>            Set piColumnSpan to 0
32567>>>            Set pbShowLabel to False
32568>>>        End_Object           
32569>>>    End_Object
32570>>>
32570>>>    Object oInactiveCustomerContainer is a cWebGroup
32572>>>        Set psCaption to "Inactive Customers:"
32573>>>        Set piColumnIndex to 5
32574>>>        Set piColumnCount to 9
32575>>>        
32575>>>        Set Server to oInactiveCustomer_DD
32576>>>
32576>>>        Object oCustomer_Customer_Number is a cWebForm
32578>>>            Entry_Item Customer.Customer_Number
32579>>>            Set piColumnSpan to 0
32580>>>            Set psLabel to "Customer Number:"
32581>>>            Set peAlign to alignLeft
32582>>>        End_Object
32583>>>
32583>>>        Object oCustomer_Name is a cWebForm
32585>>>            Entry_Item Customer.Name
32586>>>            Set piColumnSpan to 0
32587>>>            Set psLabel to "Customer Name:"
32588>>>        End_Object
32589>>>
32589>>>        Object oCustomer_Address is a cWebForm
32591>>>            Entry_Item Customer.Address
32592>>>            Set piColumnSpan to 0
32593>>>            Set psLabel to "Street Address:"
32594>>>        End_Object
32595>>>
32595>>>        Object oCustomer_City is a cWebForm
32597>>>            Entry_Item Customer.City
32598>>>            Set piColumnSpan to 0
32599>>>            Set psLabel to "City:"
32600>>>        End_Object
32601>>>
32601>>>        Object oCustomer_Comments is a cWebEdit
32603>>>            Entry_Item Customer.Comments
32604>>>            Set piColumnSpan to 0
32605>>>            Set pbShowLabel to False
32606>>>        End_Object           
32607>>>
32607>>>        Object oCustomer_Status is a cWebCheckBox
32609>>>            Entry_Item Customer.Status
32610>>>            Set piColumnSpan to 0
32611>>>            Set psCaption to "Active Status"
32612>>>            Set pbShowLabel to True
32613>>>        End_Object
32614>>>    End_Object
32615>>>    
32615>>>    Object oVendorContainer is a cWebGroup
32617>>>        Set psCaption to "Vendor:"
32618>>>        Set piColumnSpan to 5
32619>>>        Set piColumnCount to 9
32620>>>            
32620>>>        Set Server to oVendor_DD
32621>>>
32621>>>        Object oVendor_ID is a cWebForm
32623>>>            Entry_Item Vendor.ID
32624>>>            Set piColumnSpan to 0
32625>>>            Set psLabel to "Vendor ID:"
32626>>>            Set peAlign to alignLeft
32627>>>        End_Object
32628>>>
32628>>>        Object oVendor_Name is a cWebForm
32630>>>            Entry_Item Vendor.Name
32631>>>            Set piColumnSpan to 0
32632>>>            Set psLabel to "Vendor Name:"
32633>>>        End_Object
32634>>>
32634>>>        Object oVendor_Address is a cWebForm
32636>>>            Entry_Item Vendor.Address
32637>>>            Set piColumnSpan to 0
32638>>>            Set psLabel to "Street Address:"
32639>>>        End_Object
32640>>>
32640>>>        Object oVendor_City is a cWebForm
32642>>>            Entry_Item Vendor.City
32643>>>            Set piColumnSpan to 0
32644>>>            Set psLabel to "City:"
32645>>>        End_Object            
32646>>>    End_Object
32647>>>    
32647>>>    Object oInventoryContainer is a cWebGroup
32649>>>        Set psCaption to "Inventory:"
32650>>>        Set piColumnIndex to 5
32651>>>        Set piColumnCount to 9
32652>>>        
32652>>>        Set Server to oInvt_DD
32653>>>
32653>>>        Object oInvt_Item_ID is a cWebForm
32655>>>            Entry_Item Invt.Item_ID
32656>>>            Set piColumnSpan to 0
32657>>>            Set psLabel to "Inventory Item:"
32658>>>            Set peAlign to alignLeft
32659>>>        End_Object
32660>>>
32660>>>        Object oInvt_Description is a cWebForm
32662>>>            Entry_Item Invt.Description
32663>>>            Set piColumnSpan to 0
32664>>>            Set psLabel to "Description:"
32665>>>        End_Object
32666>>>
32666>>>        Object oVendor_Name1 is a cWebForm
32668>>>            Entry_Item Vendor.Name
32669>>>            Set piColumnSpan to 0
32670>>>            Set psLabel to "Vendor:"
32671>>>        End_Object
32672>>>
32672>>>        Object oInvt_Unit_Price is a cWebForm
32674>>>            Entry_Item Invt.Unit_Price
32675>>>            Set piColumnSpan to 0
32676>>>            Set psLabel to "Unit Price:"
32677>>>            Set peAlign to alignLeft
32678>>>        End_Object
32679>>>
32679>>>        Object oInvt_On_Hand is a cWebForm
32681>>>            Entry_Item Invt.On_Hand
32682>>>            Set piColumnSpan to 0
32683>>>            Set psLabel to "On Hand:"
32684>>>            Set peAlign to alignLeft
32685>>>        End_Object
32686>>>        
32686>>>    End_Object
32687>>>End_Object
32688>    Use DemoTreeView.wo
Including file: DemoTreeView.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoTreeView.wo)
32688>>>Use cWebView.pkg
32688>>>Use cWebForm.pkg
32688>>>Use cWebLabel.pkg
32688>>>Use cWebTreeView.pkg
32688>>>
32688>>>Use Vendor.DD
32688>>>Use Invt.DD
32688>>>Use cWebSpacer.pkg
32688>>>Use cWebHorizontalLine.pkg
32688>>>
32688>>>
32688>>>Object oDemoTreeView is a cWebView
32690>>>    Set psCaption to "TreeView + OnSyncView"
32691>>>    Set piColumnCount to 3
32692>>>    Set pbClearAfterSave to False
32693>>>     
32693>>>    Object oVendor_DD is a Vendor_DataDictionary
32695>>>    End_Object // oVendor_DD
32696>>>
32696>>>    Object oInvt_DD is a Invt_DataDictionary
32698>>>        Set DDO_Server to oVendor_DD
32699>>>        
32699>>>        Procedure Creating
32702>>>            Forward Send Creating
32704>>>            
32704>>>            tWebTreeItem tNode
32704>>>            tWebTreeItem tNode
32704>>>            
32704>>>            //  Add tree item for the item
32704>>>            Move (Trim(Invt.Item_ID))               to tNode.sName
32705>>>            Move (Trim(Invt.Description))           to tNode.sAltText
32706>>>            Move (Trim(Invt.Item_ID))               to tNode.sId
32707>>>            Move (Trim(Vendor.ID))                  to tNode.sParentId
32708>>>            Move False                              to tNode.bLoadChildren
32709>>>            Move False                              to tNode.bFolder
32710>>>            
32710>>>            Send InsertNode of oItemsTree tNode
32711>>>        End_Procedure
32712>>>        
32712>>>        Procedure Deleting
32715>>>            String sId
32715>>>            
32715>>>            Move (Trim(Invt.Item_ID)) to sId
32716>>>            
32716>>>            Forward Send Deleting
32718>>>            
32718>>>            //  Remove node from tree
32718>>>            Send RemoveNode of oItemsTree sId
32719>>>        End_Procedure
32720>>>        
32720>>>        Procedure Update
32723>>>            Forward Send Update
32725>>>            
32725>>>            tWebTreeItem tNode
32725>>>            tWebTreeItem tNode
32725>>>            
32725>>>            //  Update item in tree
32725>>>            Move (Trim(Invt.Item_ID))               to tNode.sName
32726>>>            Move (Trim(Invt.Description))           to tNode.sAltText
32727>>>            Move (Trim(Invt.Item_ID))               to tNode.sId
32728>>>            Move (Trim(Vendor.ID))                  to tNode.sParentId
32729>>>            Move False                              to tNode.bLoadChildren
32730>>>            Move False                              to tNode.bFolder
32731>>>            
32731>>>            Send UpdateNode of oItemsTree tNode
32732>>>        End_Procedure
32733>>>    End_Object // oInvt_DD
32734>>>
32734>>>    Set Main_DD to oInvt_DD
32735>>>    Set Server  to oInvt_DD
32736>>>
32736>>>    Object oLeftPanel is a cWebPanel
32738>>>        Set peRegion to prLeft
32739>>>        Set piWidth to 400
32740>>>        Set piMinWidth to 100
32741>>>        Set pbResizable to True
32742>>>            
32742>>>        Object oItemsTree is a cWebTreeView
32744>>>            Set pbServerOnSelect to True
32745>>>            Set psLabel to "Tree"
32746>>>            
32746>>>            Procedure OnSelect String sId String sValue Integer iLevel
32749>>>                If (iLevel = 1) Begin
32751>>>                    Send Clear of oInvt_DD
32752>>>                    Move sId to Vendor.ID
32753>>>                    Send Find of oVendor_DD EQ Index.1
32754>>>                End
32754>>>>
32754>>>                
32754>>>                If (iLevel = 2) Begin
32756>>>                    Move sId to Invt.Item_ID
32757>>>                    Send Find of oInvt_DD EQ Index.1
32758>>>                End
32758>>>>
32758>>>            End_Procedure
32759>>>            
32759>>>            
32759>>>            Function OnLoadChildNodes String sId String sValue Integer iLevel returns tWebTreeItem[]
32762>>>                tWebTreeItem[] aItems
32762>>>                tWebTreeItem[] aItems
32763>>>                tWebTreeItem tItem
32763>>>                tWebTreeItem tItem
32763>>>                Integer iCount
32763>>>                
32763>>>                Move 0 to iCount
32764>>>                
32764>>>                If (iLevel = 0) Begin   //  At the first level we will show the vendors
32766>>>                    //  Loop through vendors (use Request_Read so we don't change the current record of the DDO)
32766>>>                    Send Request_Read of oVendor_DD FIRST_RECORD Vendor.File_Number Index.1
32767>>>                    While (Found)
32771>>>                        
32771>>>                        //  Add tree item for the vendor
32771>>>                        Move (Trim(Vendor.Name))                to aItems[iCount].sName
32772>>>                        Move (Trim(Vendor.ID))                  to aItems[iCount].sId
32773>>>                        Move True                               to aItems[iCount].bLoadChildren
32774>>>                        Move True                               to aItems[iCount].bFolder
32775>>>//                        Move (SerializeRowID(GetRowID(Vendor))) to aItems[iCount].sValue
32775>>>                                                
32775>>>                        Increment iCount                        
32776>>>                        Send Locate_Next to oVendor_DD
32777>>>                    Loop
32778>>>>
32778>>>                End
32778>>>>
32778>>>                
32778>>>                If (iLevel = 1) Begin
32780>>>                    
32780>>>                    Clear Invt
32781>>>                    
32781>>>                    Move sId to Invt.Vendor_ID
32782>>>                    Find GT Invt by Index.2
32783>>>>
32783>>>                    
32783>>>                    
32783>>>                    
32783>>>                    While (Found and Trim(Invt.Vendor_ID) = sId)
32787>>>                        
32787>>>                        //  Add tree item for the item
32787>>>                        Move (Trim(Invt.Item_ID))               to aItems[iCount].sName
32788>>>                        Move (Trim(Invt.Description))           to aItems[iCount].sAltText
32789>>>                        Move (Trim(Invt.Item_ID))               to aItems[iCount].sId
32790>>>                        Move False                              to aItems[iCount].bLoadChildren
32791>>>                        Move False                              to aItems[iCount].bFolder
32792>>>                        
32792>>>                        Increment iCount
32793>>>                        Find GT invt by Index.2
32794>>>>
32794>>>                    Loop
32795>>>>
32795>>>                    
32795>>>                End
32795>>>>
32795>>>                
32795>>>                Function_Return aItems
32796>>>            End_Function
32797>>>        End_Object
32798>>>    End_Object
32799>>>    
32799>>>    Object oCenterPanel is a cWebPanel
32801>>>        Set peRegion to prCenter
32802>>>        Set piColumnCount to 2
32803>>>        Set piMinWidth to 400
32804>>>        
32804>>>        Object oItem_ID is a cWebForm
32806>>>            Set psLabel to "Invt. Item ID"
32807>>>            Entry_Item Invt.Item_ID
32808>>>            
32808>>>        End_Object // oInvtItem_ID
32809>>>    
32809>>>        Object oDescription is a cWebForm
32811>>>            Set psLabel to "Invt. Description"
32812>>>            Set piColumnSpan to 2
32813>>>            Entry_Item Invt.Description
32814>>>            
32814>>>            Set psValue to "Hi there!"
32815>>>        End_Object // oInvtDescription
32816>>>
32816>>>        Object oDevider1 is a cWebHorizontalLine
32818>>>        End_Object
32819>>>        
32819>>>    
32819>>>        Object oVendorID is a cWebForm
32821>>>            Set psLabel to "Vendor ID"
32822>>>            Entry_Item Vendor.ID
32823>>>        End_Object // oVendorID
32824>>>    
32824>>>        Object oVendorName is a cWebForm
32826>>>            Set psLabel to "Vendor Name"
32827>>>            Set piColumnSpan to 2
32828>>>            Entry_Item Vendor.Name
32829>>>        End_Object // oVendorName
32830>>>    
32830>>>        Object oInvtVendor_Part_ID is a cWebForm
32832>>>            Set psLabel to "Vendor Part ID"
32833>>>            Entry_Item Invt.Vendor_Part_ID
32834>>>        End_Object // oInvtVendor_Part_ID
32835>>>        
32835>>>        Object oDevider2 is a cWebHorizontalLine
32837>>>        End_Object
32838>>>        
32838>>>        Object oInvtUnit_Price is a cWebForm
32840>>>            Set psLabel to "Unit Price"
32841>>>            Entry_Item Invt.Unit_Price
32842>>>        End_Object // oInvtUnit_Price
32843>>>    
32843>>>        Object oInvtOn_Hand is a cWebForm
32845>>>            Set psLabel to "On Hand"
32846>>>            Set piColumnIndex to 1
32847>>>            Entry_Item Invt.On_Hand
32848>>>        End_Object // oInvtOn_Hand
32849>>>    End_Object
32850>>>    
32850>>>    //
32850>>>    //  Only administrators should be able to save in this view.
32850>>>    //
32850>>>    Procedure OnSyncView
32853>>>        Integer iUserRights
32853>>>        Get piUserRights of ghoWebSessionManager to iUserRights
32854>>>        
32854>>>        Set Read_Only_State of oVendor_DD to (iUserRights <= 0)
32855>>>        Set Read_Only_State of oInvt_DD to (iUserRights <= 0)
32856>>>    End_Procedure
32857>>>End_Object
32858>>>
32858>>>
32858>    Use DemoTreeViewCards.wo
Including file: DemoTreeViewCards.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoTreeViewCards.wo)
32858>>>Use cWebView.pkg
32858>>>Use cWebPanel.pkg
32858>>>Use cWebForm.pkg 
32858>>>Use cWebTreeView.pkg
32858>>>Use cWebCardContainer.pkg
32858>>>Use cWebCard.pkg
32858>>>Use cWebCheckBox.pkg
32858>>>Use cWebRadio.pkg
32858>>>Use cWebLabel.pkg
32858>>>Use cWebSpacer.pkg
32858>>>Use cWebHorizontalLine.pkg
32858>>>Use cWebHtmlBox.pkg
32858>>> 
32858>>>// Treeview item IDs
32858>>>// ~~~~~~~~~~~~~~~~~
32858>>>
32858>>>// treeview root level categories
32858>>>Define C_cfOverview     for 0
32858>>>Define C_cfEnvironment  for 10
32858>>>Define C_cfEditor       for 20
32858>>>Define C_cfCodeExplorer for 30
32858>>>Define C_cfDatabase     for 40
32858>>>
32858>>>// treeview sub-pages
32858>>>Define C_cfPage1 for 1
32858>>>Define C_cfPage2 for 2
32858>>>Define C_cfPage3 for 3
32858>>>Define C_cfPage4 for 4
32858>>>
32858>>>
32858>>>Object oDemoTreeViewCards is a cWebView
32860>>>    Set piWidth to 700
32861>>>    Set piHeight to 550
32862>>>    Set psCaption to "Configuration Panel"
32863>>>
32863>>>    Object oLeftPanel is a cWebPanel
32865>>>        Set peRegion to prLeft
32866>>>        Set piWidth to 200
32867>>>
32867>>>        Object oCategoryTree is a cWebTreeView
32869>>>            Set pbServerOnSelect to True
32870>>>            Set psBackgroundColor to "white" 
32871>>>
32871>>>            Function OnLoadChildNodes String sId String sValue Integer iLevel Returns tWebTreeItem[]
32874>>>                tWebTreeItem[] aItems
32874>>>                tWebTreeItem[] aItems
32875>>>                
32875>>>                // Populate Root Level Items
32875>>>                // ~~~~~~~~~~~~~~~~~~~~~~~~~
32875>>>                If (iLevel = 0) Begin
32877>>>                    Move C_cfOverview            to aItems[0].sId
32878>>>                    Move sId                     to aItems[0].sParentId
32879>>>                    Move "Overview"              to aItems[0].sName
32880>>>                    Move False                   to aItems[0].bLoadChildren
32881>>>                    Move True                    to aItems[0].bFolder
32882>>>                    Move "CssStyle/tvFolder.gif" to aItems[0].sIcon
32883>>>                    Move (WebObjectName(oOverviewCard)) to aItems[0].sValue    // Store the Card object name of the card to open
32884>>>
32884>>>                    Move C_cfEnvironment         to aItems[1].sId
32885>>>                    Move sId                     to aItems[1].sParentId
32886>>>                    Move "Environment"           to aItems[1].sName
32887>>>                    Move True                    to aItems[1].bLoadChildren
32888>>>                    Move True                    to aItems[1].bFolder
32889>>>                    Move (WebObjectName(oEnvironmentGeneralCard)) to aItems[1].sValue
32890>>>                    
32890>>>                    Move C_cfEditor              to aItems[2].sId
32891>>>                    Move sId                     to aItems[2].sParentId
32892>>>                    Move "Editor"                to aItems[2].sName
32893>>>                    Move True                    to aItems[2].bLoadChildren
32894>>>                    Move True                    to aItems[2].bFolder
32895>>>                    Move (WebObjectName(oEditorGeneralCard)) to aItems[2].sValue
32896>>>                                               
32896>>>                    Move C_cfCodeExplorer        to aItems[3].sId
32897>>>                    Move sId                     to aItems[3].sParentId
32898>>>                    Move "Code Explorer"         to aItems[3].sName
32899>>>                    Move False                   to aItems[3].bLoadChildren
32900>>>                    Move True                    to aItems[3].bFolder
32901>>>                    Move "CssStyle/tvFolder.gif" to aItems[4].sIcon
32902>>>                    Move (WebObjectName(oCodeExplorerCard)) to aItems[3].sValue
32903>>>                                               
32903>>>                    Move C_cfDatabase            to aItems[4].sId
32904>>>                    Move sId                     to aItems[4].sParentId
32905>>>                    Move "Database"              to aItems[4].sName
32906>>>                    Move False                   to aItems[4].bLoadChildren
32907>>>                    Move True                    to aItems[4].bFolder
32908>>>                    Move "CssStyle/tvFolder.gif" to aItems[4].sIcon
32909>>>                    Move (WebObjectName(oDatabaseCard)) to aItems[4].sValue
32910>>>                End
32910>>>>
32910>>>                Else Begin
32911>>>                    // Populate Sub-Pages
32911>>>                    // ~~~~~~~~~~~~~~~~~~
32911>>>                    Case Begin
32911>>>                        Case (sID = C_cfOverview)
32913>>>                            Case Break
32914>>>                            
32914>>>                        Case (sID = C_cfEnvironment)
32917>>>                            Move (C_cfEnvironment + C_cfPage1) to aItems[0].sId
32918>>>                            Move sId                           to aItems[0].sParentId
32919>>>                            Move "General"                     to aItems[0].sName
32920>>>                            Move False                         to aItems[0].bLoadChildren
32921>>>                            Move False                         to aItems[0].bFolder
32922>>>                            Move (WebObjectName(oEnvironmentGeneralCard)) to aItems[0].sValue    // Store the Card object name of the card to open
32923>>>
32923>>>                            Move (C_cfEnvironment + C_cfPage2) to aItems[1].sId
32924>>>                            Move sId                           to aItems[1].sParentId
32925>>>                            Move "Window Layout"               to aItems[1].sName
32926>>>                            Move False                         to aItems[1].bLoadChildren
32927>>>                            Move False                         to aItems[1].bFolder
32928>>>                            Move (WebObjectName(oEnvironmentWindowLayoutCard)) to aItems[1].sValue
32929>>>                            Case Break
32930>>>                            
32930>>>                        Case (sID = C_cfEditor)
32933>>>                            Move (C_cfEditor + C_cfPage1)      to aItems[0].sId
32934>>>                            Move sId                           to aItems[0].sParentId
32935>>>                            Move "General"                     to aItems[0].sName
32936>>>                            Move False                         to aItems[0].bLoadChildren
32937>>>                            Move False                         to aItems[0].bFolder
32938>>>                            Move (WebObjectName(oEditorGeneralCard)) to aItems[0].sValue
32939>>>
32939>>>                            Move (C_cfEditor + C_cfPage2)      to aItems[1].sId
32940>>>                            Move sId                           to aItems[1].sParentId
32941>>>                            Move "Misc"                        to aItems[1].sName
32942>>>                            Move False                         to aItems[1].bLoadChildren
32943>>>                            Move False                         to aItems[1].bFolder
32944>>>                            Move (WebObjectName(oEditorMiscCard)) to aItems[1].sValue
32945>>>                            Case Break
32946>>>                            
32946>>>                        Case (sID = C_cfCodeExplorer)
32949>>>                            Case Break
32950>>>                        
32950>>>                        Case (sID = C_cfDatabase)
32953>>>                            Case Break
32954>>>                    Case End
32954>>>                End
32954>>>>
32954>>>                
32954>>>                Function_Return aItems
32955>>>            End_Function
32956>>>
32956>>>            Procedure OnSelect String sId String sValue Integer iLevel
32959>>>                Handle hoCard
32959>>>                
32959>>>                Forward Send OnSelect sId sValue iLevel
32961>>>                
32961>>>                If (sValue <> "") Begin
32963>>>                    // Show the card pointed to by sValue
32963>>>                    Get WebObjectByName sValue to hoCard
32964>>>                    
32964>>>                    If (hoCard <> 0) Begin
32966>>>                        Send Show to hoCard
32967>>>                    End
32967>>>>
32967>>>                End
32967>>>>
32967>>>            End_Procedure
32968>>>
32968>>>            Procedure OnLoad
32971>>>                Forward Send OnLoad
32973>>>                Send Select C_cfOverview   // select the "Overview" item by default
32974>>>            End_Procedure
32975>>> 
32975>>>        End_Object       
32976>>>    End_Object
32977>>>    
32977>>>    Object oCenterPanel is a cWebPanel
32979>>>        Object oCardContainer is a cWebCardContainer
32981>>>            Set pbShowCaption to True
32982>>>
32982>>>            Object oOverviewCard is a cWebCard
32984>>>                Set psCaption to "Overview"
32985>>>
32985>>>                Object oWebSpacer2 is a cWebSpacer
32987>>>                End_Object
32988>>>
32988>>>                Object oWebHtmlBox1 is a cWebHtmlBox
32990>>>                    Set piColumnSpan to 0
32991>>>                    Set psHtml to ("This view demonstrates the use of the cWebTreeView control together with cWebCardContainer and cWebCard." ;                                 + "<br><br>Web cards are used to stack panels containing other web controls, one on top of another. " ;                                 + "This demonstrates a style of configuration dialog where the different configuration pages are selected from a tree view." ;                                 + "<br><br>The cWebCardContainer object is used to group cWebCards together. Each cWebCard contains a set of controls to display when that card is shown. " ;                                 + "The cWebTreeView is used to represent the cards hierarchically and navigating the tree nodes will change which card is on top." ;                                 + "<br><br>Lastly, this view demonstrates how to apply application styles to modify the appearance of the tree view. These application styles are defined in the file 'application.css'." ;                                 + "<br><br>The source code for this view can be found in the file 'DemoTreeViewCards.wo'.")
32992>>>                End_Object
32993>>>            End_Object
32994>>>
32994>>>            Object oEnvironmentGeneralCard is a cWebCard
32996>>>                Set psCaption to "Environment - General"
32997>>>
32997>>>                Object oWebSpacer2 is a cWebSpacer
32999>>>                End_Object
33000>>>                
33000>>>                Object oWebCheckbox1 is a cWebCheckbox
33002>>>                    Set psChecked to "Y"
33003>>>                    Set psUnchecked to "N"
33004>>>                    Set psValue to "Y"
33005>>>                    Set piColumnSpan to 0
33006>>>                    Set psCaption to "Load Previous Workspace when starting the Studio"
33007>>>                End_Object
33008>>>                
33008>>>                Object oWebCheckbox2 is a cWebCheckbox
33010>>>                    Set psChecked to "Y"
33011>>>                    Set psUnchecked to "N"
33012>>>                    Set psValue to "Y"
33013>>>                    Set piColumnSpan to 0
33014>>>                    Set psCaption to "Open Dashboard when creating a new Workspace"
33015>>>                End_Object
33016>>>
33016>>>                Object oWebCheckbox3 is a cWebCheckbox
33018>>>                    Set psChecked to "Y"
33019>>>                    Set psUnchecked to "N"
33020>>>                    Set psValue to "Y"
33021>>>                    Set piColumnSpan to 0
33022>>>                    Set psCaption to "Show Designer Resolution Grid"
33023>>>                End_Object
33024>>>
33024>>>                Object oWebCheckbox4 is a cWebCheckbox
33026>>>                    Set psChecked to "Y"
33027>>>                    Set psUnchecked to "N"
33028>>>                    Set psValue to "Y"
33029>>>                    Set piColumnSpan to 0
33030>>>                    Set psCaption to "Save/Restore Workspace Desktop"
33031>>>                End_Object
33032>>>            End_Object
33033>>>
33033>>>            Object oEnvironmentWindowLayoutCard is a cWebCard
33035>>>                Set psCaption to "Environment - Window Layout"
33036>>>
33036>>>                Object oWebSpacer1 is a cWebSpacer
33038>>>                End_Object
33039>>>
33039>>>                Object oWebRadio1 is a cWebRadio
33041>>>                    Set piColumnSpan to 0
33042>>>                    Set psCaption to "Tabbed Window Layout"
33043>>>                End_Object
33044>>>
33044>>>                Object oWebRadio2 is a cWebRadio
33046>>>                    Set piColumnSpan to 0
33047>>>                    Set psCaption to "Multiple Document Interface (MDI) Layout"
33048>>>                End_Object
33049>>>
33049>>>                Object oWebLabel1 is a cWebLabel
33051>>>                    Set psCaption to "Note: You must restart the Studio to apply this change."
33052>>>                End_Object
33053>>>
33053>>>                Object oWebCheckbox5 is a cWebCheckbox
33055>>>                    Set piColumnSpan to 0
33056>>>                    Set psCaption to "Multi-Row Tabbed Windows"
33057>>>                End_Object
33058>>>            End_Object
33059>>>
33059>>>            Object oEditorGeneralCard is a cWebCard
33061>>>                Set psCaption to "Editor - General"
33062>>>
33062>>>                Object oWebSpacer1 is a cWebSpacer
33064>>>                End_Object
33065>>>
33065>>>                Object oWebCheckbox1 is a cWebCheckbox
33067>>>                    Set psChecked to "Y"
33068>>>                    Set psUnchecked to "N"
33069>>>                    Set psValue to "Y"
33070>>>                    Set piColumnSpan to 0
33071>>>                    Set psCaption to "Show CodeSense Lists After a Character is Typed"
33072>>>                End_Object
33073>>>
33073>>>                Object oWebCheckbox2 is a cWebCheckbox
33075>>>                    Set psChecked to "Y"
33076>>>                    Set psUnchecked to "N"
33077>>>                    Set piColumnSpan to 0
33078>>>                    Set psCaption to "Always open files in the Editor by default"
33079>>>                End_Object
33080>>>
33080>>>                Object oWebCheckbox3 is a cWebCheckbox
33082>>>                    Set psChecked to "Y"
33083>>>                    Set psUnchecked to "N"
33084>>>                    Set psValue to "Y"
33085>>>                    Set piColumnSpan to 0
33086>>>                    Set psCaption to "Show find-wrapped message"
33087>>>                End_Object
33088>>>            End_Object
33089>>>
33089>>>            Object oEditorMiscCard is a cWebCard
33091>>>                Set psCaption to "Editor - Settings"
33092>>>
33092>>>                Object oWebSpacer1 is a cWebSpacer
33094>>>                End_Object
33095>>>
33095>>>                Object oWebCheckbox1 is a cWebCheckbox
33097>>>                    Set psChecked to "Y"
33098>>>                    Set psUnchecked to "N"
33099>>>                    Set piColumnSpan to 0
33100>>>                    Set psCaption to "Smooth scrolling"
33101>>>                End_Object
33102>>>
33102>>>                Object oWebCheckbox2 is a cWebCheckbox
33104>>>                    Set psChecked to "Y"
33105>>>                    Set psUnchecked to "N"
33106>>>                    Set psValue to "Y"
33107>>>                    Set piColumnSpan to 0
33108>>>                    Set psCaption to "Show left margin"
33109>>>                End_Object
33110>>>
33110>>>                Object oWebCheckbox3 is a cWebCheckbox
33112>>>                    Set psChecked to "Y"
33113>>>                    Set psUnchecked to "N"
33114>>>                    Set psValue to "Y"
33115>>>                    Set piColumnSpan to 0
33116>>>                    Set psCaption to "Line tooltips on scroll"
33117>>>                End_Object
33118>>>
33118>>>                Object oWebCheckbox4 is a cWebCheckbox
33120>>>                    Set psChecked to "Y"
33121>>>                    Set psUnchecked to "N"
33122>>>                    Set psValue to "Y"
33123>>>                    Set piColumnSpan to 0
33124>>>                    Set psCaption to "Enable virtual space"
33125>>>                End_Object
33126>>>
33126>>>                Object oWebCheckbox5 is a cWebCheckbox
33128>>>                    Set psChecked to "Y"
33129>>>                    Set psUnchecked to "N"
33130>>>                    Set psValue to "Y"
33131>>>                    Set piColumnSpan to 0
33132>>>                    Set psCaption to "Color syntax highlighting"
33133>>>                End_Object
33134>>>
33134>>>                Object oWebCheckbox6 is a cWebCheckbox
33136>>>                    Set psChecked to "Y"
33137>>>                    Set psUnchecked to "N"
33138>>>                    Set psValue to "Y"
33139>>>                    Set piColumnSpan to 0
33140>>>                    Set psCaption to "Show horizontal scrollbar"
33141>>>                End_Object
33142>>>
33142>>>                Object oWebCheckbox7 is a cWebCheckbox
33144>>>                    Set psChecked to "Y"
33145>>>                    Set psUnchecked to "N"
33146>>>                    Set piColumnSpan to 0
33147>>>                    Set psCaption to "One click URL Navigation"
33148>>>                End_Object
33149>>>
33149>>>                Object oWebCheckbox8 is a cWebCheckbox
33151>>>                    Set psChecked to "Y"
33152>>>                    Set psUnchecked to "N"
33153>>>                    Set piColumnSpan to 0
33154>>>                    Set psCaption to "Copy RTF text to clipboard"
33155>>>                End_Object
33156>>>
33156>>>                Object oWebCheckbox9 is a cWebCheckbox
33158>>>                    Set psChecked to "Y"
33159>>>                    Set psUnchecked to "N"
33160>>>                    Set psValue to "Y"
33161>>>                    Set piColumnSpan to 0
33162>>>                    Set psCaption to "Brace matching"
33163>>>                End_Object
33164>>>            End_Object
33165>>>
33165>>>            Object oCodeExplorerCard is a cWebCard
33167>>>                Set psCaption to "Code Explorer"
33168>>>                Set piColumnCount to 2
33169>>>
33169>>>                Object oWebSpacer1 is a cWebSpacer
33171>>>                End_Object
33172>>>
33172>>>                Object oWebCheckbox1 is a cWebCheckbox
33174>>>                    Set psChecked to "Y"
33175>>>                    Set psUnchecked to "N"
33176>>>                    Set psValue to "Y"
33177>>>                    Set piColumnSpan to 1
33178>>>                    Set psCaption to "Display Classes"
33179>>>                End_Object
33180>>>
33180>>>                Object oWebCheckbox2 is a cWebCheckbox
33182>>>                    Set psChecked to "Y"
33183>>>                    Set psUnchecked to "N"
33184>>>                    Set piColumnSpan to 1
33185>>>                    Set piColumnIndex to 1
33186>>>                    Set psCaption to "Display Import Class Protocols"
33187>>>                End_Object
33188>>>
33188>>>                Object oWebCheckbox3 is a cWebCheckbox
33190>>>                    Set psChecked to "Y"
33191>>>                    Set psUnchecked to "N"
33192>>>                    Set psValue to "Y"
33193>>>                    Set piColumnSpan to 1
33194>>>                    Set psCaption to "Display Methods"
33195>>>                End_Object
33196>>>
33196>>>                Object oWebCheckbox4 is a cWebCheckbox
33198>>>                    Set psChecked to "Y"
33199>>>                    Set psUnchecked to "N"
33200>>>                    Set piColumnSpan to 1
33201>>>                    Set piColumnIndex to 1
33202>>>                    Set psCaption to "Display ActiveX Resources"
33203>>>                End_Object
33204>>>
33204>>>                Object oWebCheckbox5 is a cWebCheckbox
33206>>>                    Set psChecked to "Y"
33207>>>                    Set psUnchecked to "N"
33208>>>                    Set psValue to "Y"
33209>>>                    Set piColumnSpan to 1
33210>>>                    Set psCaption to "Display Properties"
33211>>>                End_Object
33212>>>
33212>>>                Object oWebCheckbox6 is a cWebCheckbox
33214>>>                    Set psChecked to "Y"
33215>>>                    Set psUnchecked to "N"
33216>>>                    Set piColumnSpan to 1
33217>>>                    Set piColumnIndex to 1
33218>>>                    Set psCaption to "Display Entry_Item Lists"
33219>>>                End_Object
33220>>>
33220>>>                Object oWebCheckbox7 is a cWebCheckbox
33222>>>                    Set psChecked to "Y"
33223>>>                    Set psUnchecked to "N"
33224>>>                    Set psValue to "Y"
33225>>>                    Set piColumnSpan to 1
33226>>>                    Set psCaption to "Display Objects"
33227>>>                End_Object
33228>>>
33228>>>                Object oWebCheckbox8 is a cWebCheckbox
33230>>>                    Set psChecked to "Y"
33231>>>                    Set psUnchecked to "N"
33232>>>                    Set piColumnSpan to 1
33233>>>                    Set piColumnIndex to 1
33234>>>                    Set psCaption to "Display Entry_Item Statements"
33235>>>                End_Object
33236>>>
33236>>>                Object oWebCheckbox9 is a cWebCheckbox
33238>>>                    Set psChecked to "Y"
33239>>>                    Set psUnchecked to "N"
33240>>>                    Set piColumnSpan to 1
33241>>>                    Set psCaption to "Display Uses"
33242>>>                End_Object
33243>>>
33243>>>                Object oWebCheckbox10 is a cWebCheckbox
33245>>>                    Set psChecked to "Y"
33246>>>                    Set psUnchecked to "N"
33247>>>                    Set psValue to "Y"
33248>>>                    Set piColumnSpan to 1
33249>>>                    Set piColumnIndex to 1
33250>>>                    Set psCaption to "Display External Functions"
33251>>>                End_Object
33252>>>
33252>>>                Object oWebCheckbox11 is a cWebCheckbox
33254>>>                    Set psChecked to "Y"
33255>>>                    Set psUnchecked to "N"
33256>>>                    Set piColumnSpan to 1
33257>>>                    Set psCaption to "Display Enum_Lists"
33258>>>                End_Object
33259>>>
33259>>>                Object oWebCheckbox12 is a cWebCheckbox
33261>>>                    Set psChecked to "Y"
33262>>>                    Set psUnchecked to "N"
33263>>>                    Set psValue to "Y"
33264>>>                    Set piColumnSpan to 1
33265>>>                    Set piColumnIndex to 1
33266>>>                    Set psCaption to "Display To Do Items"
33267>>>                End_Object
33268>>>
33268>>>                Object oWebCheckbox13 is a cWebCheckbox
33270>>>                    Set psChecked to "Y"
33271>>>                    Set psUnchecked to "N"
33272>>>                    Set piColumnSpan to 1
33273>>>                    Set psCaption to "Display Constant Declarations"
33274>>>                End_Object
33275>>>
33275>>>                Object oWebCheckbox14 is a cWebCheckbox
33277>>>                    Set psChecked to "Y"
33278>>>                    Set psUnchecked to "N"
33279>>>                    Set piColumnSpan to 1
33280>>>                    Set psCaption to "Display Struct Declarations"
33281>>>                End_Object
33282>>>
33282>>>                Object oWebCheckbox15 is a cWebCheckbox
33284>>>                    Set psChecked to "Y"
33285>>>                    Set psUnchecked to "N"
33286>>>                    Set piColumnSpan to 1
33287>>>                    Set psCaption to "Display Legacy Menus"
33288>>>                End_Object
33289>>>            End_Object
33290>>>
33290>>>            Object oDatabaseCard is a cWebCard
33292>>>                Set psCaption to "Database"
33293>>>
33293>>>                Object oWebSpacer1 is a cWebSpacer
33295>>>                End_Object
33296>>>
33296>>>                Object oWebHorizontalLine1 is a cWebHorizontalLine
33298>>>                End_Object
33299>>>
33299>>>                Object oWebLabel2 is a cWebLabel
33301>>>                    Set psCaption to "Table Explorer:"
33302>>>                End_Object
33303>>>
33303>>>                Object oWebRadio1 is a cWebRadio
33305>>>                    Set piColumnSpan to 0
33306>>>                    Set psCaption to "Sort by Table Name"
33307>>>                End_Object
33308>>>
33308>>>                Object oWebRadio2 is a cWebRadio
33310>>>                    Set piColumnSpan to 0
33311>>>                    Set psCaption to "Sort by Table Number"
33312>>>                End_Object
33313>>>
33313>>>                Object oWebHorizontalLine2 is a cWebHorizontalLine
33315>>>                End_Object
33316>>>
33316>>>                Object oWebLabel3 is a cWebLabel
33318>>>                    Set psCaption to "Table Editor:"
33319>>>                End_Object
33320>>>
33320>>>                Object oWebCheckbox1 is a cWebCheckbox
33322>>>                    Set psChecked to "Y"
33323>>>                    Set psUnchecked to "N"
33324>>>                    Set psValue to "Y"
33325>>>                    Set piColumnSpan to 1
33326>>>                    Set psCaption to "Never Confirm Saves"
33327>>>                End_Object
33328>>>
33328>>>                Object oWebHorizontalLine3 is a cWebHorizontalLine
33330>>>                End_Object
33331>>>
33331>>>                Object oWebLabel4 is a cWebLabel
33333>>>                    Set psCaption to "Data Dictionaries:"
33334>>>                End_Object
33335>>>
33335>>>                Object oWebCheckbox2 is a cWebCheckbox
33337>>>                    Set psChecked to "Y"
33338>>>                    Set psUnchecked to "N"
33339>>>                    Set psValue to "Y"
33340>>>                    Set piColumnSpan to 1
33341>>>                    Set psCaption to "Use Legacy Data Dictionary Naming Convention"
33342>>>                End_Object
33343>>>            End_Object
33344>>>        End_Object
33345>>>    End_Object 
33346>>>
33346>>>End_Object
33347>    Use DemoCards.wo
Including file: DemoCards.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoCards.wo)
33347>>>Use cWebView.pkg
33347>>>Use cWebForm.pkg
33347>>>Use cWebEdit.pkg
33347>>>Use cWebCombo.pkg
33347>>>Use cWebButton.pkg
33347>>>Use cWebTabContainer.pkg
33347>>>Use cWebTabPage.pkg
33347>>>Use cWebPanel.pkg
33347>>>Use cWebCheckbox.pkg
33347>>>
33347>>>Use Customer.DD
33347>>>Use SalesP.dd
33347>>>Use OrderHea.dd
33347>>>Use cWebRadio.pkg
33347>>>Use cWebLabel.pkg
33347>>>
33347>>>Object oDemoCards is a cWebView
33349>>>
33349>>>    Object Customer_DD is a Customer_DataDictionary
33351>>>    End_Object    // Customer_DD
33352>>>    Set Main_DD to Customer_DD
33353>>>    Set Server to Customer_DD
33354>>>    
33354>>>    Set piColumnCount to 3
33355>>>    Set psCaption to "Cards"
33356>>>    
33356>>>    Set psCSSClass to "CustomerView"
33357>>>    Set piWidth to 800
33358>>>    Set Verify_Save_Msg to 0   
33359>>>    
33359>>>    Object oCustomer_Number is a cWebForm
33361>>>        Set psLabel to "Customer Num:" 
33362>>>        Entry_Item Customer.Customer_Number
33363>>>    End_Object
33364>>>    
33364>>>    Object oCustomer_Name is a cWebForm
33366>>>        Set psLabel to "Name:"
33367>>>        Set piColumnIndex to 1
33368>>>        Set piColumnSpan to 2
33369>>>        Entry_Item Customer.Name
33370>>>    End_Object    // oCustomer_Name
33371>>>    
33371>>>    Object oCustomer_Status is a cWebCheckbox
33373>>>        Set psLabel to "Active: "
33374>>>        Set pbShowLabel to True
33375>>>        Entry_Item Customer.Status
33376>>>    End_Object
33377>>>    
33377>>>    Object oCardLayout is a cWebCardContainer
33379>>>        Set piColumnSpan to 3
33380>>>        
33380>>>        Set pbServerOnCardChange to True
33381>>>        // This shows how to use OnCardChange. Update the current tab each time there is a change
33381>>>        // and set the the next and previous buttons' enabled state as needed.
33381>>>        Procedure OnCardChange String sNewSelectedTab String sPrevSelectedTab
33384>>>            Handle hoCard
33384>>>            String sCaption
33384>>>            
33384>>>            Get CurrentCard to hoCard
33385>>>            
33385>>>            If (hoCard > 0) Begin
33387>>>                WebGet psCaption of hoCard to sCaption
33388>>>                
33388>>>                WebSet psCaption of oCurrentTabLbl to ("Current tab: " + sCaption)                
33389>>>                
33389>>>                WebSet pbEnabled of oNextBtn to (hoCard <> oCommentsCard)
33390>>>                WebSet pbEnabled of oPreviousBtn to (hoCard <> oAddressCard)
33391>>>            End
33391>>>>
33391>>>            Else Begin
33392>>>                WebSet psCaption of oCurrentTabLbl to ("Current tab: unknown")
33393>>>            End
33393>>>>
33393>>>            
33393>>>            
33393>>>        End_Procedure
33394>>>        
33394>>>        Object oAddressCard is a cWebCard
33396>>>            Set psCaption to "Address"
33397>>>            Set piColumnCount to 3
33398>>>            
33398>>>            Object oCustomer_Address is a cWebForm
33400>>>                Entry_Item Customer.Address
33401>>>                Set psLabel to "Street Address:"
33402>>>                Set piColumnSpan to 2
33403>>>            End_Object    // oCustomer_Address
33404>>>        
33404>>>            Object oCustomer_City is a cWebForm
33406>>>                Entry_Item Customer.City
33407>>>                Set psLabel to "City:"
33408>>>            End_Object    // oCustomer_City
33409>>>        
33409>>>            Object oCustomer_State is a cWebCombo
33411>>>                Entry_Item Customer.State
33412>>>                Set psLabel to "State:"
33413>>>                Set piColumnIndex to 1   // 1
33414>>>                Set peLabelAlign to 1
33415>>>            End_Object    // oCustomer_State
33416>>>        
33416>>>            Object oCustomer_Zip is a cWebForm
33418>>>                Entry_Item Customer.Zip
33419>>>                Set psLabel to "Zip / Postal Code:"
33420>>>                Set piColumnIndex to 2
33421>>>            End_Object    // oCustomer_Zip
33422>>>        
33422>>>            Object oCustomer_Phone_number is a cWebForm
33424>>>                Entry_Item Customer.Phone_Number
33425>>>                Set psLabel to "Phone Number:"
33426>>>                Set piColumnIndex to 0
33427>>>            End_Object    // oCustomer_Phone_number
33428>>>        
33428>>>            Object oCustomer_Fax_number is a cWebForm
33430>>>                Entry_Item Customer.Fax_Number
33431>>>                Set psLabel to "Fax Number:"
33432>>>                Set piColumnIndex to 1
33433>>>            End_Object    // oCustomer_Fax_number
33434>>>        
33434>>>            Object oCustomer_Email_address is a cWebForm
33436>>>                Entry_Item Customer.EMail_Address
33437>>>                Set psLabel to "E-Mail Address:"
33438>>>                Set piColumnIndex to 2
33439>>>            End_Object    // oCustomer_Email_address
33440>>>            
33440>>>        End_Object
33441>>>        
33441>>>        Object oBalancesCard is a cWebCard
33443>>>            Set psCaption to "Balances"
33444>>>            Set piColumnCount to 3
33445>>>            
33445>>>            Object oCustomer_Credit_Limit is a cWebForm
33447>>>                Entry_Item Customer.Credit_limit
33448>>>                Set psLabel to "Credit Limit:"
33449>>>                Set piColumnIndex to 0
33450>>>            End_Object    // oCustomer_Credit_Limit
33451>>>        
33451>>>            Object oCustomer_Purchases is a cWebForm
33453>>>                Entry_Item Customer.Purchases
33454>>>                Set psLabel to "Total Purchases:"
33455>>>            End_Object    // oCustomer_Purchases
33456>>>        
33456>>>            Object oCustomer_Balance is a cWebForm
33458>>>                Entry_Item Customer.Balance
33459>>>                Set psLabel to "Balance Due:"
33460>>>            End_Object    // oCustomer_Balance
33461>>>            
33461>>>        End_Object
33462>>>        
33462>>>        
33462>>>        Object oCommentsCard is a cWebCard
33464>>>            Set psCaption to "Comments"
33465>>>            
33465>>>            Object oCustomer_Comments is a cWebEdit
33467>>>                Entry_Item Customer.Comments
33468>>>                Set psLabel to "Comments:"
33469>>>                Set psCSSClass to "BigBlueField"
33470>>>                Set pbFillHeight to True
33471>>>            End_Object    // oCustomer_Comments
33472>>>
33472>>>
33472>>>        End_Object     
33473>>>
33473>>>    End_Object
33474>>>
33474>>>    
33474>>>    Object oAddressBtn is a cWebButton
33476>>>        Set psCaption to 'Address Card'
33477>>>    
33477>>>        Procedure OnClick
33480>>>            Send Show of oAddressCard
33481>>>        End_Procedure        
33482>>>    End_Object
33483>>>    
33483>>>    Object oBalancesBtn is a cWebButton
33485>>>        Set psCaption to 'Balances Card'
33486>>>        Set piColumnIndex to 1
33487>>>    
33487>>>        Procedure OnClick
33490>>>            Send Show of oBalancesCard
33491>>>        End_Procedure
33492>>>        
33492>>>    End_Object
33493>>>    
33493>>>    Object oCommentsBtn is a cWebButton
33495>>>        Set psCaption to 'Comments Card'
33496>>>        Set piColumnIndex to 2
33497>>>    
33497>>>        Procedure OnClick
33500>>>            Send Show of oCommentsCard        
33501>>>        End_Procedure        
33502>>>    End_Object  
33503>>>    
33503>>>    
33503>>>    Object oPreviousBtn is a cWebButton
33505>>>        Set psCaption to 'Previous Card'
33506>>>        Set pbEnabled to False
33507>>>    
33507>>>        Procedure OnClick
33510>>>            Send PreviousCard of oCardLayout
33511>>>        End_Procedure      
33512>>>    End_Object
33513>>>
33513>>>
33513>>>    Object oNextBtn is a cWebButton
33515>>>        Set psCaption to 'Next Card'
33516>>>        Set piColumnIndex to 2
33517>>>    
33517>>>        Procedure OnClick
33520>>>            Send NextCard of oCardLayout
33521>>>        End_Procedure      
33522>>>    End_Object
33523>>>
33523>>>        
33523>>>    Object oBorderChk is a cWebCheckbox
33525>>>        Set psCaption to "Card Border"
33526>>>        
33526>>>        Set pbServerOnChange to True
33527>>>        Procedure OnChange String sNewValue String sOldValue
33530>>>            Boolean bChecked
33530>>>            
33530>>>            Get GetChecked to bChecked
33531>>>            
33531>>>            WebSet pbShowBorder of oCardLayout to bChecked
33532>>>        End_Procedure
33533>>>    End_Object
33534>>>    
33534>>>    
33534>>>    Object oLabelChk is a cWebCheckbox
33536>>>        Set psCaption to "Card Captions"
33537>>>        
33537>>>        Set pbServerOnChange to True
33538>>>        Procedure OnChange String sNewValue String sOldValue
33541>>>            Boolean bChecked
33541>>>            
33541>>>            Get GetChecked to bChecked
33542>>>            
33542>>>            WebSet pbShowCaption of oCardLayout to bChecked
33543>>>        End_Procedure
33544>>>    End_Object
33545>>>    
33545>>>    Object oCurrentTabLbl is a cWebLabel
33547>>>        Set psCaption to "Current card: Address"
33548>>>    End_Object
33549>>>
33549>>>
33549>>>    
33549>>>End_Object // oCustomer
33550>    Use DemoPanels.wo
Including file: DemoPanels.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoPanels.wo)
33550>>>Use cWebView.pkg
33550>>>Use cWebForm.pkg
33550>>>Use cWebButton.pkg
33550>>>Use cWebTabContainer.pkg
33550>>>Use cWebTabPage.pkg
33550>>>Use cWebPanel.pkg
33550>>>Use cWebCombo.pkg
33550>>>Use cWebEdit.pkg
33550>>>
33550>>>Use Customer.DD
33550>>>Use SalesP.dd
33550>>>Use OrderHea.dd
33550>>>Use Vendor.dd
33550>>>
33550>>>Object oDemoPanels is a cWebView
33552>>>    Set piColumnCount to 10
33553>>>    Set psCaption to "Panels + Allow Access"
33554>>>    Set piWidth to 700
33555>>>    Set pbFillHeight to True
33556>>>    
33556>>>
33556>>>    Object oVendor_DD is a Vendor_DataDictionary
33558>>>    End_Object 
33559>>>
33559>>>    Set Main_DD to oVendor_DD
33560>>>    Set Server  to oVendor_DD
33561>>>
33561>>>
33561>>>    Object oWebTopPanel is a cWebPanel
33563>>>        Set peRegion to prTop
33564>>>        Set psBackgroundColor to "#DDDDDD"
33565>>>        
33565>>>        Set piHeight to 100
33566>>>    End_Object 
33567>>>    
33567>>>    Object oWebLeftPanel is a cWebPanel
33569>>>        Set peRegion to prLeft
33570>>>        Set psBackgroundColor to "#CCCCCC"
33571>>>        
33571>>>        Set piWidth to 100
33572>>>    End_Object 
33573>>>    
33573>>>    
33573>>>    Object oWebMainPanel is a cWebPanel
33575>>>        Set peRegion to prCenter
33576>>>        Set psBackgroundColor to "#EEEEEE"
33577>>>        
33577>>>        Object oForm is a cWebForm
33579>>>            Set psLabel to "Form 1"
33580>>>            
33580>>>        End_Object
33581>>>            
33581>>>    End_Object 
33582>>>    
33582>>>    Object oWebRightPanel is a cWebPanel
33584>>>        Set peRegion to prRight
33585>>>        Set psBackgroundColor to "#BBBBBB"
33586>>>        
33586>>>        
33586>>>        Set piWidth to 100
33587>>>    End_Object 
33588>>>    
33588>>>    Object oWebBottomPanel is a cWebPanel
33590>>>        Set peRegion to prBottom
33591>>>        Set psBackgroundColor to "#AAAAAA"
33592>>>        
33592>>>        Set piHeight to 100
33593>>>    End_Object 
33594>>>    
33594>>>    //
33594>>>    //  Only administrators should be able to access this view.
33594>>>    //
33594>>>    Function AllowAccess Returns Boolean
33597>>>        Boolean bAccess
33597>>>        Integer iUserRights
33597>>>        
33597>>>        Forward Get AllowAccess to bAccess
33599>>>        
33599>>>        If (bAccess) Begin
33601>>>            Get piUserRights of ghoWebSessionManager to iUserRights
33602>>>            
33602>>>            If (iUserRights < 1) Begin
33604>>>                Move False to bAccess
33605>>>            End
33605>>>>
33605>>>        End
33605>>>>
33605>>>        Function_Return bAccess
33606>>>    End_Function
33607>>>End_Object // oCustomer
33608>    Use DemoFileUpload.wo
Including file: DemoFileUpload.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoFileUpload.wo)
33608>>>// C:\Projects\VDF\DataFlex 18.0\Examples\WebOrder\AppSrc\DemoFileUpload.wo
33608>>>// DemoFileUpload
33608>>>//
33608>>>
33608>>>Use cWebView.pkg
33608>>>Use cWebPanel.pkg
33608>>>Use cWebFileUploadButton.pkg
33608>>>Use cWebFileUploadForm.pkg
33608>>>Use cWebLabel.pkg
33608>>>Use cWebButton.pkg
33608>>>Use cWebHorizontalLine.pkg
33608>>>
33608>>>Use cWebAppUserDataDictionary.dd
33608>>>
33608>>>Object oDemoFileUpload is a cWebView
33610>>>    Set piColumnCount to 10
33611>>>    Set psCaption to "File Upload"
33612>>>    Set piWidth to 700
33613>>>    
33613>>>    Procedure CleanUp Integer eMode
33616>>>        String sPath
33616>>>        
33616>>>        If (eMode = cmYes) Begin
33618>>>            //  Use default upload folder
33618>>>            Get UploadFolder of ghoWebApp True to sPath
33619>>>            
33619>>>            Move (sPath + "\*.*") to sPath
33620>>>            
33620>>>            EraseFile sPath
33621>>>>
33621>>>        End
33621>>>>
33621>>>    End_Procedure
33622>>>    WebPublishProcedure CleanUp
33623>>>    
33623>>>    Object oWebTopPanel is a cWebPanel
33625>>>        Set peRegion to prTop
33626>>>        Set piHeight to 160
33627>>>        Set psBackgroundColor to "#DDDDDD"
33628>>>        Set piColumnCount to 10
33629>>>
33629>>>        Object oWebLabel1 is a cWebLabel
33631>>>            Set piColumnSpan to 0
33632>>>            Set psCaption to "File upload form, which has its drop zone expanded to the entire panel (phoDropZone)."
33633>>>        End_Object
33634>>>        
33634>>>        
33634>>>        
33634>>>        Object oWebFile1 is a cWebFileUploadForm
33636>>>            Set piColumnSpan to 0
33637>>>            Set psLabel to "File:"
33638>>>            
33638>>>//            Set pbAutoStart to True 
33638>>>    
33638>>>            Function OnFileUpload String sFileName Integer iBytes String sMime Returns String
33641>>>                String sPath
33641>>>                
33641>>>                //  Use default upload folder
33641>>>                Get UploadFolder of ghoWebApp True to sPath
33642>>>                
33642>>>                Move (sPath + "\" + sFileName) to sPath
33643>>>                
33643>>>                Function_Return sPath
33644>>>            End_Function
33645>>>            
33645>>>            Procedure OnFileFinished String sFileName String sLocalPath
33648>>>                Send ShowYesNo oDemoFileUpload (RefProc(CleanUp)) (SFormat("Succesfully uploaded %1! Do you want to clear the upload folder?", sFileName)) ("Finished") cmYes
33649>>>            End_Procedure
33650>>>            
33650>>>            Set phoDropZone to oWebTopPanel
33651>>>        End_Object
33652>>>
33652>>>        Object oWebButton1 is a cWebButton
33654>>>            Set piColumnSpan to 2
33655>>>            Set psCaption to "Show existing file"
33656>>>        
33656>>>            Procedure OnClick
33659>>>                 String sPath
33659>>>                
33659>>>                //  Determine local path based on workspace setting
33659>>>                Get psDataPath of (phoWorkspace(ghoApplication)) to sPath
33660>>>                
33660>>>                Move (sPath + "\orderdtl.dat") to sPath
33661>>>                
33661>>>                Send DisplayExistingFile of oWebFile1 sPath
33662>>>            End_Procedure
33663>>>        End_Object
33664>>>        
33664>>>        
33664>>>        Object oWebButton2 is a cWebButton
33666>>>            Set piColumnIndex to 2
33667>>>            Set piColumnSpan to 2
33668>>>            Set psCaption to "Clear file"
33669>>>            
33669>>>            Procedure OnClick
33672>>>                Send ClearDisplay of oWebFile1
33673>>>                
33673>>>            End_Procedure
33674>>>        End_Object
33675>>>    End_Object
33676>>>    
33676>>>
33676>>>    
33676>>>
33676>>>    Object oWebMainPanel is a cWebPanel
33678>>>        Set piColumnCount to 10
33679>>>
33679>>>        Object oWebLabel5 is a cWebLabel
33681>>>            Set piColumnSpan to 0
33682>>>            Set psCaption to "File upload form with pbAutoStart set to False and a file filter set to only accept images using psAccept."
33683>>>        End_Object
33684>>>        
33684>>>        
33684>>>
33684>>>        Object oWebFileUploader2 is a cWebFileUploadForm
33686>>>            Set piColumnSpan to 8
33687>>>            Set psLabel to "File:"
33688>>>            Set psAccept to "image/*,.jpg,.png,.bmp,.gif" // Note that older browsers do not support filtering on mime types
33689>>>            Set pbAutoStart to False
33690>>>            Set pbShowMime to True
33691>>>            
33691>>>//            Set pbAutoStart to True 
33691>>>            //  Called for each file upload to generate the local path where the file is stored.
33691>>>            Function OnFileUpload String sFileName Integer iBytes String sMime Returns String
33694>>>                String sPath
33694>>>                
33694>>>                //  Use default upload folder
33694>>>                Get UploadFolder of ghoWebApp True to sPath
33695>>>                
33695>>>                Move (sPath + "\" + sFileName) to sPath
33696>>>                
33696>>>                Function_Return sPath
33697>>>            End_Function
33698>>>            
33698>>>            Procedure OnFileFinished String sFileName String sLocalPath
33701>>>                Send ShowYesNo oDemoFileUpload (RefProc(CleanUp)) (SFormat("Succesfully uploaded '%1'! Do you want to clear the upload folder?", sLocalPath)) ("Finished") cmYes
33702>>>            End_Procedure
33703>>>        End_Object
33704>>>
33704>>>        Object oWebButton3 is a cWebButton
33706>>>            Set piColumnSpan to 2
33707>>>            Set psCaption to "Start Upload"
33708>>>            Set piColumnIndex to 8
33709>>>        
33709>>>            Procedure OnClick
33712>>>                Send StartUpload of oWebFileUploader2
33713>>>            End_Procedure
33714>>>        End_Object
33715>>>
33715>>>        Object oWebHorizontalLine4 is a cWebHorizontalLine
33717>>>        End_Object
33718>>>
33718>>>        Object oWebLabel2 is a cWebLabel
33720>>>            Set piColumnSpan to 0
33721>>>            Set psCaption to "File upload form, which has pbShowDialog set to True, so that the upload process is shown in a modal dialog."
33722>>>        End_Object
33723>>>
33723>>>        Object oWebFileUploadForm1 is a cWebFileUploadForm
33725>>>            Set piColumnSpan to 0
33726>>>            Set psLabel to "file"
33727>>>            Set pbShowDialog to True
33728>>>            
33728>>>            //  Called for each file upload to generate the local path where the file is stored.
33728>>>            Function OnFileUpload String sFileName Integer iBytes String sMime Returns String
33731>>>                String sPath
33731>>>                
33731>>>                //  Use default upload folder
33731>>>                Get UploadFolder of ghoWebApp True to sPath
33732>>>                
33732>>>                Move (sPath + "\" + sFileName) to sPath
33733>>>                
33733>>>                Function_Return sPath
33734>>>            End_Function
33735>>>        End_Object
33736>>>
33736>>>        
33736>>>        
33736>>>
33736>>>        Object oWebHorizontalLine2 is a cWebHorizontalLine
33738>>>        End_Object
33739>>>
33739>>>        Object oWebLabel3 is a cWebLabel
33741>>>            Set piColumnSpan to 0
33742>>>            Set psCaption to "File upload button, allowing multiple files to be uploaded at once. Shows a log message on the console for every uploaded file after entire upload (all files) is finished."
33743>>>        End_Object
33744>>>        
33744>>>                
33744>>>        
33744>>>        Object oFileUpload is a cWebFileUploadButton
33746>>>            Set piColumnSpan to 3
33747>>>            Set psCaption to "Upload File(s)"
33748>>>            
33748>>>            Property Integer piCount 0
33752>>>            
33752>>>            
33752>>>            Function OnFileUpload String sFileName Integer iBytes String sMime Returns String
33755>>>                String sPath
33755>>>                
33755>>>                //  Use default upload folder
33755>>>                Get UploadFolder of ghoWebApp True to sPath
33756>>>                
33756>>>                Move (sPath + "\" + sFileName) to sPath
33757>>>                
33757>>>                Function_Return sPath
33758>>>            End_Function
33759>>>            
33759>>>            Procedure OnFileFinished String sFileName String sLocalPath
33762>>>                Integer iCount
33762>>>                
33762>>>                WebGet piCount to iCount
33763>>>                Increment iCount
33764>>>                WebSet piCount to iCount
33765>>>                Send ClientLog (SFormat("File %1 saved as %2", sFileName, sLocalPath))
33766>>>            End_Procedure
33767>>>            
33767>>>            Procedure OnUploadFinished
33770>>>                Integer iCount
33770>>>                
33770>>>                WebGet piCount to iCount
33771>>>                WebSet piCount to 0
33772>>>                
33772>>>                Send ShowYesNo oDemoFileUpload (RefProc(CleanUp)) (SFormat("Succesfully uploaded %1 files! Do you want to delete them?", iCount)) ("Finished") cmYes
33773>>>            End_Procedure
33774>>>        End_Object
33775>>>        
33775>>>         Object oWebHorizontalLine3 is a cWebHorizontalLine
33777>>>        End_Object
33778>>>
33778>>>        Object oWebLabel4 is a cWebLabel
33780>>>            Set piColumnSpan to 0
33781>>>            Set psCaption to "File upload button that allows multiple files to be uploaded at once. Shows a log message on the console for every uploaded file after each file, because pbNotifyIndividualFile is set to True."
33782>>>        End_Object
33783>>>        
33783>>>                
33783>>>        
33783>>>        Object oFileUploadBtn2 is a cWebFileUploadButton
33785>>>            Set piColumnSpan to 3
33786>>>            Set psCaption to "Upload File(s)"
33787>>>            Set pbNotifyIndividualFile to True
33788>>>            
33788>>>            Property Integer piCount 0
33792>>>            
33792>>>            
33792>>>            Function OnFileUpload String sFileName Integer iBytes String sMime Returns String
33795>>>                String sPath
33795>>>                
33795>>>                //  Use default upload folder
33795>>>                Get UploadFolder of ghoWebApp True to sPath
33796>>>                
33796>>>                Move (sPath + "\" + sFileName) to sPath
33797>>>                
33797>>>                Function_Return sPath
33798>>>            End_Function
33799>>>            
33799>>>            Procedure OnFileFinished String sFileName String sLocalPath
33802>>>                Integer iCount
33802>>>                
33802>>>                WebGet piCount to iCount
33803>>>                Increment iCount
33804>>>                WebSet piCount to iCount
33805>>>                Send ClientLog (SFormat("File %1 saved as %2", sFileName, sLocalPath))
33806>>>            End_Procedure
33807>>>            
33807>>>            Procedure OnUploadFinished
33810>>>                Integer iCount
33810>>>                
33810>>>                WebGet piCount to iCount
33811>>>                WebSet piCount to 0
33812>>>                
33812>>>                Send ShowYesNo oDemoFileUpload (RefProc(CleanUp)) (SFormat("Succesfully uploaded %1 files! Do you want to delete them?", iCount)) ("Finished") cmYes
33813>>>            End_Procedure
33814>>>        End_Object
33815>>>        
33815>>>    End_Object 
33816>>>End_Object 
33817>    Use DemoSuggestionForm.wo
Including file: DemoSuggestionForm.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoSuggestionForm.wo)
33817>>>Use cWebView.pkg
33817>>>Use cWebPanel.pkg
33817>>>Use cWebForm.pkg 
33817>>>Use cWebSuggestionForm.pkg
33817>>>Use Customer.DD
33817>>>Use Vendor.DD
33817>>>Use cWebHorizontalLine.pkg
33817>>>Use cWebLabel.pkg
33817>>>
33817>>>Object oDemoSuggestionForm is a cWebView
33819>>>    Object oVendor_DD is a Vendor_DataDictionary
33821>>>    End_Object
33822>>>
33822>>>    Object oCustomer_DD is a Customer_DataDictionary
33824>>>        Procedure Field_defaults
33827>>>            Forward Send Field_Defaults
33829>>>            Set Field_Changed_Value   Field Customer.State to ""
33830>>>        End_Procedure
33831>>>    End_Object
33832>>>
33832>>>    Set Main_DD to oCustomer_DD
33833>>>    Set Server to oCustomer_DD
33834>>>    
33834>>>    Send AddDDOStructure oVendor_DD
33835>>>
33835>>>    Set piWidth to 700
33836>>>    Set psCaption to "Suggestion Form"
33837>>>    
33837>>>
33837>>>    // Your DDO structure will go here
33837>>>
33837>>>    Object oWebMainPanel is a cWebPanel
33839>>>        Set piColumnCount to 12
33840>>>
33840>>>        Object oWebLabel1 is a cWebLabel
33842>>>            Set piColumnSpan to 0
33843>>>            
33843>>>            Set psCaption to "Data bound, incremental, starting at character 1"
33844>>>            Set peAlign to alignCenter
33845>>>        End_Object
33846>>>
33846>>>        Object oWebSuggestionForm2 is a cWebSuggestionForm
33848>>>            Entry_Item Customer.Customer_Number
33849>>>            Set piColumnSpan to 4
33850>>>            Set psLabel to "Customer Number:"
33851>>>            Set piStartAtChar to 1
33852>>>        End_Object
33853>>>
33853>>>        Object oWebSuggestionForm1 is a cWebSuggestionForm
33855>>>            Entry_Item Customer.Name
33856>>>            Set piColumnSpan to 7
33857>>>            Set psLabel to "Customer Name:"
33858>>>            Set piStartAtChar to 1
33859>>>        End_Object
33860>>>
33860>>>        Object oWebLabel3 is a cWebLabel
33862>>>            Set psCaption to "Validation Table, incremental, starting at character 1"
33863>>>            Set piColumnSpan to 0
33864>>>            Set peAlign to alignCenter
33865>>>        End_Object
33866>>>
33866>>>        Object oWebSuggestionForm4 is a cWebSuggestionForm
33868>>>            Entry_Item Customer.State
33869>>>            Set piColumnSpan to 6
33870>>>            Set psLabel to "Customer State:"
33871>>>            Set peSuggestionMode to smValidationTable
33872>>>            Set piStartAtChar to 1
33873>>>        End_Object
33874>>>
33874>>>        Object oWebHorizontalLine1 is a cWebHorizontalLine
33876>>>        End_Object
33877>>>        
33877>>>        
33877>>>        Object oWebLabel2 is a cWebLabel
33879>>>            Set piColumnSpan to 0
33880>>>            
33880>>>            Set psCaption to "Data bound, full text, starting at character 2"
33881>>>            Set peAlign to alignCenter
33882>>>        End_Object
33883>>>
33883>>>        Object oWebSuggestionForm3 is a cWebSuggestionForm
33885>>>            Entry_Item Vendor.Name
33886>>>            Set Server to oVendor_DD
33887>>>            Set piColumnSpan to 7
33888>>>            Set pbFullText to True
33889>>>            Set psLabel to "Vendor name:"
33890>>>        End_Object
33891>>>        
33891>>>        
33891>>>    End_Object 
33892>>>
33892>>>End_Object
33893>    Use DemoColumnTypes.wo
Including file: DemoColumnTypes.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoColumnTypes.wo)
33893>>>Use cWebView.pkg
33893>>>Use cWebPanel.pkg
33893>>>Use cWebForm.pkg 
33893>>>Use Customer.DD
33893>>>Use cWebList.pkg
33893>>>Use cWebColumn.pkg
33893>>>Use cWebColumnLink.pkg
33893>>>Use cWebColumnButton.pkg
33893>>>Use cWebGroup.pkg
33893>>>Use cWebRadio.pkg
33893>>>Use cWebColumnImage.pkg
Including file: cWebColumnImage.pkg    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cWebColumnImage.pkg)
33893>>>>>Use cWebColumn_mixin.pkg
33893>>>>>Use cWebBaseDEO.pkg
33893>>>>>
33893>>>>>// Used to represent each column of a cWebGrid or cWebLookup control.
33893>>>>>Class cWebColumnImage is a cWebBaseDEO
33894>>>>>    Import_Class_Protocol cWebColumn_mixin
33895>>>>>    
33895>>>>>    Procedure Construct_Object
33897>>>>>        Forward Send Construct_Object
33899>>>>>        
33899>>>>>        Send Define_cWebColumn_Mixin
33900>>>>>                
33900>>>>>        Property String psImageUrl "" 
33903>>>>>        Property String psImageCSSClass ""
33906>>>>>        
33906>>>>>        Property Integer pePosition wiStretchHoriz //   Allows dynamic image positioning. Note that piImageWidth and piImageHeight must be set for this to work.
33909>>>>>        
33909>>>>>        Property Boolean pbDynamic False
33912>>>>>        Property Boolean pbImageByCSS False
33915>>>>>        
33915>>>>>        Property Integer piImageWidth 0
33918>>>>>        Property Integer piImageHeight 0
33921>>>>>        
33921>>>>>        Property Boolean pbServerOnClick False
33924>>>>>        Property String psClientOnClick ""
33927>>>>>        
33927>>>>>        Property String[] paImgOptions
33928>>>>>        
33928>>>>>        //  Sorting on a image column wouldn't make sense
33928>>>>>        Set pbSortable to False
33929>>>>>        
33929>>>>>        Set psJSClass to "df.WebColumnImage"
33930>>>>>    End_Procedure
33931>>>>> 
33931>>>>>    Procedure LoadGridCell tWebCell ByRef tCell
33933>>>>>        Boolean bMulti
33933>>>>>        String[] aEmpty
33934>>>>>        
33934>>>>>        Set paImgOptions to aEmpty
33935>>>>>        
33935>>>>>        Get pbDynamic to bMulti
33936>>>>>        If (bMulti) Begin
33938>>>>>            Send OnDefineImages
33939>>>>>            Get paImgOptions to tCell.aOptions
33940>>>>>        End
33940>>>>>>
33940>>>>>        
33940>>>>>        // Give a chance to add custom tooltips & CSS Classnames
33940>>>>>        Send OnDefineTooltip (&tCell.sTooltip)
33941>>>>>        Send OnDefineCssClass (&tCell.sCssClassName)
33942>>>>>    End_Procedure
33943>>>>>    
33943>>>>>    Procedure OnDefineImages
33945>>>>>        
33945>>>>>    End_Procedure
33946>>>>>    
33946>>>>>    Procedure OnClick String sImage String sRowId
33948>>>>>        
33948>>>>>    End_Procedure
33949>>>>>    
33949>>>>>    Procedure AddImage String sUrl
33951>>>>>        String[] aImages
33952>>>>>        
33952>>>>>        Get paImgOptions to aImages
33953>>>>>        
33953>>>>>        Move sUrl to aImages[SizeOfArray(aImages)]
33954>>>>>        
33954>>>>>        Set paImgOptions to aImages
33955>>>>>    End_Procedure
33956>>>>>    
33956>>>>>    Procedure End_Construct_Object
33958>>>>>        WebPublishProcedure OnClick
33959>>>>>        
33959>>>>>        Forward Send End_Construct_Object
33961>>>>>    End_Procedure
33962>>>>>
33962>>>>>End_Class
33963>>>Use cWebCheckBox.pkg
33963>>>Use cWebColumnCheckbox.pkg
33963>>>Use DemoCustomerDialog.wo
Including file: DemoCustomerDialog.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoCustomerDialog.wo)
33963>>>>>//
33963>>>>>//  This shows the basic structure of a modal dialog. It explains where the controls go and how to 
33963>>>>>//  initialize it (PopupTheDialog & OnShow). The DialogResult method explains how to return data 
33963>>>>>//  from your dialog. The commented oOpenDialog_btn is an example of a button that opens this dialog. 
33963>>>>>//  This button would be placed on another view.
33963>>>>>//
33963>>>>>//    Object oOpenDialog_btn is a cWebButton
33963>>>>>//        Set psCaption to "Open Dialog"
33963>>>>>//        
33963>>>>>//        Procedure OnClick
33963>>>>>//            Send PopupTheDialog of oWebModalDialog Self "Param 1" "Param 2"
33963>>>>>//        End_Procedure
33963>>>>>//        
33963>>>>>//        Procedure OnCloseModalDialog Handle hoModalDialog
33963>>>>>//            String sResult
33963>>>>>//            
33963>>>>>//            Get DialogResult of hoModalDialog to sResult
33963>>>>>//        End_Procedure
33963>>>>>//    End_Object
33963>>>>>//
33963>>>>>
33963>>>>>
33963>>>>>Use cWebModalDialog
33963>>>>>Use cWebPanel.pkg
33963>>>>>Use cWebButton.pkg
33963>>>>>Use cWebForm.pkg
33963>>>>>Use cWebTabContainer.pkg
33963>>>>>Use cWebTabPage.pkg
33963>>>>>Use Customer.DD
33963>>>>>Use cWebCombo.pkg
33963>>>>>Use cWebEdit.pkg
33963>>>>>
33963>>>>>Object oDemoCustomerDialog is a cWebModalDialog
33965>>>>>    Object oCustomer_DD is a Customer_DataDictionary
33967>>>>>    End_Object
33968>>>>>
33968>>>>>    Set Main_DD to oCustomer_DD
33969>>>>>    Set Server to oCustomer_DD
33970>>>>>
33970>>>>>    Set psCaption to "Edit Customer"
33971>>>>>    Set piMinWidth to 600
33972>>>>>    Set piMinHeight to 350
33973>>>>>    Set pbServerOnSubmit to True    // enable the OnSubmit event
33974>>>>>    
33974>>>>>    Object oMainPanel is a cWebPanel
33976>>>>>        Set piColumnCount to 12
33977>>>>>
33977>>>>>        Object oCustomer_Customer_Number is a cWebForm
33979>>>>>            Entry_Item Customer.Customer_Number
33980>>>>>            Set piColumnSpan to 5
33981>>>>>            Set psLabel to "Number:"
33982>>>>>            Set piLabelOffset to 80
33983>>>>>        End_Object
33984>>>>>
33984>>>>>        Object oCustomer_Name is a cWebForm
33986>>>>>            Entry_Item Customer.Name
33987>>>>>            Set piColumnSpan to 0
33988>>>>>            Set psLabel to "Name:"
33989>>>>>            Set piColumnIndex to 5
33990>>>>>            Set piLabelOffset to 80
33991>>>>>        End_Object
33992>>>>>
33992>>>>>        Object oTabContainer is a cWebTabContainer
33994>>>>>            Set pbFillHeight to True
33995>>>>>            Object oAddressTab is a cWebTabPage
33997>>>>>                Set psCaption to "Address"
33998>>>>>                Set piColumnCount to 12
33999>>>>>
33999>>>>>                Object oCustomer_Address is a cWebForm
34001>>>>>                    Entry_Item Customer.Address
34002>>>>>                    Set piColumnSpan to 12
34003>>>>>                    Set psLabel to "Street Address:"
34004>>>>>                End_Object
34005>>>>>
34005>>>>>                Object oCustomer_City is a cWebForm
34007>>>>>                    Entry_Item Customer.City
34008>>>>>                    Set piColumnSpan to 6
34009>>>>>                    Set psLabel to "City / State / Zip:"
34010>>>>>                End_Object
34011>>>>>
34011>>>>>                Object oCustomer_State is a cWebCombo
34013>>>>>                    Entry_Item Customer.State
34014>>>>>                    Set piColumnSpan to 3
34015>>>>>                    Set psLabel to "State:"
34016>>>>>                    Set piColumnIndex to 6
34017>>>>>                    Set pbShowLabel to False
34018>>>>>                End_Object
34019>>>>>
34019>>>>>                Object oCustomer_Zip is a cWebForm
34021>>>>>                    Entry_Item Customer.Zip
34022>>>>>                    Set piColumnSpan to 3
34023>>>>>                    Set psLabel to "Zip/Postal Code:"
34024>>>>>                    Set pbShowLabel to False
34025>>>>>                    Set piColumnIndex to 9
34026>>>>>                End_Object
34027>>>>>
34027>>>>>                Object oCustomer_Phone_Number is a cWebForm
34029>>>>>                    Entry_Item Customer.Phone_Number
34030>>>>>                    Set piColumnSpan to 6
34031>>>>>                    Set psLabel to "Phone Number:"
34032>>>>>                End_Object
34033>>>>>
34033>>>>>                Object oCustomer_Fax_Number is a cWebForm
34035>>>>>                    Entry_Item Customer.Fax_Number
34036>>>>>                    Set piColumnSpan to 6
34037>>>>>                    Set psLabel to "Fax Number:"
34038>>>>>                    Set piColumnIndex to 6
34039>>>>>                End_Object
34040>>>>>
34040>>>>>                Object oCustomer_EMail_Address is a cWebForm
34042>>>>>                    Entry_Item Customer.EMail_Address
34043>>>>>                    Set piColumnSpan to 8
34044>>>>>                    Set psLabel to "E-Mail Address:"
34045>>>>>                End_Object
34046>>>>>                
34046>>>>>            End_Object
34047>>>>>
34047>>>>>            Object oBalanceTab is a cWebTabPage
34049>>>>>                Set psCaption to "Balance"
34050>>>>>                Set piColumnCount to 12
34051>>>>>
34051>>>>>                Object oCustomer_Credit_Limit is a cWebForm
34053>>>>>                    Entry_Item Customer.Credit_Limit
34054>>>>>                    Set piColumnSpan to 7
34055>>>>>                    Set psLabel to "Credit Limit:"
34056>>>>>                End_Object
34057>>>>>
34057>>>>>                Object oCustomer_Purchases is a cWebForm
34059>>>>>                    Entry_Item Customer.Purchases
34060>>>>>                    Set piColumnSpan to 7
34061>>>>>                    Set psLabel to "Total Purchases:"
34062>>>>>                End_Object
34063>>>>>
34063>>>>>                Object oCustomer_Balance is a cWebForm
34065>>>>>                    Entry_Item Customer.Balance
34066>>>>>                    Set piColumnSpan to 7
34067>>>>>                    Set psLabel to "Balance Due:"
34068>>>>>                End_Object
34069>>>>>                
34069>>>>>            End_Object
34070>>>>>
34070>>>>>            Object oCommentsTab is a cWebTabPage
34072>>>>>                Set psCaption to "Comments"
34073>>>>>                Set piColumnCount to 12
34074>>>>>
34074>>>>>                Object oCustomer_Comments is a cWebEdit
34076>>>>>                    Entry_Item Customer.Comments
34077>>>>>                    Set piColumnSpan to 0
34078>>>>>                    Set psLabel to "Comments:"
34079>>>>>                    Set pbFillHeight to True
34080>>>>>                    Set pbShowLabel to False
34081>>>>>                End_Object
34082>>>>>                
34082>>>>>            End_Object
34083>>>>>        End_Object
34084>>>>>        
34084>>>>>        
34084>>>>>    End_Object 
34085>>>>>    
34085>>>>>    Object oBottomPanel is a cWebPanel
34087>>>>>        Set piColumnCount to 6
34088>>>>>        Set peRegion to prBottom
34089>>>>>
34089>>>>>        Object oOkButton is a cWebButton
34091>>>>>            Set psCaption to C_$OK
34092>>>>>            Set piColumnSpan to 1
34093>>>>>            Set piColumnIndex to 4
34094>>>>>
34094>>>>>            Procedure OnClick
34097>>>>>                Send Ok
34098>>>>>            End_Procedure
34099>>>>>        End_Object 
34100>>>>>
34100>>>>>        Object oCancelButton is a cWebButton
34102>>>>>            Set psCaption to C_$Cancel
34103>>>>>            Set piColumnSpan to 1
34104>>>>>            Set piColumnIndex to 5
34105>>>>>
34105>>>>>            Procedure OnClick
34108>>>>>                Send Cancel
34109>>>>>            End_Procedure
34110>>>>>        End_Object 
34111>>>>>    End_Object 
34112>>>>>
34112>>>>>    Procedure OnSubmit
34115>>>>>        Send Ok
34116>>>>>    End_Procedure
34117>>>>>    
34117>>>>>    Procedure Ok
34120>>>>>        Boolean bErr
34120>>>>>        
34120>>>>>        //  Do some calculations / saves / validations here ..
34120>>>>>        Get Request_Validate of oCustomer_DD to bErr
34121>>>>>        If (not(bErr)) Begin
34123>>>>>            Send Request_Save of oCustomer_DD
34124>>>>>            
34124>>>>>            //  Note that we only forward send if we saved succesfully
34124>>>>>            Forward Send Ok
34126>>>>>        End
34126>>>>>>
34126>>>>>    End_Procedure
34127>>>>>
34127>>>>>    Procedure Cancel
34130>>>>>        Forward Send Cancel
34132>>>>>    End_Procedure
34133>>>>>    
34133>>>>>    
34133>>>>>    //  PopupCustomerDialog:
34133>>>>>    //
34133>>>>>    //  Custom popup method that stores the customer RowId in a web property before calling Show.
34133>>>>>    Procedure PopupCustomerDialog  Handle hReturnObj String sCustomerRowID
34136>>>>>        // Initialize any object properites as needed via WebSet
34136>>>>>        WebSet psCustomerRowID to sCustomerRowID
34138>>>>>        
34138>>>>>        // Invoke the modal dialog    
34138>>>>>        Send Popup hReturnObj
34139>>>>>    End_Procedure
34140>>>>>    
34140>>>>>    Property String psCustomerRowID ""  //  Used to store the customer RowId between PopupCustomerDialog and OnShow
34144>>>>>    
34144>>>>>    Set pbServerOnShow to True
34145>>>>>    
34145>>>>>    
34145>>>>>    //  OnShow:
34145>>>>>    //
34145>>>>>    //  Called by the Framework each time the dialog is displayed. We need to find the right customer here.
34145>>>>>    Procedure OnShow
34148>>>>>        String sRowID
34148>>>>>        RowID rRowID
34148>>>>>        
34148>>>>>        //  Find your records here
34148>>>>>        WebGet psCustomerRowID to sRowID
34149>>>>>        
34149>>>>>        Move (DeserializeRowID(sRowID)) to rRowID
34150>>>>>        If (not(IsNullRowID(rRowID))) Begin
34152>>>>>            Send FindByRowId of oCustomer_DD Customer.File_Number rRowID
34153>>>>>        End
34153>>>>>>
34153>>>>>        Else Begin
34154>>>>>            Send Clear of oCustomer_DD
34155>>>>>        End
34155>>>>>>
34155>>>>>        
34155>>>>>        WebSet psCustomerRowID to ""
34156>>>>>    End_Procedure
34157>>>>>    
34157>>>>>    
34157>>>>>
34157>>>>>End_Object
34158>>>
34158>>>Object oDemoColumnTypes is a cWebView
34160>>>    Object oCustomer_DD is a Customer_DataDictionary
34162>>>    End_Object
34163>>>
34163>>>    Set Main_DD to oCustomer_DD
34164>>>    Set Server to oCustomer_DD
34165>>>
34165>>>    Set piWidth to 700
34166>>>    Set psCaption to "Demo Column Types"
34167>>>    Set piHeight to 600
34168>>>
34168>>>    // Your DDO structure will go here
34168>>>
34168>>>    Object oWebMainPanel is a cWebPanel
34170>>>        Set piColumnCount to 12
34171>>>
34171>>>        Object oWebList1 is a cWebList
34173>>>            Set pbFillHeight to True
34174>>>
34174>>>            Object oSingleBtnCol is a cWebColumnButton
34176>>>                Set piWidth to 35
34177>>>                Set psCaption to ""
34178>>>                Set psButtonCaption to "Edit"
34179>>>                Set pbRender to False
34180>>>                
34180>>>                Procedure OnClick String sButton String sRowId
34183>>>                    Send ShowCustomer sRowId
34184>>>                End_Procedure
34185>>>            End_Object
34186>>>
34186>>>            Object oDynamicBtnCol is a cWebColumnButton
34188>>>                Set piWidth to 80
34189>>>                Set pbDynamic to True
34190>>>                Set pbRender to False
34191>>>                
34191>>>                //  Called for each row to define the buttons that need to be displayed.
34191>>>                Procedure OnDefineButtons
34194>>>                    //  Use AddButton to define a button (sID, sCaption, sCSSClass)
34194>>>                    Send AddButton "E" "Edit" ""
34195>>>                    
34195>>>                    //  The Global buffer contains the right record for data aware lists
34195>>>                    If (Customer.Status = "Y") Begin
34197>>>                        Send AddButton "D" "Deactivate" ""
34198>>>                    End
34198>>>>
34198>>>                End_Procedure
34199>>>
34199>>>                Procedure OnClick String sButton String sRowId
34202>>>                    Forward Send OnClick sButton sRowId
34204>>>                    
34204>>>                    If (sButton = "E") Begin
34206>>>                        Send ShowCustomer sRowId
34207>>>                    End
34207>>>>
34207>>>                    Else If (sButton = "D") Begin
34210>>>                        Send DeactivateCustomer sRowID
34211>>>                    End
34211>>>>
34211>>>                End_Procedure
34212>>>            End_Object
34213>>>
34213>>>            Object oStaticImageCol is a cWebColumnImage
34215>>>                Set piWidth to 20
34216>>>                Set psImageUrl to "Images/Order.png"
34217>>>                Set psCaption to "Icon"
34218>>>                Set pbRender to False
34219>>>
34219>>>                Procedure OnClick String sImage String sRowId
34222>>>                    Forward Send OnClick sImage sRowId
34224>>>                    
34224>>>                    Send ShowInfoBox "You've clicked the image!"
34225>>>                End_Procedure
34226>>>            End_Object
34227>>>
34227>>>            Object oDynamicImageCol is a cWebColumnImage
34229>>>                Set piWidth to 20
34230>>>                Set pbDynamic to True
34231>>>                Set psCaption to "Icons"
34232>>>                Set pbServerOnClick to True
34233>>>                
34233>>>                Procedure OnDefineImages
34236>>>                    Forward Send OnDefineImages
34238>>>                    
34238>>>                    Send AddImage "Images/Order.png"
34239>>>                    
34239>>>                    If (Customer.Balance >  4000) Begin
34241>>>                        Send AddImage "Images/CDRom.png"
34242>>>                    End
34242>>>>
34242>>>                End_Procedure
34243>>>
34243>>>                Procedure OnClick String sImage String sRowId
34246>>>                    Forward Send OnClick sImage sRowId
34248>>>                    
34248>>>                    Send ShowInfoBox ("You've clicked on image '" + sImage + "'!")
34249>>>                End_Procedure
34250>>>                
34250>>>                
34250>>>            End_Object
34251>>>
34251>>>
34251>>>            Object oCustomer_Customer_Number is a cWebColumn
34253>>>                Entry_Item Customer.Customer_Number
34254>>>                Set psCaption to "Number"
34255>>>                Set piWidth to 30
34256>>>            End_Object
34257>>>
34257>>>            Object oCustomer_Name is a cWebColumnLink
34259>>>                Entry_Item Customer.Name
34260>>>                Set psCaption to "Customer Name"
34261>>>                Set piWidth to 100
34262>>>
34262>>>                Procedure OnClick String sRowID String sCellValue
34265>>>                    Send ShowCustomer sRowId
34266>>>                End_Procedure
34267>>>            End_Object
34268>>>
34268>>>            Object oCustomer_City is a cWebColumn
34270>>>                Entry_Item Customer.City
34271>>>                Set psCaption to "City"
34272>>>                Set piWidth to 50
34273>>>                
34273>>>                Set psCSSClass to "DemoColumnCity"
34274>>>            End_Object
34275>>>
34275>>>            Object oCustomer_Balance is a cWebColumn
34277>>>                Entry_Item Customer.Balance
34278>>>                Set psCaption to "Balance"
34279>>>                Set piWidth to 50
34280>>>
34280>>>                Procedure OnDefineCssClass String  ByRef sCSSClass
34283>>>                    Forward Send OnDefineCssClass (&sCSSClass)
34285>>>                    
34285>>>                    If (Customer.Balance < 1000) Begin
34287>>>                        Move "DemoColLow" to sCSSClass
34288>>>                    End
34288>>>>
34288>>>                    Else If (Customer.Balance > 5000) Begin
34291>>>                        Move "DemoColHigh" to sCSSClass
34292>>>                    End
34292>>>>
34292>>>                    Else Begin
34293>>>                        Move "DemoColMedium" to sCSSClass
34294>>>                    End
34294>>>>
34294>>>                End_Procedure
34295>>>            End_Object
34296>>>
34296>>>            Object oCustomer_Status is a cWebColumnCheckBox
34298>>>                Entry_Item Customer.Status
34299>>>                Set psCaption to "Status"
34300>>>                Set piWidth to 30
34301>>>            End_Object
34302>>>        End_Object
34303>>>
34303>>>        Object oWebGroup1 is a cWebGroup
34305>>>            Set psCaption to "Options"
34306>>>            Set piColumnCount to 12
34307>>>
34307>>>            Object oBtnRadio1 is a cWebRadio
34309>>>                Set piColumnSpan to 4
34310>>>                Set psCaption to "Single delete button"
34311>>>                Set psRadioValue to "SINGLE_BUTTON"
34312>>>                Set pbServerOnChange to True
34313>>>
34313>>>                Procedure OnChange String sNewValue String sOldValue
34316>>>                    Forward Send OnChange sNewValue sOldValue
34318>>>                    
34318>>>                    Send UpdateUI
34319>>>                End_Procedure
34320>>>                
34320>>>            End_Object
34321>>>
34321>>>            Object oImgRadio1 is a cWebRadio
34323>>>                Set piColumnSpan to 4
34324>>>                Set psCaption to "Static image"
34325>>>                Set psRadioValue to "STATIC_IMAGE"
34326>>>                Set piColumnIndex to 4
34327>>>            End_Object
34328>>>
34328>>>            Object oColorCheckbox is a cWebCheckbox
34330>>>                Set piColumnSpan to 4
34331>>>                Set psCaption to "Color balance"
34332>>>                Set pbServerOnChange to True
34333>>>                Set piColumnIndex to 8
34334>>>
34334>>>                Procedure OnChange String sNewValue String sOldValue
34337>>>                    Forward Send OnChange sNewValue sOldValue
34339>>>                    
34339>>>                    Send UpdateUI
34340>>>                End_Procedure
34341>>>            End_Object
34342>>>
34342>>>            Object oBtnRadio2 is a cWebRadio
34344>>>                Set piColumnSpan to 4
34345>>>                Set psCaption to "Dynamic buttons"
34346>>>                Set psRadioValue to "DYNAMIC_BUTTONS"
34347>>>            End_Object
34348>>>
34348>>>            Object oImgRadio2 is a cWebRadio
34350>>>                Set piColumnSpan to 4
34351>>>                Set psCaption to "Dynamic images"
34352>>>                Set psRadioValue to "DYNAMIC_IMAGE"
34353>>>                Set piColumnIndex to 4
34354>>>            End_Object
34355>>>            
34355>>>            Object oShowSelectedCheckbox is a cWebCheckbox
34357>>>                Set piColumnSpan to 4
34358>>>                Set psCaption to "Selected row"
34359>>>                Set pbServerOnChange to True
34360>>>                Set piColumnIndex to 8
34361>>>
34361>>>                Procedure OnChange String sNewValue String sOldValue
34364>>>                    Forward Send OnChange sNewValue sOldValue
34366>>>                    
34366>>>                    Send UpdateUI
34367>>>                End_Procedure
34368>>>            End_Object
34369>>>        End_Object
34370>>>    End_Object 
34371>>>    
34371>>>    
34371>>>    //  OnLoad:
34371>>>    //
34371>>>    //  Initializes the view.
34371>>>    Procedure OnLoad
34374>>>        Forward Send OnLoad
34376>>>        
34376>>>        //  Initialize UI based on settings
34376>>>        Send UpdateUI        
34377>>>        
34377>>>        //  Find first customer to trigger list fill
34377>>>        Send Find of oCustomer_DD FIRST_RECORD Index.1
34378>>>        
34378>>>    End_Procedure
34379>>>
34379>>>    
34379>>>    //  UpdateUI:
34379>>>    //
34379>>>    //  Updates the user interface according to the radio and checkbox settings.
34379>>>    Procedure UpdateUI
34382>>>        String sRadio
34382>>>        Boolean bChecked
34382>>>        
34382>>>        //  Hide / show columns based on radio settings
34382>>>        WebGet psValue of oBtnRadio1 to sRadio
34383>>>        
34383>>>        WebSet pbRender of oSingleBtnCol to (sRadio = "SINGLE_BUTTON")
34384>>>        WebSet pbRender of oDynamicBtnCol to (sRadio = "DYNAMIC_BUTTONS")
34385>>>        WebSet pbRender of oStaticImageCol to (sRadio = "STATIC_IMAGE")
34386>>>        WebSet pbRender of oDynamicImageCol to (sRadio = "DYNAMIC_IMAGE")
34387>>>        
34387>>>        //  Add / remove CSS class based on checkbox
34387>>>        Get GetChecked of oColorCheckbox to bChecked
34388>>>        If (bChecked) Begin
34390>>>            WebSet psCSSClass of oCustomer_Balance to "DemoColumnBalance"
34391>>>        End
34391>>>>
34391>>>        Else Begin
34392>>>            WebSet psCSSClass of oCustomer_Balance to "" 
34393>>>        End
34393>>>>
34393>>>        
34393>>>        //  Update pbShowSelected based on checkbox
34393>>>        Get GetChecked of oShowSelectedCheckbox to bChecked
34394>>>        WebSet pbShowSelected of oWebList1 to bChecked
34395>>>    End_Procedure
34396>>>    
34396>>>    
34396>>>        
34396>>>    //  ShowCustomer:
34396>>>    //
34396>>>    //  Shows the customer dialog, passing this view as the return object and the customer RowId.
34396>>>    Procedure ShowCustomer String sRowID
34399>>>        Send PopupCustomerDialog of oDemoCustomerDialog Self sRowID
34400>>>    End_Procedure
34401>>>    
34401>>>    
34401>>>    //  OnCloseModalDialog:
34401>>>    //
34401>>>    //  Called by the customer dialog when it is closed, so we can refresh the list.
34401>>>    Procedure OnCloseModalDialog Handle hoModalDialog
34404>>>        Send GridRefresh of oWebList1
34405>>>    End_Procedure
34406>>>    
34406>>>    
34406>>>    
34406>>>    
34406>>>    //  ExecDeactivateCustomer:
34406>>>    //
34406>>>    //  Callback handler for the ShowYesNo displayed by DeactivateCustomer. If yes is clicked,
34406>>>    //  the customer will be deactivated.
34406>>>    Procedure ExecDeactivateCustomer Integer eResult
34409>>>        If (eResult = cmYes) Begin
34411>>>            Set Field_Changed_Value of oCustomer_DD Field Customer.Status to "N"
34412>>>            Send Request_Save of oCustomer_DD
34413>>>            
34413>>>            Send GridRefresh of oWebList1
34414>>>        End
34414>>>>
34414>>>    End_Procedure
34415>>>    
34415>>>    WebPublishProcedure ExecDeactivateCustomer
34416>>>    
34416>>>    
34416>>>    //  DeactivateCustomer:
34416>>>    //
34416>>>    //  Deactivates the customer after displaying a confirmation dialog.
34416>>>    Procedure DeactivateCustomer String sRowID
34419>>>        RowID rRowID
34419>>>        
34419>>>        //  Make sure the right customer is in the buffer
34419>>>        Move (DeserializeRowID(sRowID)) to rRowID
34420>>>        If (not(IsNullRowID(rRowID))) Begin
34422>>>            Send FindByRowId of oCustomer_DD Customer.File_Number rRowID
34423>>>            
34423>>>            //  Show Confirmation  
34423>>>            Send ShowYesNo Self (RefProc(ExecDeactivateCustomer)) (SFormat("Do you want to deactivate customer '%1'?", Trim(Customer.Name))) "Confirm"
34424>>>        End
34424>>>>
34424>>>    End_Procedure
34425>>>    
34425>>>    
34425>>>
34425>>>End_Object
34426>    
34426>    Use CustomerXML.wo
Including file: CustomerXML.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\CustomerXML.wo)
34426>>>Use cWebService.pkg
34426>>>Use DataDict.pkg
34426>>>Use Customer.DD
34426>>>
34426>>>Object oCustXML is a cWebService
34428>>>
34428>>>    // The main purpose of this sample is to show how data can be passed in and out
34428>>>    // as non-specified XML.
34428>>>    // When writing your functions, always consider using structs and arrays first. These data
34428>>>    // types could represent a simpler solution for the users and fewer lines of code
34428>>>    // in your function.
34428>>>    
34428>>>    // psDocumentation provides high level documentation of your web service. Clients using
34428>>>    // this service will see and use this documentation.
34428>>>    Set psDocumentation to ;        ("This uses a web service to return a list of customers and to pass a " + ;          "list of customers with items marked for delete. It is expected that the " + ;          "client using this will know what the format of the XML document must be")
34429>>>    
34429>>>    Set psServiceName to "CustomerXML"
34430>>>    Set psServiceURI to "http://tempuri.org/"
34431>>>    Set psServiceTitle to "Customer XML Service"
34432>>>
34432>>>    Object Customer_DD is a Customer_DataDictionary
34434>>>        Send DefineAllExtendedFields
34435>>>    End_Object    // Customer_DD
34436>>>
34436>>>    Set Main_DD to Customer_DD
34437>>>
34437>>>    Function CustomerXMLList Returns XmlHandle
#REM SEND REGISTERINTERFACE |CI7089 "get_CustomerXMLList" "Returns XmlHandle" "Returns an XML document of all customers (Name, Number, State)."
34441>>>       Integer bOk
34441>>>       Handle hoXML hoRoot hoEle hoXML1 hoRoot1
34441>>>       Handle hoCustomerDD
34441>>>       String sName sNumber sState sNamespace
34441>>>    
34441>>>       Move Customer_dd to hoCustomerDD
34442>>>    
34442>>>       // namespace to use for document
34442>>>       Move "http://www.dataaccess.com/Test/CustomerList" to sNameSpace
34443>>>    
34443>>>       // create XML document / Create root node
34443>>>       Get Create (RefClass(cXMLDomDocument)) to hoXML
34444>>>       // Create the Root element named CustomerList
34444>>>       Get CreateDocumentElementNS Of hoXML sNameSpace "CustomerList" To hoRoot
34445>>>       // now go through all customer records
34445>>>       Send Clear of hoCustomerDD
34446>>>       Send Find of hoCustomerDD ge 2
34447>>>       While (found)
34451>>>           // get name, number and state to strings
34451>>>           Move (trim(Customer.Name))    To sName
34452>>>           Move Customer.Customer_Number To sNumber
34453>>>           Move (trim(Customer.State))   To sState
34454>>>           // for each customer create customer node with child elements
34454>>>           Get AddElementNS Of hoRoot sNameSpace "Customer" "" To hoEle
34455>>>              Send AddElementNS Of hoEle sNameSpace "Name"   sName
34456>>>              Send AddElementNS Of hoEle sNameSpace "Number" sNumber
34457>>>              Send AddElementNS Of hoEle sNameSpace "State"  sState
34458>>>           Send Destroy Of hoEle
34459>>>           Send Find of hoCustomerDD gt 2
34460>>>       Loop
34461>>>>
34461>>>       Function_Return hoXML
34462>>>    End_Function
34463>>>    
34463>>>    // Pass XML customer document and parse it.
34463>>>    // Delete marked customers. Return an XML document containing a new list of customers.
34463>>>    Function DelCustomerXMLList XmlHandle CustomerList Returns XmlHandle
#REM SEND REGISTERINTERFACE |CI7090 "get_DelCustomerXMLList" "XmlHandle CustomerList Returns XmlHandle" "Passed a customer XML with delete atrributes. Deletes all customers and returns a new list."
34467>>>       Handle  hoCustomerDD
34467>>>       Handle  hoRoot hoCust
34467>>>       Handle  hoRetXml hoRetRoot hoRetCust
34467>>>       String  sDel sNumber sNs
34467>>>       Boolean bDelete
34467>>>    
34467>>>       If not CustomerList function_return 0
34470>>>    
34470>>>       Move Customer_DD to hoCustomerDD
34471>>>    
34471>>>       // namespaceURI of in and out XML doc
34471>>>       Move "http://www.dataaccess.com/Test/CustomerList" to sNs
34472>>>    
34472>>>       // this will be our return document
34472>>>       Get Create (RefClass(cXmlDomDocument)) to hoRetXml
34473>>>       Get CreateDocumentElementNS of hoRetXml sNs "CustomerList" to hoRetRoot
34474>>>    
34474>>>       // go through node list looking for customers to delete
34474>>>       Get DocumentElement of CustomerList to hoRoot
34475>>>       Get ChildElementNS of hoRoot sNs "Customer" to hoCust
34476>>>       While hoCust
34480>>>    
34480>>>           // if attribute "Delete" is "Y", we will delete it
34480>>>           Get AttributeValue Of hoCust "Delete" To sDel
34481>>>           Move (sDel="Y") to bDelete
34482>>>           If (bDelete) Begin
34484>>>                // attempt to delete customer
34484>>>                Get ChildElementValueNS Of hoCust sNs "Number" To sNumber
34485>>>                Send Clear of hoCustomerDD
34486>>>                Move sNumber to Customer.Customer_Number
34487>>>                Send Find of hoCustomerDD eq 1
34488>>>                If (found) Begin
34490>>>                    // This is commented out because this is a test.
34490>>>                    // We will remove the customer from the XML list,
34490>>>                    // but not from the database table.
34490>>>                    // This allows the sample to be run over and over.
34490>>>    
34490>>>                    //Send Request_delete of hoCustomerDD
34490>>>                    //If (err) begin
34490>>>                    //    Move False to bDelete
34490>>>                    //end
34490>>>                End
34490>>>>
34490>>>           End
34490>>>>
34490>>>           // if not deleted, add the customer node to the return document
34490>>>           If not bDelete begin
34492>>>               Get CloneNode of hoCust true to hoRetCust          // clone node and all children
34493>>>               Get AppendNode of hoRetRoot hoRetCust to hoRetCust // append to return doc
34494>>>               Send destroy of hoRetCust
34495>>>           End
34495>>>>
34495>>>           //
34495>>>           Get NextElementNS of hoCust sNs "Customer" to hoCust
34496>>>       Loop
34497>>>>
34497>>>       // note that both the passed XML document and the return document
34497>>>       // will automatically be destroyed by the web service handler
34497>>>       Function_Return hoRetXML
34498>>>    End_Function
34499>>>
34499>>>End_Object    // oCustXML
34500>    Use CustomerAndOrderInfo.wo
Including file: CustomerAndOrderInfo.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\CustomerAndOrderInfo.wo)
34500>>>// Structures used by the services
34500>>>
34500>>>// Customer Information
34500>>>// This structure matches the structure of the Customer table
34500>>>struct tCustomerInfo
34500>>>    integer iCustNumber
34500>>>    string  sName
34500>>>    string  sCustAddress
34500>>>    string  sCity
34500>>>    string  sState
34500>>>    string  sZip
34500>>>    string  sPhoneNumber
34500>>>    string  sFaxNumber
34500>>>    string  sEmailAddress
34500>>>    real    rCreditLimit
34500>>>    real    rPurchases
34500>>>    real    rBalance
34500>>>    string  sComments
34500>>>    string  sStatus
34500>>>end_struct
34500>>>
34500>>>// These next two structures do not match the structure of the Customer table exactly
34500>>>// It is an example of structures that could have been determined by some other source (e.g. an industry group)
34500>>>
34500>>>// Customer Address
34500>>>struct tCustAddress
34500>>>    string  sCustAddress
34500>>>    string  sCity
34500>>>    string  sState
34500>>>    string  sZip
34500>>>end_struct
34500>>>
34500>>>// New Customer
34500>>>struct tNewCustomer
34500>>>    string          sFirstName
34500>>>    string          sMiddleName
34500>>>    string          sLastName
34500>>>    tCustAddress    Address
34500>>>    tCustAddress    Address
34500>>>    string          sPhoneNumber
34500>>>    string          sFaxNumber
34500>>>    string          sEmailAddress
34500>>>end_struct
34500>>>
34500>>>// Order Detail
34500>>>struct tOrderDet
34500>>>    string  sItemID
34500>>>    integer iQty
34500>>>    real    rUnitPrice
34500>>>    real    rPrice
34500>>>end_struct
34500>>>
34500>>>// Order
34500>>>struct tOrder
34500>>>    integer     iOrderNumber
34500>>>    integer     iCustNumber
34500>>>    date        dOrdDate
34500>>>    string      sTerms
34500>>>    string      sShipVia
34500>>>    string      sOrderedBy
34500>>>    string      sSalesPerson
34500>>>    real        rOrderTotal
34500>>>    tOrderDet[] ArrayOfDetails
34500>>>    tOrderDet[] ArrayOfDetails
34500>>>end_struct
34500>>>
34500>>>// Order Summary
34500>>>struct tOrderSummary
34500>>>    integer iOrderNumber
34500>>>    date    dOrderDate
34500>>>    real    rOrderTotal
34500>>>end_struct
34500>>>
34500>>>Use cWebService.pkg
34500>>>Use DataDict.pkg
34500>>>Use VENDOR.DD
34500>>>Use INVT.DD
34500>>>Use CUSTOMER.DD
34500>>>Use SALESP.DD
34500>>>Use OrderHea.DD
34500>>>Use ORDERDTL.DD
34500>>>
34500>>>Object oCustOrderWebService is a cWebService
34502>>>
34502>>>    // psDocumentation provides high level documentation of your web service. Clients using
34502>>>    // this service will see and use this documentation.
34502>>>    set psDocumentation to ;        ("This DataFlex Web Service provides information on Customers " +;         "and their orders. You can also use this service to update Customer information, " +;         "create new Customers and retrieve a list of Customers.")
34503>>>    
34503>>>    Set psServiceName to "CustomerAndOrderInfo"
34504>>>    Set psServiceURI to "http://tempuri.org/"
34505>>>    Set psServiceTitle to "Customer and Order Information Service"
34506>>>
34506>>>    Object Vendor_DD is a Vendor_DataDictionary
34508>>>        Send DefineAllExtendedFields
34509>>>    End_Object    // Vendor_DD
34510>>>
34510>>>    Object Invt_DD is a Invt_DataDictionary
34512>>>        Set DDO_Server to Vendor_DD
34513>>>        Send DefineAllExtendedFields
34514>>>    End_Object    // Invt_DD
34515>>>
34515>>>    Object Customer_DD is a Customer_DataDictionary
34517>>>        Send DefineAllExtendedFields
34518>>>    End_Object    // Customer_DD
34519>>>
34519>>>    Object Salesp_DD is a Salesp_DataDictionary
34521>>>        Send DefineAllExtendedFields
34522>>>    End_Object    // Salesp_DD
34523>>>
34523>>>    Object OrderHea_DD is a OrderHea_DataDictionary
34525>>>        Set DDO_Server to Customer_DD
34526>>>        Set DDO_Server to Salesp_DD
34527>>>        Set Constrain_File to Customer.File_Number
34528>>>        Send DefineAllExtendedFields
34529>>>    End_Object    // OrderHea_DD
34530>>>
34530>>>    Object OrderDtl_DD is a OrderDtl_DataDictionary
34532>>>        Set DDO_Server to OrderHea_DD
34533>>>        Set DDO_Server to Invt_DD
34534>>>        Set Constrain_File to OrderHea.File_Number
34535>>>        Send DefineAllExtendedFields
34536>>>    End_Object    // OrderDtl_DD
34537>>>
34537>>>    Set Main_DD to Customer_DD
34538>>>
34538>>>    // Function GetOrdersForCustomer:
34538>>>    // Searches the OrderHea table for specified customer number and returns order numbers
34538>>>    //
34538>>>    // This demonstrates how to build and return data in an array based on a fundamental data type (array of integers)
34538>>>    //
34538>>>    // iCustNum - Customer number
34538>>>    // iArrayOfOrderNumbers - Array containing Order numbers for iCustNum
34538>>>    Function GetOrdersForCustomer integer iCustNum returns Integer[]
#REM SEND REGISTERINTERFACE |CI7091 "get_GetOrdersForCustomer" "integer iCustNum returns Integer[]" "Searches for order number in the OrderHea file for specified customer number and returns order numbers."
34542>>>        Integer[] iArrayOfOrderNumbers
34543>>>        Handle hoCustomerDD hoOrderHeaDD
34543>>>        Integer iCount iOldConstraint iNewConst
34543>>>    
34543>>>        Move 0 to iCount
34544>>>    
34544>>>        // Validate Customer Number
34544>>>        Move Customer_DD to hoCustomerDD
34545>>>        Send Clear of hoCustomerDD
34546>>>        Move iCustNum to Customer.Customer_number
34547>>>        Send Find of hoCustomerDD EQ 1
34548>>>    
34548>>>        // Find Orders for iCustNum
34548>>>        If (Found) Begin
34550>>>            Move OrderHea_DD to hoOrderHeaDD
34551>>>            Send Find of hoOrderHeaDD first_record 1
34552>>>    
34552>>>            While (Found)
34556>>>                Move OrderHea.Order_number to iArrayOfOrderNumbers[iCount]
34557>>>    
34557>>>                Send Find of hoOrderHeaDD GT 1
34558>>>                Increment iCount
34559>>>            Loop
34560>>>>
34560>>>    
34560>>>        end
34560>>>>
34560>>>        else Begin
34561>>>            Send WebServiceException "Customer number not found."
34562>>>            Function_Return
34563>>>        end
34563>>>>
34563>>>    
34563>>>        Function_Return iArrayOfOrderNumbers
34564>>>    End_Function  // GetOrdersForCustomer
34565>>>    
34565>>>    // Function ChangeCustomerAddress:
34565>>>    // Change address for customer
34565>>>    //
34565>>>    // This demonstrates how to pass and use simple struct data
34565>>>    //
34565>>>    // NewCustomerAddress - New Customer Address
34565>>>    // bSuccess - Boolean indicating if the new address was changed successfully or not
34565>>>    Function ChangeCustomerAddress integer iCustNum tCustAddress NewCustomerAddress returns Boolean
#REM SEND REGISTERINTERFACE |CI7092 "get_ChangeCustomerAddress" "integer iCustNum tCustAddress NewCustomerAddress returns Boolean" "Change address for customer."
34569>>>        boolean bSuccess
34569>>>        handle hDD
34569>>>    
34569>>>        move False to bSuccess
34570>>>    
34570>>>        move Customer_DD to hDD
34571>>>        send clear of hDD
34572>>>        move iCustNum to Customer.Customer_number
34573>>>        send find of hDD EQ 1
34574>>>    
34574>>>        if (found) begin
34576>>>            // Move values from structure to DD buffer
34576>>>            set field_changed_value  of hDD FIELD Customer.Address to NewCustomerAddress.sCustAddress
34577>>>            set field_changed_value  of hDD FIELD Customer.City    to NewCustomerAddress.sCity
34578>>>            set field_changed_value  of hDD FIELD Customer.State   to NewCustomerAddress.sState
34579>>>            set field_changed_value  of hDD FIELD Customer.Zip     to NewCustomerAddress.sZip
34580>>>    
34580>>>            // Save record
34580>>>            send Request_Save of hDD
34581>>>            move (not(Err)) to bSuccess
34582>>>        end
34582>>>>
34582>>>    
34582>>>        Function_Return bSuccess
34583>>>    End_Function  // ChangeCustomerAddress
34584>>>    
34584>>>    // Function CreateNewCustomer:
34584>>>    // Add new customer to Customer table
34584>>>    //
34584>>>    // This demonstrates how to pass and use more complex struct data,
34584>>>    // where the struct contains an element that is itself another struct
34584>>>    //
34584>>>    // NewCustomer - New Customer
34584>>>    // iSuccess - Integer containing the customer number, if the new customer was added successfully
34584>>>    // or -1 if customer was not added
34584>>>    Function CreateNewCustomer tNewCustomer NewCustomer returns Integer
#REM SEND REGISTERINTERFACE |CI7093 "get_CreateNewCustomer" "tNewCustomer NewCustomer returns Integer" "Add new customer to Customer table."
34588>>>        integer iSuccess
34588>>>        handle hDD
34588>>>        string sName
34588>>>    
34588>>>        move Customer_DD to hDD
34589>>>        send clear of hDD
34590>>>    
34590>>>        // Move values from structure to DD buffer
34590>>>        move (NewCustomer.sFirstName * NewCustomer.sMiddleName * NewCustomer.sLastName) to sName
34591>>>        set field_changed_value  of hDD FIELD Customer.Name          to sName
34592>>>        set field_changed_value  of hDD FIELD Customer.Address       to NewCustomer.Address.sCustAddress
34593>>>        set field_changed_value  of hDD FIELD Customer.City          to NewCustomer.Address.sCity
34594>>>        set field_changed_value  of hDD FIELD Customer.State         to NewCustomer.Address.sState
34595>>>        set field_changed_value  of hDD FIELD Customer.Zip           to NewCustomer.Address.sZip
34596>>>        set field_changed_value  of hDD FIELD Customer.Phone_number  to NewCustomer.sPhoneNumber
34597>>>        set field_changed_value  of hDD FIELD Customer.Fax_number    to NewCustomer.sFaxNumber
34598>>>        set field_changed_value  of hDD FIELD Customer.Email_address to NewCustomer.sEmailAddress
34599>>>
34599>>>        // note that the default for credit_limit is already set in the DD
34599>>>        set field_changed_value  of hDD FIELD Customer.Purchases     to 0
34600>>>        set field_changed_value  of hDD FIELD Customer.Balance       to 0
34601>>>        set field_changed_value  of hDD FIELD Customer.Comments      to "New Customer"
34602>>>        set field_changed_value  of hDD FIELD Customer.Status        to "Y"  // Active by default
34603>>>    
34603>>>        // Save record
34603>>>        send request_save of hDD
34604>>>        if (not(Err)) move Customer.Customer_Number to iSuccess
34607>>>        else move -1 to iSuccess
34609>>>    
34609>>>        Function_Return iSuccess
34610>>>    End_Function  // CreateNewCustomer
34611>>>    
34611>>>    // Function GetCustomerInfo:
34611>>>    // Searches for customer number in the Customer table and returns customer details
34611>>>    //
34611>>>    // This demonstrates how to build and return data in a simple struct
34611>>>    //
34611>>>    // iCustNum - Customer number
34611>>>    // OneCustomer - Structure containing Customer Information from Customer Table
34611>>>    Function GetCustomerInfo integer iCustNum returns tCustomerInfo
#REM SEND REGISTERINTERFACE |CI7094 "get_GetCustomerInfo" "integer iCustNum returns tCustomerInfo" "Searches for customer number in the Customer table and returns customer details."
34615>>>        tCustomerInfo OneCustomer
34615>>>        tCustomerInfo OneCustomer
34615>>>        handle hDD
34615>>>    
34615>>>        move Customer_DD to hDD
34616>>>        send clear of hDD
34617>>>        move iCustNum to Customer.Customer_number
34618>>>        send find of hDD EQ 1
34619>>>    
34619>>>        if (found) begin
34621>>>            move Customer.Customer_Number to OneCustomer.iCustNumber
34622>>>            move Customer.Name            to OneCustomer.sName
34623>>>            move Customer.Address         to OneCustomer.sCustAddress
34624>>>            move Customer.City            to OneCustomer.sCity
34625>>>            move Customer.State           to OneCustomer.sState
34626>>>            move Customer.Zip             to OneCustomer.sZip
34627>>>            move Customer.Phone_number    to OneCustomer.sPhoneNumber
34628>>>            move Customer.Fax_number      to OneCustomer.sFaxNumber
34629>>>            move Customer.Email_address   to OneCustomer.sEmailAddress
34630>>>            move Customer.Credit_limit    to OneCustomer.rCreditLimit
34631>>>            move Customer.Purchases       to OneCustomer.rPurchases
34632>>>            move Customer.Balance         to OneCustomer.rBalance
34633>>>            move Customer.Comments        to OneCustomer.sComments
34634>>>            move Customer.Status          to OneCustomer.sStatus
34635>>>        end
34635>>>>
34635>>>        else begin
34636>>>            send WebServiceException "Customer number not found."
34637>>>            Function_Return
34638>>>        End
34638>>>>
34638>>>    
34638>>>        Function_Return OneCustomer
34639>>>    End_Function  // GetCustomerInfo
34640>>>    
34640>>>    // Function GetCustomerInfoList:
34640>>>    // Reads customer table and returns an array with a list of customers
34640>>>    //
34640>>>    // This demonstrates how to build and return data in an array of structs
34640>>>    //
34640>>>    // ArrayOfCustomers - Array containing Customer from Customer table
34640>>>    Function GetCustomerInfoList returns tCustomerInfo[]
#REM SEND REGISTERINTERFACE |CI7095 "get_GetCustomerInfoList" "returns tCustomerInfo[]" "Reads customer table and returns an array with a list of customers."
34644>>>        tCustomerInfo[] ArrayOfCustomers
34644>>>        tCustomerInfo[] ArrayOfCustomers
34645>>>        handle hoCustomerDD
34645>>>        integer iCount
34645>>>    
34645>>>        move 0 to iCount
34646>>>        move Customer_dd to hoCustomerDD
34647>>>    
34647>>>        // now go through all customer records
34647>>>        send clear of hoCustomerDD
34648>>>        send find of hoCustomerDD GE 2
34649>>>        while (found)
34653>>>            move Customer.Customer_Number to ArrayOfCustomers[iCount].iCustNumber
34654>>>            move Customer.Name            to ArrayOfCustomers[iCount].sName
34655>>>            move Customer.Address         to ArrayOfCustomers[iCount].sCustAddress
34656>>>            move Customer.City            to ArrayOfCustomers[iCount].sCity
34657>>>            move Customer.State           to ArrayOfCustomers[iCount].sState
34658>>>            move Customer.Zip             to ArrayOfCustomers[iCount].sZip
34659>>>            move Customer.Phone_number    to ArrayOfCustomers[iCount].sPhoneNumber
34660>>>            move Customer.Fax_number      to ArrayOfCustomers[iCount].sFaxNumber
34661>>>            move Customer.Email_address   to ArrayOfCustomers[iCount].sEmailAddress
34662>>>            move Customer.Credit_limit    to ArrayOfCustomers[iCount].rCreditLimit
34663>>>            move Customer.Purchases       to ArrayOfCustomers[iCount].rPurchases
34664>>>            move Customer.Balance         to ArrayOfCustomers[iCount].rBalance
34665>>>            move Customer.Comments        to ArrayOfCustomers[iCount].sComments
34666>>>            move Customer.Status          to ArrayOfCustomers[iCount].sStatus
34667>>>    
34667>>>            send find of hoCustomerDD GT 2
34668>>>            increment iCount
34669>>>        Loop
34670>>>>
34670>>>    
34670>>>        Function_Return ArrayOfCustomers
34671>>>    End_Function  // CustomerList
34672>>>    
34672>>>    // Function GetOrderSummaryForCustomer:
34672>>>    // Searches for order number in the OrderHea table for specified customer number and returns
34672>>>    // order number, date and total.
34672>>>    //
34672>>>    // This demonstrates how to build and return data in an array of structs
34672>>>    //
34672>>>    // iCustNum - Customer number
34672>>>    // ArrayOfOrdersSum - Array containing OrderSummary for iCustNum
34672>>>    Function GetOrderSummaryForCustomer integer iCustNum returns tOrderSummary[]
#REM SEND REGISTERINTERFACE |CI7096 "get_GetOrderSummaryForCustomer" "integer iCustNum returns tOrderSummary[]" "Searches for order number in the OrderHea table for specified customer number and returns order number, date and total."
34676>>>        tOrderSummary[] ArrayOfOrdersSum
34676>>>        tOrderSummary[] ArrayOfOrdersSum
34677>>>        handle hDD
34677>>>        integer iCount iOldConstraint
34677>>>    
34677>>>        move 0 to iCount
34678>>>    
34678>>>        // Validate Customer Number
34678>>>        move Customer_DD to hDD
34679>>>        send clear of hDD
34680>>>        move iCustNum to Customer.Customer_number
34681>>>        send find of hDD EQ 1
34682>>>    
34682>>>        // Find Orders for iCustNum
34682>>>        if (found) begin
34684>>>            move OrderHea_DD to hDD
34685>>>            send find of hDD first_record 1
34686>>>    
34686>>>            while (found)
34690>>>                move OrderHea.Order_number to ArrayOfOrdersSum[iCount].iOrderNumber
34691>>>                move OrderHea.Order_Date   to ArrayOfOrdersSum[iCount].dOrderDate
34692>>>                move OrderHea.Order_Total  to ArrayOfOrdersSum[iCount].rOrderTotal
34693>>>    
34693>>>                send find of hDD GT 1
34694>>>                increment iCount
34695>>>            loop
34696>>>>
34696>>>    
34696>>>        end
34696>>>>
34696>>>        else begin
34697>>>            send WebServiceException "Customer number not found."
34698>>>            Function_Return
34699>>>    
34699>>>        end
34699>>>>
34699>>>    
34699>>>        Function_Return ArrayOfOrdersSum
34700>>>    End_Function  // GetOrderSummaryForCustomer
34701>>>    
34701>>>    // Function GetOrderInfo:
34701>>>    // Searches for order number in the OrderHea table and returns order header and details
34701>>>    //
34701>>>    // This demonstrates how to build and return data in complex structs.
34701>>>    // This struct contains a member that is an array of structs
34701>>>    //
34701>>>    // iOrdNum - Order number
34701>>>    // OneOrder - Structure containing Order header and details
34701>>>    Function GetOrderInfo integer iOrdNum returns tOrder
#REM SEND REGISTERINTERFACE |CI7097 "get_GetOrderInfo" "integer iOrdNum returns tOrder" "Searches for order number in the OrderHea table and returns order header and details."
34705>>>        tOrder OneOrder
34705>>>        tOrder OneOrder
34705>>>        handle hDD
34705>>>        integer iCount iOldConstraint
34705>>>        Boolean bHasRecord
34705>>>    
34705>>>        move 0 to iCount
34706>>>    
34706>>>        move OrderHea_DD to hDD
34707>>>    
34707>>>        // OrderHea_DD is constrained by Customer. In order to find all orders,
34707>>>        // not only the ones belonging to the current Customer in the DD buffer,
34707>>>        // we need to remove the constraint. Here we:
34707>>>        // save the current constraint
34707>>>        get constrain_file of hDD to iOldConstraint
34708>>>        // remove the constraint
34708>>>        set constrain_file of hDD to 0
34709>>>        // enforce the new rule, i.e. no constraint
34709>>>        send rebuild_constraints of hDD
34710>>>    
34710>>>        send clear of hDD
34711>>>        move iOrdNum to OrderHea.Order_number
34712>>>        send find of hDD EQ 1
34713>>>    
34713>>>        // restore the default constraint to whatever it was
34713>>>        set constrain_file of hDD to iOldConstraint
34714>>>        send rebuild_constraints of hDD
34715>>>    
34715>>>        get HasRecord of hDD to bHasRecord
34716>>>        if (bHasRecord) begin
34718>>>    
34718>>>            move OrderHea.Order_Number    to OneOrder.iOrderNumber
34719>>>            move OrderHea.Customer_Number to OneOrder.iCustNumber
34720>>>            move OrderHea.Order_Date      to OneOrder.dOrdDate
34721>>>            move OrderHea.Terms           to OneOrder.sTerms
34722>>>            move OrderHea.Ship_Via        to OneOrder.sShipVia
34723>>>            move OrderHea.Ordered_By      to OneOrder.sOrderedBy
34724>>>            move OrderHea.Salesperson_ID  to OneOrder.sSalesPerson
34725>>>            move OrderHea.Order_Total     to OneOrder.rOrderTotal
34726>>>    
34726>>>            move OrderDtl_DD to hDD
34727>>>            send find of hDD first_record 1
34728>>>            while (found)
34732>>>                move OrderDtl.Item_id        to OneOrder.ArrayOfDetails[iCount].sItemID
34733>>>                move OrderDtl.Qty_ordered    to OneOrder.ArrayOfDetails[iCount].iQty
34734>>>                move OrderDtl.Price          to OneOrder.ArrayOfDetails[iCount].rUnitPrice
34735>>>                move OrderDtl.Extended_price to OneOrder.ArrayOfDetails[iCount].rPrice
34736>>>    
34736>>>                send find of hDD GT 1
34737>>>                increment iCount
34738>>>            loop
34739>>>>
34739>>>    
34739>>>        end
34739>>>>
34739>>>        else begin
34740>>>            send WebServiceException "Order number not found."
34741>>>            Function_Return
34742>>>        end
34742>>>>
34742>>>    
34742>>>        Function_Return OneOrder
34743>>>    End_Function  // GetOrderInfo
34744>>>
34744>>>End_Object    // oCustOrderWebService
34745>    Use TestService.wo
Including file: TestService.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\TestService.wo)
34745>>>Use cWebService.pkg
34745>>>Use DataDict.pkg
34745>>>Use VENDOR.DD
34745>>>Use INVT.DD
34745>>>Use CUSTOMER.DD
34745>>>Use SALESP.DD
34745>>>Use OrderHea.DD
34745>>>Use OrderDtl.DD
34745>>>
34745>>>Object oTestService is a cWebService
34747>>>
34747>>>    Set psDocumentation to ;        ("This is a Test Web Service. It contains a few simple operations " +;         "demonstrating how to create a DataFlex Web Service. "+;         "To test any of these web services using your web browser, simply follow "+;         "the link below for the specified service. "+;         "You can also view the WSDL for this service by accessing the link to "+;         "Service Description below. To create a new Web Service operation, simply "+;         "add a function in the oTestService Web Service object and select Publish. "+;         "To learn more about creating Web Services in DataFlex, please see the "+;         "Web Services section in the DataFlex Help.")
34748>>>
34748>>>    Set psServiceName to "TestService"
34749>>>    Set psServiceURI to "http://www.visualdataflex.com/examples/testservice"
34750>>>    Set psServiceTitle to "DataFlex Test Web Service"
34751>>>    Set psDescription to "Test Web Service"
34752>>>
34752>>>    Object Vendor_DD is a Vendor_DataDictionary
34754>>>        Send DefineAllExtendedFields
34755>>>    End_Object    // Vendor_DD
34756>>>
34756>>>    Object Invt_DD is a Invt_DataDictionary
34758>>>        Set DDO_Server to Vendor_DD
34759>>>        Send DefineAllExtendedFields
34760>>>    End_Object    // Invt_DD
34761>>>
34761>>>    Object Customer_DD is a Customer_DataDictionary
34763>>>        Send DefineAllExtendedFields
34764>>>    End_Object    // Customer_DD
34765>>>
34765>>>    Object Salesp_DD is a Salesp_DataDictionary
34767>>>        Send DefineAllExtendedFields
34768>>>    End_Object    // Salesp_DD
34769>>>
34769>>>    Object OrderHea_DD is a OrderHea_DataDictionary
34771>>>        Set DDO_Server to Customer_DD
34772>>>        Set DDO_Server to Salesp_DD
34773>>>        Send DefineAllExtendedFields
34774>>>    End_Object    // OrderHea_DD
34775>>>
34775>>>    Object OrderDtl_DD is a OrderDtl_DataDictionary
34777>>>        Set DDO_Server to OrderHea_DD
34778>>>        Set DDO_Server to Invt_DD
34779>>>        Send DefineAllExtendedFields
34780>>>    End_Object    // OrderDtl_DD
34781>>>
34781>>>    Set Main_DD to Invt_DD
34782>>>
34782>>>    Function SayHello String sName Returns String
#REM SEND REGISTERINTERFACE |CI7098 "get_SayHello" "String sName Returns String" "Returns a hello message using the name passed as the string."
34786>>>        String sReturn
34786>>>             
34786>>>        Move ("Hello," * sName +".") to sReturn
34787>>>        
34787>>>        Function_Return sReturn
34788>>>    End_Function
34789>>>    
34789>>>    Function Welcome String sName Returns String
#REM SEND REGISTERINTERFACE |CI7099 "get_Welcome" "String sName Returns String" "Returns a welcome message using the name passed as the string and IIS server variables."
34793>>>        String sReturn
34793>>>        String sIPAddr sServer sLocalAddr
34793>>>        
34793>>>        Get ServerVariable "REMOTE_ADDR" to sIpAddr   
34794>>>        Get ServerVariable "SERVER_NAME" to sServer
34795>>>        Get ServerVariable "LOCAL_ADDR" to sLocalAddr
34796>>>             
34796>>>        Move ("Hello," * sName + ". This is" * sServer) to sReturn
34797>>>        Move (sReturn * ". I see you're from" * sIPAddr * ". Welcome to" * sLocalAddr +"!") to sReturn
34798>>>        
34798>>>        Function_Return sReturn
34799>>>    End_Function    
34800>>>    
34800>>>    Function Echo String echoString Returns String
#REM SEND REGISTERINTERFACE |CI7100 "get_Echo" "String echoString Returns String" "Echoes back the string passed."
34804>>>        Function_Return echoString
34805>>>    End_Function
34806>>>
34806>>>    Function AddNumber Real number1 Real number2 Returns Real
#REM SEND REGISTERINTERFACE |CI7101 "get_AddNumber" "Real number1 Real number2 Returns Real" "Adds two numbers and returns the result."
34810>>>        Function_Return (number1+number2)
34811>>>    End_Function
34812>>>
34812>>>    Function PriceQuote String itemID Returns Number
#REM SEND REGISTERINTERFACE |CI7102 "get_PriceQuote" "String itemID Returns Number" "Looks up the price of a particular inventory item. Example item identifiers, DT, GOLD, MAPS, OBM, RUNMTR."
34816>>>        Send Clear of Invt_DD
34817>>>        Move itemID to Invt.Item_id
34818>>>        Send Find of Invt_DD eq 1
34819>>>        If (Not(Found)) Begin
34821>>>            //If the inventory item cannot be found, raise a web service exception
34821>>>            Send WebServiceException ("Unknown inventory item '"+itemID+"'")
34822>>>            Function_Return
34823>>>        End
34823>>>>
34823>>>        Function_Return Invt.Unit_price
34824>>>    End_Function
34825>>>
34825>>>    Function EstimatedOrderDeliveryDate Integer customerNumber Integer orderNumber Returns Date
#REM SEND REGISTERINTERFACE |CI7103 "get_EstimatedOrderDeliveryDate" "Integer customerNumber Integer orderNumber Returns Date" "Looks up an order and returns the delivery date. Example: customer number 1 and order number 101."
34829>>>        Send Clear of OrderHea_DD
34830>>>        Move customerNumber to OrderHea.Customer_number
34831>>>        Move orderNumber to OrderHea.Order_number
34832>>>        Send Find of OrderHea_DD eq 2
34833>>>        If (Not(Found)) Begin
34835>>>            //If the order cannot be found, we raise a web service exception
34835>>>            Send WebServiceException "The specified order number, or order number/customer number combination, is invalid"
34836>>>            Function_Return
34837>>>        End
34837>>>>
34837>>>
34837>>>        //We don't actually have a delivery date field in the database
34837>>>        //so we'll simply use the order date for this sample and add 30 days to it
34837>>>        Function_Return (OrderHea.Order_date + 30)
34838>>>    End_Function
34839>>>
34839>>>    Function ItemsSoldToDate String itemID Returns Integer
#REM SEND REGISTERINTERFACE |CI7104 "get_ItemsSoldToDate" "String itemID Returns Integer" "Calculates the total number of items sold. Example: item identifiers, DT, GOLD, MAPS, OBM, RUNMTR."
34843>>>        Integer total
34843>>>        //We'll do a simple brute force search through the database
34843>>>        //and calculate the total number of items sold.
34843>>>        //It's a bit naive, but it will do for this example
34843>>>        Send Clear of OrderDtl_DD
34844>>>        Send Find of OrderDtl_DD ge 1
34845>>>        While (Found)
34849>>>            If (OrderDtl.Item_id = Uppercase(itemId));                Increment total
34852>>>            Send Find of OrderDtl_DD gt 1
34853>>>        Loop
34854>>>>
34854>>>        Function_Return total
34855>>>    End_Function
34856>>>
34856>>>End_Object    // oTestService
34857>    
34857>    
34857>    // Generates a string of 40 random characters between ASCII 33 & ASCII 126
34857>    // This should produce a unique string suitable for a 16 character encryption key.
34857>    // Excludes the ;"' characters
34857>    // Used by WebApps to give the psEncryptPassword property a unique value.
34857>    Function GenerateEncryptString Returns String
34860>        Integer i iASCII
34860>        String sChar sKey
34860>        
34860>        For i from 0 to 39
34866>            Move (Random(93)) to iASCII
34867>            Move (iASCII + 34) to iASCII
34868>            
34868>            If (iASCII = 34 or iASCII = 39 or iASCII = 59) Begin
34870>                Increment iASCII
34871>            End
34871>            
34871>            Move (Character(iASCII)) to sChar
34872>            Move (sKey + sChar) to sKey
34873>        Loop
34874>        
34874>        Function_Return sKey
34875>    End_Function
34876>
34876>
34876>    Procedure InitPassword
34879>        // Note to the developer: For security purposes each installation of the WebOrder workspace must
34879>        // contain a unique value for the framework's encryption key. This value is stored in the cWebApp
34879>        // object's psEncryptPassword property.
34879>        //
34879>        // To ensure each running installation of WebOrder is different we have modified the Web App's OnLoad
34879>        // event to generate a random psEncryptPassword value the first time that the web app is run. This 
34879>        // value is then used and is stored in the OrdSys system table so that it does not get re-generated
34879>        // in subsequent instances of this web application.
34879>        //
34879>        // Since WebOrder is installed and run automatically when you install DataFlex we are required to 
34879>        // ensure that the encryption password cannot be guessed. Normally you would not need, or want, 
34879>        // to Use this technique in your own web applications. Instead you would manually set psEncryptPassword
34879>        // to a trusted, unique value for each web application that you deploy.
34879>        
34879>        
34879>        // Test if an encryption password has already been generated.
34879>        If (Trim(OrdSys.EncryptPassword) = "") Begin
34881>            Reread OrdSys
34885>            // Just in case another instance wrote to OrdSys.EncryptPassword in the millisecond
34885>            // between the above two lines of code we will test this value again
34885>            If (Trim(OrdSys.EncryptPassword) = "") Begin
34887>                Get GenerateEncryptString to OrdSys.EncryptPassword
34888>                SaveRecord OrdSys
34889>            End
34889>            Unlock
34890>        End
34890>
34890>        Set psEncryptPassword to (Trim(OrdSys.EncryptPassword))
34891>    End_Procedure
34892>    
34892>    Send InitPassword
34893>End_Object
34894>
34894>Send StartWebApp of oWebApp
34895>
Summary
Memory Available: 2147483646
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 21476
Total Resources: 0
Total Commands : 34894
Total Windows  : 1
Total Pages    : 1
Static Data    : 355747
Message area   : 252447
Total Blocks   : 14359
