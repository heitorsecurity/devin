Compiling Program: A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\WebApp.src
Memory Available: 2147483646
1>Use AllWebAppClasses.pkg
Using pre-compiled package ALLWEBAPPCLASSES.PKG
Including file: AllWebAppClasses.pkd    (C:\Program Files (x86)\DataFlex 18.2\Pkg\AllWebAppClasses.pkd)
28717>Use WebAppBase.pkg
28717>Use cWebMenuBar.pkg
28717>Use cWebToolbar.pkg
28717>Use cWebCommandbar.pkg
28717>Use cWebPanel.pkg
28717>Use cWebButton.pkg
28717>Use cWebMenuItem.pkg
28717>Use cWebMenuItemLoadView.pkg
28717>
28717>Object oApplication is a cApplication
28719>End_Object
28720>
28720>Object oWebApp is a cWebApp
28722>    Set psTheme to "Df_Flat_Desktop"
28723>//    Set peLoginMode to lmLoginNone
28723>
28723>// this will do a manual login
28723>//    Procedure OnLoad
28723>//        Boolean bOk
28723>//        Get UserLogin of ghoWebSessionManager "john" "John" to bOk
28723>//    End_Procedure
28723>
28723>    Object oCommandbar is a cWebCommandBar
28725>        Object oPainelGeral is a cWebPanel
28727>            Set peRegion to prTop
28728>            
28728>            Object oPainelTop is a cWebPanel
28730>                Set peRegion to prTop
28731>                Set piColumnCount to 20
28732>                Set psCSSClass to "PainelTopo"
28733>                
28733>                Object oPainelLogo is a cWebPanel
28735>                    Set peRegion to prTop
28736>                    Set piColumnCount to 20
28737>                    Set piWidth to 175
28738>                    
28738>                    Object oLogoSuperior is a cWebImage
28740>                        Set piColumnSpan to 2
28741>                        Set psUrl to "CssThemes/Df_Web_DataAccess/logo-02.png"
28742>                        Set piHeight to 40
28743>                        Set pePosition to wiFit
28744>                        Set pbFillHeight to True
28745>                    End_Object //oLogoSuperior
28746>                    
28746>                    Object oTitulo is a cWebHtmlBox
28748>                        Set psHtml to "<h1><strong><center>Alternando o estilo da sua aplica‡Æo.</center></strong></h1>"
28749>                        Set psCSSClass to "TituloApp"
28750>                        Set pbFillHeight to True
28751>                        Set piColumnIndex to 4
28752>                        Set piColumnSpan to 11
28753>                    End_Object //oTitulo
28754>                End_Object //oPainelLogo
28755>            End_Object //oPainelTop
28756>        End_Object //oPainelGeral
28757>        
28757>        Object oMenuBar is a cWebMenuBar
28759>            Object oFileMenu is a cWebMenuItem
28761>                Set psCaption to "File"
28762>                
28762>                Object oClearMenuItem is a cWebMenuClear
28764>                End_Object  
28765>                             
28765>                Object oClearAllMenuItem is a cWebMenuClearAll
28767>                End_Object  
28768>                
28768>                Object oPromptMenuItem is a cWebMenuPrompt
28770>                    Set pbBeginGroup to True
28771>                End_Object  
28772>                               
28772>                Object oFindMenuItem is a cWebMenuFind
28774>                End_Object  
28775>
28775>                Object oNextMenuItem is a cWebMenuFindNext
28777>                End_Object  
28778>
28778>                Object oPreviousMenuItem is a cWebMenuFindPrevious
28780>                End_Object  
28781>                
28781>                Object oLastMenuItem is a cWebMenuFindLast
28783>                End_Object                
28784>                                
28784>                Object oFirstMenuItem is a cWebMenuFindFirst
28786>                End_Object  
28787>                
28787>                Object oSaveMenuItem is a cWebMenuSave
28789>                    Set pbBeginGroup to True
28790>                End_Object  
28791>                
28791>                Object oDeleteMenuItem is a cWebMenuDelete
28793>                End_Object  
28794>                
28794>                Object oLoginMenuItem is a cWebMenuItem
28796>                    Set psCaption to "Log In"
28797>                    Set pbBeginGroup to True
28798>                    Set psCSSClass to "WebLoginMenuItem"
28799>
28799>                    Procedure OnClick
28802>                        Send RequestLogin to ghoWebSessionManager
28803>                    End_Procedure
28804>                    
28804>                    Procedure OnLoad
28807>                        Integer eLoginMode
28807>                        Handle hoLogin
28807>                        Get GetLoginView to hoLogin
28808>                        Get peLoginMode to eLoginMode
28809>                        WebSet pbRender to  (hoLogin and eLoginMode<>lmLoginNone)
28810>                    End_Procedure  // OnLoad
28811>                    
28811>                End_Object  
28812>
28812>                Object oLogoutMenuItem is a cWebMenuItem
28814>                    Set psCaption to "Log Out"
28815>                    Set psCSSClass to "WebLogoutMenuItem"
28816>
28816>                    Procedure OnClick
28819>                        Send RequestLogOut of ghoWebSessionManager
28820>                    End_Procedure
28821>
28821>                    Procedure OnLoad
28824>                        Integer eLoginMode
28824>                        Handle hoLogin
28824>                        Get GetLoginView to hoLogin
28825>                        Get peLoginMode to eLoginMode
28826>                        WebSet pbRender to  (hoLogin and eLoginMode<>lmLoginNone)
28827>                    End_Procedure  // OnLoad
28828>                End_Object  
28829>            End_Object  
28830>    
28830>            Object oViewMenu is a cWebMenuItem
28832>                Set psCaption to "Views"
28833>                
28833>                Object oCustomerMaintenanceMenuItem is a cWebMenuItemLoadView
28835>                    Set psCaption to "Customer Maintenance"
28836>                    Set psLoadViewOnClick to "oCustomer" 
28837>                End_Object
28838>
28838>                Object oOrderEntryMenuItem is a cWebMenuItemLoadView
28840>                    Set psCaption to "Order Entry"
28841>                    Set psLoadViewOnClick to "oOrder"
28842>                End_Object
28843>
28843>                Object oInventoryMaintenanceMenuItem is a cWebMenuItemLoadView
28845>                    Set psCaption to "Inventory Maintenance"
28846>                    Set psLoadViewOnClick to "oInventory"
28847>                End_Object
28848>
28848>                Object oVendorMaintenanceMenuItem is a cWebMenuItemLoadView
28850>                    Set psCaption to "Vendor Maintenance"
28851>                    Set psLoadViewOnClick to "oVendor"
28852>                End_Object
28853>
28853>                Object oSalesPersonMaintenanceMenuItem is a cWebMenuItemLoadView
28855>                    Set psCaption to "Sales Person Maintenance"
28856>                    Set psLoadViewOnClick to "oSalesPerson"
28857>                End_Object
28858>            End_Object
28859>            
28859>            Object oReportMenu is a cWebMenuItem
28861>                Set psCaption to "Reports"
28862>                
28862>                    
28862>                Object oCustomerListMenuItem is a cWebMenuItemLoadView
28864>                    Set psCaption to "Customer List"
28865>                    Set psLoadViewOnClick to "oCustomerListSample"
28866>                End_Object
28867>
28867>                Object oOrderListMenuItem is a cWebMenuItemLoadView
28869>                    Set psCaption to "Order List"
28870>                    Set psLoadViewOnClick to "oOrderListSample"
28871>                End_Object
28872>
28872>                Object oCustomerOrdersMenuItem is a cWebMenuItemLoadView
28874>                    Set psCaption to "Customer Orders"
28875>                    Set psLoadViewOnClick to "oCustomerOrdersSample"
28876>                End_Object  
28877>
28877>                Object oVRW_LiveMenuItem is a cWebMenuItem
28879>                    Set psCaption to "DataFlex Report Writer (Live)"
28880>                    Set pbBeginGroup to True
28881>                    Set psToolTip to "Opens a URL to a DataFlex Report Writer live demonstration."
28882>
28882>                    Procedure OnClick
28885>                        Forward Send OnClick 
28887>                        Send NavigateToPage "http://www.dataaccess.com/livevisualreportwriter" btNewTab
28888>                    End_Procedure
28889>                End_Object
28890>
28890>                Object oDAI_LiveMenuItem is a cWebMenuItem
28892>                    Set psCaption to "Dynamic AI (Live)"
28893>                    Set psToolTip to "Opens a URL to a Dynamic AI live demonstration."
28894>
28894>                    Procedure OnClick
28897>                        Forward Send OnClick
28899>                        Send NavigateToPage "http://www.dataaccess.com/livedynamicai" btNewTab
28900>                    End_Procedure
28901>                End_Object
28902>                
28902>            End_Object
28903>                
28903>            Object oDemoMenu is a cWebMenuItem
28905>                Set psCaption to "Demo"
28906>
28906>                Object oCardsMenuItem is a cWebMenuItemLoadView
28908>                    Set psCaption to "Cards"
28909>                    Set psLoadViewOnClick to "oDemoCards"
28910>                End_Object
28911>
28911>                Object oDemoColumnTypesMenuItem1 is a cWebMenuItemLoadView
28913>                    Set psCaption to "Column Types"
28914>                    Set psLoadViewOnClick to "oDemoColumnTypes"
28915>                End_Object
28916>
28916>                Object oConstrainedGridMenuItem is a cWebMenuItemLoadView
28918>                    Set psCaption to "Constrained Grid"
28919>                    Set psLoadViewOnClick to "oDemoConstrainedGrid"
28920>                End_Object
28921>
28921>                Object oDialogsMenuItem is a cWebMenuItemLoadView
28923>                    Set psCaption to "Dialogs"
28924>                    Set psLoadViewOnClick to "oDemoDialogs"
28925>                End_Object
28926>                
28926>                Object oDemoFileUploadMenuItem is a cWebMenuItemLoadView
28928>                    Set psCaption to "File Upload"
28929>                    Set psLoadViewOnClick to "oDemoFileUpload"
28930>                End_Object
28931>                
28931>                Object oManualDataAwareGridMenuItem is a cWebMenuItemLoadView
28933>                    Set psCaption to "Manual Data Aware Grid"
28934>                    Set psLoadViewOnClick to "oDemoManualDataAwareGrid"
28935>                End_Object
28936>
28936>                Object oManualGridMenuItem is a cWebMenuItemLoadView
28938>                    Set psCaption to "Manual Grid"
28939>                    Set psLoadViewOnClick to "oDemoManualGrid"
28940>                End_Object
28941>
28941>                Object oMultiDDOStructureMenuItem is a cWebMenuItemLoadView
28943>                    Set psCaption to "Multi DDO Structure"
28944>                    Set psLoadViewOnClick to "oDemoMultiDDOStructure"
28945>                End_Object
28946>
28946>                Object oPanelsMenuItem is a cWebMenuItemLoadView
28948>                    Set psCaption to "Panels + Allow Access"
28949>                    Set psLoadViewOnClick to "oDemoPanels"
28950>                End_Object
28951>
28951>                Object oSlidersMenuItem is a cWebMenuItemLoadView
28953>                    Set psCaption to "Sliders"
28954>                    Set psLoadViewOnClick to "oDemoSliders"
28955>                End_Object
28956>
28956>                Object oSubMenuItem is a cWebMenuItem
28958>                    Set psCaption to "Submenu"
28959>
28959>                    Object oSameWindowMenuItem is a cWebMenuItem
28961>                        Set psCaption to "Order.html (Same window)" 
28962>                        Set psImage to "Images/Order.png"
28963>                        
28963>                        Procedure OnClick
28966>                            Send NavigateToPage "Order.html" btCurrentWindow
28967>                        End_Procedure
28968>                    End_Object
28969>                    
28969>                    
28969>                    Object oSameNewTabMenuItem is a cWebMenuItem
28971>                        Set psCaption to "Order.html (New tab)" 
28972>                        Set psImage to "Images/Order.png"
28973>                        
28973>                        Procedure OnClick
28976>                            Send NavigateToPage "Order.html" btNewTab
28977>                        End_Procedure
28978>                    End_Object
28979>                    
28979>                    Object oSameNewWindowMenuItem is a cWebMenuItem
28981>                        Set psCaption to "Order.html (New window)" 
28982>                        Set psImage to "Images/Order.png"
28983>                        
28983>                        Procedure OnClick
28986>                            Send NavigateNewWindow "Order.html" 800 600
28987>                        End_Procedure
28988>                    End_Object
28989>            
28989>                    Object oGoogleSameWindowMenuItem is a cWebMenuItem
28991>                        Set psCaption to "Google.com (Same window)" 
28992>                        
28992>                        Procedure OnClick
28995>                            Send NavigateToPage "http://www.google.com/" btCurrentWindow
28996>                        End_Procedure
28997>                    End_Object
28998>                End_Object
28999>                
28999>                Object oSuggestionFormMenuItem is a cWebMenuItemLoadView
29001>                    Set psCaption to "Suggestion Form"
29002>                    Set psLoadViewOnClick to "oDemoSuggestionForm"
29003>                End_Object
29004>
29004>                Object oTreeViewOnSyncViewMenuItem is a cWebMenuItemLoadView
29006>                    Set psCaption to "TreeView + OnSyncView"
29007>                    Set psLoadViewOnClick to "oDemoTreeView"
29008>                End_Object
29009>
29009>                Object oConfigurationPanelMenuItem1 is a cWebMenuItemLoadView
29011>                    Set psCaption to "TreeView + Cards"
29012>                    Set psLoadViewOnClick to "oDemoTreeViewCards"
29013>                End_Object
29014>
29014>            End_Object              
29015>            
29015>            Object oThemesMenu is a cWebMenuItem
29017>                Set psCaption to "Themes"
29018>
29018>                Object oModernSky is a cWebMenuItem
29020>                    Set psCaption to "Modern Sky"
29021>                    
29021>                    Procedure OnClick 
29024>                        //  Change the theme at runtime
29024>                        WebSet psTheme of oWebApp to "Df_Modern_Sky"
29025>                        
29025>                        //  Update menu
29025>                        Send UpdateSelectedTheme
29026>                    End_Procedure
29027>                End_Object
29028>                                    
29028>                Object oWindowsLike is a cWebMenuItem
29030>                    Set psCaption to "Windows Like"
29031>                    
29031>                    Procedure OnClick 
29034>                        //  Change the theme at runtime
29034>                        WebSet psTheme of oWebApp to "Df_Windows_Like"
29035>                        
29035>                        //  Update menu
29035>                        Send UpdateSelectedTheme
29036>                    End_Procedure
29037>                End_Object
29038>                                                
29038>                Object oHighContrast is a cWebMenuItem
29040>                    Set psCaption to "High Contrast"
29041>                    
29041>                    Procedure OnClick 
29044>                        //  Change the theme at runtime
29044>                        WebSet psTheme of oWebApp to "Df_High_Contrast"
29045>                        
29045>                        //  Update menu
29045>                        Send UpdateSelectedTheme
29046>                    End_Procedure
29047>                End_Object
29048>                
29048>                Object oWebCremeItem is a cWebMenuItem
29050>                    Set psCaption to "Web Creme"
29051>                    Set pbEnabled to False
29052>                    
29052>                    Procedure OnClick
29055>                        //   Change the theme at runtime
29055>                        WebSet psTheme of oWebApp to "Df_Web_DataAccess"
29056>                        
29056>                        //  Update menu
29056>                        Send UpdateSelectedTheme
29057>                    End_Procedure
29058>                End_Object
29059>                
29059>                Object oFlatTouchItem is a cWebMenuItem
29061>                    Set psCaption to "Flat Touch"
29062>                    Set pbEnabled to False
29063>                    
29063>                    Procedure OnClick
29066>                        //   Change the theme at runtime
29066>                        WebSet psTheme of oWebApp to "Df_Flat_Touch"
29067>                        
29067>                        //  Update menu
29067>                        Send UpdateSelectedTheme
29068>                    End_Procedure
29069>                End_Object
29070>                
29070>                Object oFlatDesktopItem is a cWebMenuItem
29072>                    Set psCaption to "Flat Desktop"
29073>                    Set pbEnabled to False
29074>                    
29074>                    Procedure OnClick
29077>                        //   Change the theme at runtime
29077>                        WebSet psTheme of oWebApp to "Df_Flat_Desktop"
29078>                        
29078>                        //  Update menu
29078>                        Send UpdateSelectedTheme
29079>                    End_Procedure
29080>                End_Object
29081>                
29081>                Procedure UpdateSelectedTheme
29084>                    String sTheme
29084>                    
29084>                    //  Determine theme
29084>                    WebGet psTheme of oWebApp to sTheme
29085>
29085>                    //  Set enabled state
29085>                    WebSet pbEnabled of (oModernSky)        to (sTheme <> "Df_Modern_Sky")
29086>                    WebSet pbEnabled of (oWindowsLike)      to (sTheme <> "Df_Windows_Like")
29087>                    WebSet pbEnabled of (oHighContrast)     to (sTheme <> "Df_High_Contrast")
29088>                    WebSet pbEnabled of (oWebCremeItem)     to (sTheme <> "Df_Web_Creme")
29089>                    WebSet pbEnabled of (oFlatTouchItem)    to (sTheme <> "Df_Flat_Touch")
29090>                    WebSet pbEnabled of (oFlatDesktopItem)  to (sTheme <> "Df_Flat_Desktop")
29091>                End_Procedure
29092>                
29092>                Procedure OnLoad
29095>                    Send UpdateSelectedTheme
29096>                End_Procedure
29097>            End_Object
29098>            
29098>            
29098>            Object oRememberItems is a cWebMenuItem
29100>                Set psCaption to C_$Remember
29101>                
29101>                Object oRememberMenuItem is a cWebMenuItem
29103>                    Set psCaption to C_$CaptionRememberField
29104>                    
29104>                    Procedure OnClick
29107>                        Handle hoFocus
29107>                        Get DEOControlFocusObject to hoFocus
29108>                        If hoFocus Begin
29110>                            Send DDFieldRemember of hoFocus
29111>                        End
29111>                    End_Procedure
29112>                End_Object
29113>                
29113>                Object oRememberLastMenuItem is a cWebMenuItem
29115>                    Set psCaption to C_$CaptionRememberFieldLastValue
29116>                    
29116>                    Procedure OnClick
29119>                        Handle hoFocus
29119>                        Get DEOControlFocusObject to hoFocus
29120>                        If hoFocus Begin
29122>                            Send DDFieldRememberLast of hoFocus
29123>                        End
29123>                    End_Procedure
29124>                End_Object
29125>                
29125>                Object oUnRememberMenuItem is a cWebMenuItem
29127>                    Set psCaption to C_$CaptionUnRememberField
29128>                    
29128>                    Procedure OnClick
29131>                        Handle hoFocus
29131>                        Get DEOControlFocusObject to hoFocus
29132>                        If hoFocus Begin
29134>                            Send DDFieldUnRemember of hoFocus
29135>                        End
29135>                    End_Procedure
29136>                End_Object
29137>                
29137>                Object oRememberAllMenuItem is a cWebMenuItem
29139>                    Set psCaption to C_$CaptionClearAllAssignedDefaults
29140>                    
29140>                    Procedure OnClick
29143>                        Handle hoFocus hoDDO
29143>                        Get DEOControlFocusObject to hoFocus
29144>                        If hoFocus Begin
29146>                            Get Server of hoFocus to hoDDO
29147>                            If hoDDO Begin
29149>                                Send ClearAllRememberedDefaults of hoDDO
29150>                            End
29150>                        End
29150>                    End_Procedure
29151>                End_Object
29152>    
29152>            End_Object
29153>            
29153>        End_Object  
29154>        
29154>        Object oFindToolBar is a cWebToolBar
29156>            Object oFirstMenuItem is a cWebMenuFindFirst
29158>            End_Object  
29159>    
29159>            Object oPreviousMenuItem is a cWebMenuFindPrevious
29161>            End_Object  
29162>
29162>            Object oFindMenuItem is a cWebMenuFind
29164>            End_Object  
29165>
29165>            Object oNextMenuItem is a cWebMenuFindNext
29167>            End_Object  
29168>            
29168>            Object oLastMenuItem is a cWebMenuFindLast
29170>            End_Object
29171>                           
29171>            Object oPromptMenuItem is a cWebMenuPrompt
29173>            End_Object 
29174>        End_Object
29175>        
29175>        Object oFileToolBar is a cWebToolBar
29177>             Set pbShowCaption to True
29178>            
29178>            Object oClearMenuItem is a cWebMenuClear
29180>            End_Object              
29181>             
29181>            Object oClearAllMenuItem is a cWebMenuClearAll
29183>            End_Object   
29184>                        
29184>            Object oSaveMenuItem is a cWebMenuSave
29186>            End_Object  
29187>            
29187>            Object oDeleteMenuItem is a cWebMenuDelete
29189>            End_Object 
29190>        End_Object
29191>    End_Object
29192>
29192>
29192>    Use SessionManager.wo
Including file: SessionManager.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\SessionManager.wo)
29192>>>Use cWebSessionManagerStandard.pkg
Including file: cWebSessionManagerStandard.pkg    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cWebSessionManagerStandard.pkg)
29192>>>>>Use cWebSessionManager.pkg
29192>>>>>Use cWebAppSessionDataDictionary.dd
Including file: cWebAppSessionDataDictionary.dd    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cWebAppSessionDataDictionary.dd)
29192>>>>>>>Use DataDict.pkg
29192>>>>>>>
29192>>>>>>>Open WebAppSession
Including file: WebAppSession.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\WebAppSession.fd)
29194>>>>>>>Open WebAppUser
Including file: WebAppUser.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\WebAppUser.fd)
29196>>>>>>>
29196>>>>>>>Class cWebAppSessionDataDictionary is a DataDictionary
29197>>>>>>>    
29197>>>>>>>    Procedure Construct_Object
29199>>>>>>>        Forward Send Construct_Object
29201>>>>>>>        Set Main_File to WebAppSession.File_Number
29202>>>>>>>
29202>>>>>>>        Set Add_Server_File to WebAppUser.File_Number
29203>>>>>>>
29203>>>>>>>        Set ParentNullAllowed WebAppUser.File_Number to True
29204>>>>>>>
29204>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
29205>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
29206>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
29207>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
29208>>>>>>>
29208>>>>>>>        Set Field_Option Field WebAppSession.Active DD_RETAIN to True
29209>>>>>>>        Set Field_Checkbox_Values Field WebAppSession.Active to "Y" "N"
29210>>>>>>>        Set Field_Error Field WebAppSession.Active to 500 "Invalid WebAppSession Active State"
29211>>>>>>>
29211>>>>>>>    End_Procedure
29212>>>>>>>
29212>>>>>>>    Procedure Creating
29214>>>>>>>        DateTime dtCurrentDateTime
29214>>>>>>>        
29214>>>>>>>        Forward Send Creating
29216>>>>>>>        
29216>>>>>>>        //  Init usecounter
29216>>>>>>>        Move 0 to WebAppSession.UseCount
29217>>>>>>>        
29217>>>>>>>        //  Set the creation and access time to the current time
29217>>>>>>>        Move (CurrentDateTime()) to dtCurrentDateTime
29218>>>>>>>    
29218>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.CreateTime
29219>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.LastAccessTime
29220>>>>>>>        
29220>>>>>>>        Move dtCurrentDateTime to WebAppSession.CreateDate
29221>>>>>>>        Move dtCurrentDateTime to WebAppSession.LastAccessDate
29222>>>>>>>    End_Procedure
29223>>>>>>>    
29223>>>>>>>    
29223>>>>>>>    
29223>>>>>>>    //
29223>>>>>>>    //  Converts the given time to an string that can be saved in the database.
29223>>>>>>>    //
29223>>>>>>>    //  Params:
29223>>>>>>>    //      dtTime  Time to convert
29223>>>>>>>    //  Returns:
29223>>>>>>>    //      String with "HH:MM:SS" format
29223>>>>>>>    //
29223>>>>>>>    Function TimeToString DateTime dtTime Returns String
29225>>>>>>>        String sHours sMinutes sSeconds
29225>>>>>>>        
29225>>>>>>>        //  Extract parts
29225>>>>>>>        Move (String(DateGetHour(dtTime))) to sHours
29226>>>>>>>        Move (String(DateGetMinute(dtTime))) to sMinutes
29227>>>>>>>        Move (String(DateGetSecond(dtTime))) to sSeconds
29228>>>>>>>        
29228>>>>>>>        //  Fill out with 0
29228>>>>>>>        If (Length(sHours) = 1) Move ("0" + sHours) to sHours
29231>>>>>>>        If (Length(sMinutes) = 1) Move ("0" + sMinutes) to sMinutes
29234>>>>>>>        If (Length(sSeconds) = 1) Move ("0" + sSeconds) to sSeconds
29237>>>>>>>        
29237>>>>>>>        Function_Return (sHours + ":" + sMinutes + ":" + sSeconds)
29238>>>>>>>    End_Function
29239>>>>>>>    
29239>>>>>>>    //
29239>>>>>>>    //  Sets the time of the datetime variable to the time in the string.
29239>>>>>>>    //
29239>>>>>>>    //  Params:
29239>>>>>>>    //      dtTime  Datetime variable to add time to
29239>>>>>>>    //      sTimeString String with time in the format "HH:MM:SS"
29239>>>>>>>    //  Returns:
29239>>>>>>>    //      dtDateTime with the loaded time
29239>>>>>>>    //
29239>>>>>>>    Function StringToTime DateTime dtTime String sTimeString Returns DateTime
29241>>>>>>>        String sHours sMinutes sSeconds
29241>>>>>>>        
29241>>>>>>>        //  Extract parts
29241>>>>>>>        Move (Mid(sTimeString, 2, 1)) to sHours
29242>>>>>>>        Move (Mid(sTimeString, 2, 4)) to sMinutes
29243>>>>>>>        Move (Mid(sTimeString, 2, 7)) to sSeconds
29244>>>>>>>        
29244>>>>>>>        //  Set to DateTime
29244>>>>>>>        Move (DateSetHour(dtTime, (Integer(sHours)))) to dtTime
29245>>>>>>>        Move (DateSetMinute(dtTime, (Integer(sMinutes)))) to dtTime
29246>>>>>>>        Move (DateSetSecond(dtTime, (Integer(sSeconds)))) to dtTime
29247>>>>>>>        
29247>>>>>>>        Function_Return dtTime
29248>>>>>>>    End_Function
29249>>>>>>>
29249>>>>>>>End_Class
29250>>>>>Use cWebAppUserDataDictionary.dd
Including file: cWebAppUserDataDictionary.dd    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cWebAppUserDataDictionary.dd)
29250>>>>>>>Use DataDict.pkg
29250>>>>>>>Open WebAppUser
29252>>>>>>>Open WebAppSession
29254>>>>>>>
29254>>>>>>>Class cWebAppUserDataDictionary is a DataDictionary
29255>>>>>>>    
29255>>>>>>>    Procedure Construct_Object
29257>>>>>>>        Forward Send Construct_Object
29259>>>>>>>        Set Main_File to WebAppUser.File_Number
29260>>>>>>>
29260>>>>>>>        Set Add_Client_File to WebAppSession.File_Number
29261>>>>>>>
29261>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
29262>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
29263>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
29264>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
29265>>>>>>>    End_Procedure
29266>>>>>>>
29266>>>>>>>End_Class
29267>>>>>
29267>>>>>Class cWebSessionManagerStandard is a cWebSessionManager
29268>>>>>    
29268>>>>>    Procedure Construct_Object
29270>>>>>        Handle hoUserDD hoSessionDD
29270>>>>>        
29270>>>>>        Forward Send Construct_Object
29272>>>>>        
29272>>>>>        Property Handle phoUserDD 0      // Handle to the WebAppUser DDO
29273>>>>>        Property Handle phoSessionDD 0   // Handle to the WebAppSession DDO        
29274>>>>>        
29274>>>>>        Get Create (RefClass(cWebAppUserDataDictionary)) to hoUserDD
29275>>>>>        Get Create (RefClass(cWebAppSessionDataDictionary)) to hoSessionDD
29276>>>>>        Set DDO_Server of hoSessionDD to hoUserDD
29277>>>>>
29277>>>>>        Set phoUserDD to hoUserDD
29278>>>>>        Set phoSessionDD to hoSessionDD
29279>>>>>        Property Boolean pbCreatingNewSession False
29280>>>>>        Property Integer piSessionTimeout 480        
29281>>>>>        Property String psLoginName
29282>>>>>        Property String psUserName ""
29283>>>>>        Property Integer piUserRights 0
29284>>>>>    End_Procedure
29285>>>>>    
29285>>>>>    Function CreateSession String sRemoteAddress Returns String
29287>>>>>        String sSessionKey
29287>>>>>        Integer iErr
29287>>>>>        Boolean bLogWebSession
29287>>>>>        Handle hoSessionDD       
29287>>>>>        Get phoSessionDD to hoSessionDD
29288>>>>>        
29288>>>>>        //  Get session key
29288>>>>>        Forward Get CreateSession sRemoteAddress to sSessionKey
29290>>>>>        
29290>>>>>        Get pbLogWebSession to bLogWebSession
29291>>>>>        If not bLogWebSession Begin
29293>>>>>            Function_Return sSessionKey        
29294>>>>>        End
29294>>>>>>
29294>>>>>
29294>>>>>        //  Store session
29294>>>>>        Send Clear of hoSessionDD
29295>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.SessionKey to sSessionKey
29296>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.RemoteAddress to sRemoteAddress
29297>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "Y"
29298>>>>>        Get Request_Validate of hoSessionDD to iErr
29299>>>>>        If (iErr) Begin
29301>>>>>            // this should not happen. If it does its a programming error
29301>>>>>            Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
29302>>>>>>
29302>>>>>            Function_Return ""
29303>>>>>        End
29303>>>>>>
29303>>>>>        Send Request_Save of hoSessionDD
29304>>>>>       
29304>>>>>        Function_Return sSessionKey        
29305>>>>>    End_Function
29306>>>>>    
29306>>>>>    
29306>>>>>    Function ValidateSession String sSessionKey Returns Boolean
29308>>>>>        DateTime dtLastAccess dtCurrent
29308>>>>>        TimeSpan tsDiff
29308>>>>>        Integer iErr iSessionTimeout iSpanMinutes
29308>>>>>        Boolean bResult bCreatingNewSession
29308>>>>>        Boolean bLogWebSession 
29308>>>>>        Integer eLoginMode
29308>>>>>        String sTime
29308>>>>>        Handle hoSessionDD hoUserDD       
29308>>>>>        
29308>>>>>        Get phoSessionDD to hoSessionDD
29309>>>>>        Get phoUserDD to hoUserDD
29310>>>>>        
29310>>>>>        Get pbLogWebSession to bLogWebSession
29311>>>>>        Get peLoginMode to eLoginMode
29312>>>>>        
29312>>>>>        // for this object, you can only disable logging if login completely is disabled
29312>>>>>        If (not(bLogWebSession) and (eLoginMode<>lmLoginNone)) Begin
29314>>>>>            Error DFERR_PROGRAM C_$WebSessionLoggingMustBeEnabled
29315>>>>>>
29315>>>>>            Function_Return False
29316>>>>>        End
29316>>>>>>
29316>>>>>
29316>>>>>        //  Clear session properties
29316>>>>>        Send UpdateSessionProperties True
29317>>>>>        
29317>>>>>        If not bLogWebSession Begin
29319>>>>>            Forward Get ValidateSession sSessionKey to bResult
29321>>>>>            Function_Return bResult
29322>>>>>        End        
29322>>>>>>
29322>>>>>        
29322>>>>>        Move False to bResult
29323>>>>>        Get piSessionTimeout to iSessionTimeout 
29324>>>>>        
29324>>>>>        //  Check if session exists
29324>>>>>        Send Clear of hoSessionDD
29325>>>>>        Move sSessionKey to WebAppSession.SessionKey
29326>>>>>        Send Find of hoSessionDD EQ Index.1
29327>>>>>            
29327>>>>>        If (Found) Begin
29329>>>>>            //  Calculate timespan between now and last access time
29329>>>>>            Move (CurrentDateTime()) to dtCurrent
29330>>>>>            Move WebAppSession.LastAccessDate to dtLastAccess
29331>>>>>            Get StringToTime of hoSessionDD dtLastAccess WebAppSession.LastAccessTime to dtLastAccess
29332>>>>>            Move (dtCurrent - dtLastAccess) to tsDiff
29333>>>>>            Move (SpanTotalMinutes(tsDiff)) to iSpanMinutes
29334>>>>>            
29334>>>>>            //  Check if session didn't time out
29334>>>>>            If ((iSessionTimeout <= 0 or (iSpanMinutes < iSessionTimeout)) and WebAppSession.Active = "Y") Begin
29336>>>>>                Forward Get ValidateSession sSessionKey to bResult
29338>>>>>                   
29338>>>>>                If (bResult) Begin
29340>>>>>                    //  Update session record
29340>>>>>                    Get TimeToString of hoSessionDD dtCurrent to sTime 
29341>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessDate to dtCurrent
29342>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessTime to sTime
29343>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.UseCount to (WebAppSession.UseCount + 1)
29344>>>>>                    Get Request_Validate of hoSessionDD to iErr
29345>>>>>                    If (iErr) Begin
29347>>>>>                        // this should not happen. If it does its a programming error
29347>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
29348>>>>>>
29348>>>>>                        Function_Return False
29349>>>>>                    End
29349>>>>>>
29349>>>>>                    Send Request_Save of hoSessionDD
29350>>>>>                    
29350>>>>>                    //  Update user properties
29350>>>>>                    Send UpdateSessionProperties False
29351>>>>>                End
29351>>>>>>
29351>>>>>            End
29351>>>>>>
29351>>>>>            Else Begin
29352>>>>>                // Test the Creating New Session Flag to protect against infinite recursion....
29352>>>>>                Get pbCreatingNewSession to bCreatingNewSession
29353>>>>>                
29353>>>>>                If (not(bCreatingNewSession)) Begin
29355>>>>>                    Set pbCreatingNewSession to True                    
29356>>>>>                    Send RecreateSession to ghoWebApp
29357>>>>>                    Error DFERR_WEBAPP_SESSION_TIMEOUT "Your application session has timed out or is inactive, please login again."
29358>>>>>>
29358>>>>>                    Send NavigateRefresh of ghoWebApp          // refresh the WebApp at the client (triggers a login)
29359>>>>>                    Set pbCreatingNewSession to False
29360>>>>>                End
29360>>>>>>
29360>>>>>            End
29360>>>>>>
29360>>>>>        End
29360>>>>>>
29360>>>>>        Else Begin
29361>>>>>            Error DFERR_WEBAPP_BAD_SESSION_KEY "Session key not known (reload page to recreate session)"
29362>>>>>>
29362>>>>>        End
29362>>>>>>
29362>>>>>        
29362>>>>>        Function_Return bResult
29363>>>>>    End_Function
29364>>>>>    
29364>>>>>    Function UserLogin String sLoginName String sPassword Returns Boolean
29366>>>>>        String sSessionKey sUserPassword
29366>>>>>        Handle hoSessionDD hoUserDD
29366>>>>>        Boolean bMatch  
29366>>>>>        
29366>>>>>        Get phoSessionDD to hoSessionDD
29367>>>>>        Get phoUserDD to hoUserDD
29368>>>>>        Integer iErr eLoginMode
29368>>>>>        
29368>>>>>        // Refind session record
29368>>>>>        Get psSessionKey to sSessionKey
29369>>>>>        Send Clear of hoSessionDD
29370>>>>>        Move sSessionKey to WebAppSession.SessionKey
29371>>>>>        Send Find of hoSessionDD EQ Index.1
29372>>>>>        
29372>>>>>        If (Found and WebAppSession.SessionKey = sSessionKey) Begin
29374>>>>>            Get peLoginMode to eLoginMode
29375>>>>>            
29375>>>>>            //  Find the user
29375>>>>>            Move sLoginName to WebAppUser.LoginName
29376>>>>>            Send Find of hoUserDD EQ Index.1
29377>>>>>            
29377>>>>>            // Check username and password
29377>>>>>            If (Found and (Lowercase(sLoginName) = Lowercase(Trim(WebAppUser.LoginName)))) Begin
29379>>>>>                Get Field_Current_Value of hoUserDD Field WebAppUser.Password to sUserPassword
29380>>>>>                Get ComparePasswords (Trim(sUserPassword)) (Trim(sPassword)) to bMatch
29381>>>>>                
29381>>>>>                If (bMatch) Begin
29383>>>>>                    // Store the login
29383>>>>>                    Set Field_Changed_Value of hoUserDD Field WebAppUser.LastLogin to (CurrentDateTime())
29384>>>>>                    Get Request_Validate of hoSessionDD to iErr
29385>>>>>                    If (iErr) Begin
29387>>>>>                        // this should not happen. If it does its a programming error
29387>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
29388>>>>>>
29388>>>>>                        Function_Return False
29389>>>>>                    End
29389>>>>>>
29389>>>>>                    
29389>>>>>                    Send Request_Save of hoSessionDD
29390>>>>>                    
29390>>>>>                    // Update session properties
29390>>>>>                    Send UpdateSessionProperties False
29391>>>>>                    Send NotifyChangeRights
29392>>>>>                    Function_Return True
29393>>>>>                End
29393>>>>>>
29393>>>>>                Else Begin
29394>>>>>                    //  We should rely directly on this buffer elsewhere but just be sure
29394>>>>>                    Send Clear of hoUserDD
29395>>>>>                End
29395>>>>>>
29395>>>>>            End
29395>>>>>>
29395>>>>>        End
29395>>>>>>
29395>>>>>          
29395>>>>>        Function_Return False
29396>>>>>    End_Function
29397>>>>>    
29397>>>>>    Function IsLoggedIn Returns Boolean
29399>>>>>        String sLoginName
29399>>>>>        Boolean bLogWebSession bLoggedIn
29399>>>>>        
29399>>>>>        Get pbLogWebSession to bLogWebSession
29400>>>>>        If not bLogWebSession Begin
29402>>>>>            Forward Get IsLoggedIn to bLoggedIn
29404>>>>>            Function_Return bLoggedIn
29405>>>>>        End
29405>>>>>>
29405>>>>>        
29405>>>>>        Get psLoginName to sLoginName
29406>>>>>        
29406>>>>>        Function_Return (sLoginName <> "")
29407>>>>>    End_Function
29408>>>>>    
29408>>>>>    
29408>>>>>    //
29408>>>>>    // This procedure is called when validating a session and after logging in. Its purpose is to 
29408>>>>>    // update properties based on the session and user data. Augment this function to update 
29408>>>>>    // properties based on the session / user table. Note that WebAppUser and WebAppSession contain
29408>>>>>    // the right records when this procedure is called.
29408>>>>>    //
29408>>>>>    // Params:
29408>>>>>    //      bClear   True if the procedure is called before session validation to clear properties.
29408>>>>>    //
29408>>>>>    Procedure UpdateSessionProperties Boolean bClear
29410>>>>>        Handle hoUserDD
29410>>>>>        
29410>>>>>        Get phoUserDD to hoUserDD
29411>>>>>        
29411>>>>>        //  Update user properties
29411>>>>>        If (not(bClear) and HasRecord(hoUserDD)) Begin
29413>>>>>            Set psUsername to (Trim(WebAppUser.FullName))
29414>>>>>            Set psLoginName to (Trim(WebAppUser.LoginName))
29415>>>>>            Set piUserRights to WebAppUser.Rights
29416>>>>>            
29416>>>>>            Send OnSessionPropertiesSet 
29417>>>>>        End
29417>>>>>>
29417>>>>>        Else Begin
29418>>>>>            Set psUsername to ""
29419>>>>>            Set psLoginName to ""
29420>>>>>            Set piUserRights to 0
29421>>>>>            
29421>>>>>            Send OnSessionPropertiesClear
29422>>>>>        End
29422>>>>>>
29422>>>>>    End_Procedure
29423>>>>>    
29423>>>>>    //
29423>>>>>    // This function is called to perform the password comparison. It gets the entered password and
29423>>>>>    // the password value of the user table as parameters. The WebAppUser buffer will contain the
29423>>>>>    // right record. This function can be augmented to implement security features like storing the
29423>>>>>    // password as a hashed value.
29423>>>>>    //
29423>>>>>    // Params:
29423>>>>>    //      sUserPassword       Value of the WebAppUser.Password field.
29423>>>>>    //      sEnteredPassword    Value entered on the login screen during login.
29423>>>>>    //
29423>>>>>    Function ComparePasswords String sUserPassword String sEnteredPassword Returns Boolean
29425>>>>>        Function_Return (sUserPassword = sEnteredPassword)
29426>>>>>    End_Function
29427>>>>>    
29427>>>>>    Procedure OnSessionPropertiesSet
29429>>>>>        //  Empty event stub
29429>>>>>    End_Procedure
29430>>>>>    
29430>>>>>    Procedure OnSessionPropertiesClear
29432>>>>>        //  Empty event stub
29432>>>>>    End_Procedure
29433>>>>>    
29433>>>>>    Procedure EndSession
29435>>>>>        Integer iErr
29435>>>>>        Boolean bLogWebSession
29435>>>>>        Handle hoSessionDD       
29435>>>>>        
29435>>>>>        Get phoSessionDD to hoSessionDD
29436>>>>>        Get pbLogWebSession to bLogWebSession
29437>>>>>        If not bLogWebSession Begin
29439>>>>>            Forward Send EndSession
29441>>>>>            Procedure_Return
29442>>>>>        End
29442>>>>>>
29442>>>>>            
29442>>>>>        //  Check if session exists
29442>>>>>        Send Clear of hoSessionDD
29443>>>>>        Get psSessionKey to WebAppSession.SessionKey
29444>>>>>        
29444>>>>>        Send Find of hoSessionDD EQ Index.1
29445>>>>>        If (Found) Begin
29447>>>>>            Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "N"
29448>>>>>            Get Request_Validate of hoSessionDD to iErr
29449>>>>>            If (iErr) Begin
29451>>>>>                // this should not happen. If it does its a programming error
29451>>>>>                Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
29452>>>>>>
29452>>>>>                Procedure_Return
29453>>>>>            End
29453>>>>>>
29453>>>>>            Send Request_Save of hoSessionDD
29454>>>>>        End
29454>>>>>>
29454>>>>>    End_Procedure
29455>>>>>
29455>>>>>End_Class
29456>>>>>
29456>>>
29456>>>Object oSessionManager is a cWebSessionManagerStandard
29458>>>End_Object
29459>>>
29459>    Use WebResourceManager.wo
Including file: WebResourceManager.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\WebResourceManager.wo)
29459>>>Use cWebResourceManager.pkg
29459>>>
29459>>>Object oWebResourceManager is a cWebResourceManager
29461>>>End_Object
29462>    Use LoginDialog.wo
Including file: LoginDialog.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\LoginDialog.wo)
29462>>>Use cWebModalDialog.pkg
29462>>>Use cWebForm.pkg
29462>>>Use cWebButton.pkg
29462>>>Use cWebPanel.pkg
29462>>>Use cWebLabel.pkg
29462>>>
29462>>>Object oLoginDialog is a cWebModalDialog
29464>>>    Set piMinWidth to 360
29465>>>    Set piMinHeight to 200
29466>>>    Set psCaption to "Login"
29467>>>    Set pbShowClose to (peLoginMode(oWebApp) <> lmLoginRequired)
29468>>>    Set pbLoginModeEnforced to False
29469>>>    
29469>>>    Delegate Set phoLoginView to Self
29471>>>    
29471>>>    Object oTopPanel is a cWebPanel
29473>>>        Set peRegion to prTop
29474>>>        Set piHeight to 65
29475>>>        
29475>>>        Object oLogoSuperior is a cWebImage
29477>>>            Set psUrl to "CssThemes/Df_Web_DataAccess/logo-02.png"
29478>>>            Set piHeight to 75
29479>>>            Set pePosition to wiFit
29480>>>            Set pbFillHeight to True
29481>>>        End_Object
29482>>>        
29482>>>        Object oDescription is a cWebLabel
29484>>>            Set psCaption to "Login: John Password: John"
29485>>>            Set peAlign to alignCenter
29486>>>        End_Object
29487>>>    End_Object
29488>>>    
29488>>>    //Object oRightPanel is a cWebPanel
29488>>>    //    Set peRegion to prRight
29488>>>    //    Set piWidth to 20
29488>>>    //End_Object
29488>>>    
29488>>>    Object oMainPanel is a cWebPanel
29490>>>        Set peRegion to prCenter
29491>>>        
29491>>>        Object oLoginName is a cWebForm
29493>>>            Set psLabel to "User ID:"
29494>>>            Set piMaxLength to 20
29495>>>            Set psCSSClass to "login-user"
29496>>>            Set pbShowLabel to False
29497>>>        End_Object
29498>>>        
29498>>>        Object oPassword is a cWebForm
29500>>>            Set psLabel to "Password:"
29501>>>            Set pbPassword to True
29502>>>            Set piMaxLength to 20
29503>>>            Set psCSSClass to "login-pass"
29504>>>            Set pbShowLabel to False
29505>>>        End_Object
29506>>>        
29506>>>        Object oLoginButton is a cWebButton
29508>>>            Set pbShowLabel to False
29509>>>            Set psCaption to "Login"
29510>>>            Set pbServerOnClick to True
29511>>>            Set peLabelAlign to alignCenter
29512>>>                        
29512>>>            Procedure OnClick
29515>>>                Send DoLogin
29516>>>            End_Procedure            
29517>>>        End_Object        
29518>>>    End_Object
29519>>>    
29519>>>    Object oButtonPanel is a cWebPanel
29521>>>        Set peRegion to prBottom
29522>>>        Set piColumnCount to 3
29523>>>        
29523>>>        Object oWarning is a cWebLabel
29525>>>            Set pbVisible to False
29526>>>            Set psCaption to "Invalid User ID or password. Hint: 'John' & 'John'."
29527>>>            Set psCSSClass to "Warning"
29528>>>            Set peAlign to alignCenter
29529>>>            Set piColumnSpan to 3
29530>>>        End_Object
29531>>>    End_Object
29532>>>    
29532>>>    Procedure DoLogin
29535>>>        String sLoginName sPassword
29535>>>        Boolean bResult
29535>>>        Handle hoDefaultView
29535>>>        
29535>>>        WebGet psValue of oLoginName to sLoginName
29536>>>        WebGet psValue of oPassword to sPassword
29537>>>        
29537>>>        Get UserLogin of ghoWebSessionManager sLoginName sPassword to bResult
29538>>>        
29538>>>        If (bResult) Begin
29540>>>            Send Hide of oLoginDialog
29541>>>            Get GetDefaultView to hoDefaultView
29542>>>            If (hoDefaultView > 0) Begin
29544>>>                Send Show of hoDefaultView
29545>>>            End
29545>>>>
29545>>>            
29545>>>            // clear the login values. we don't want to return the login id & password as synchronized properties....
29545>>>            WebSet psValue of oLoginName to ""
29546>>>            WebSet psValue of oPassword  to ""
29547>>>            WebSet pbVisible of oWarning to False
29548>>>        End
29548>>>>
29548>>>        Else Begin
29549>>>            WebSet pbVisible of oWarning to True
29550>>>        End
29550>>>>
29550>>>    End_Procedure
29551>>>    
29551>>>    
29551>>>    Set pbServerOnSubmit to True
29552>>>    Procedure OnSubmit
29555>>>         Send DoLogin
29556>>>    End_Procedure
29557>>>End_Object
29558>>>
29558>>>
29558>    
29558>    Use Order.wo
Including file: Order.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\Order.wo)
29558>>>// Order Entry
29558>>>//
29558>>>
29558>>>Use cWebView.pkg
29558>>>Use cWebPanel.pkg
29558>>>Use cWebForm.pkg
29558>>>Use cWebCombo.pkg
29558>>>Use cWebGrid.pkg
29558>>>Use cWebColumn.pkg
29558>>>Use cWebDateForm.pkg
29558>>>
29558>>>Use Vendor.DD
Including file: Vendor.dd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Vendor.dd)
29558>>>>>Use  Windows.pkg           // Basic Definitions
29558>>>>>Use  DataDict.pkg          // DataDictionary Class Definition
29558>>>>>Use  DDvalTbl.pkg          // Validation Table Class Definitions
29558>>>>>
29558>>>>>Open Vendor
Including file: Vendor.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Vendor.fd)
29560>>>>>Open Invt
Including file: Invt.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Invt.fd)
29562>>>>>Open OrdSys
Including file: OrdSys.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\OrdSys.fd)
29564>>>>>
29564>>>>>
29564>>>>>Register_Object Vendor_State_VT
29564>>>>>
29564>>>>>Object Vendor_State_VT  is a CodeValidationTable
29566>>>>>    Set Type_Value        To "STATES"
29567>>>>>End_Object   // Vendor_State_VT
29568>>>>>Register_Object Vendor_sl
29568>>>>>Register_Object oVendorWebLookup
29568>>>>>
29568>>>>>Class Vendor_DataDictionary Is A DataDictionary
29569>>>>>
29569>>>>>    Procedure Construct_Object
29571>>>>>        Forward Send Construct_Object
29573>>>>>
29573>>>>>        Set Main_File To Vendor.File_Number
29574>>>>>        Set Cascade_Delete_State To False
29575>>>>>
29575>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
29576>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
29577>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
29578>>>>>
29578>>>>>        Set Add_Client_File to Invt.File_Number
29579>>>>>
29579>>>>>        Set Add_System_File to Ordsys.File_Number DD_LOCK_ON_NEW_SAVE
29580>>>>>
29580>>>>>        Set Field_Auto_Increment Field Vendor.Id to File_Field Ordsys.Vendor_Number
29581>>>>>
29581>>>>>
29581>>>>>        Set Field_Label_Long Field Vendor.ID To "Vendor ID"
29582>>>>>        Set Field_Label_Short Field Vendor.ID To "Vndr ID"
29583>>>>>        Set Field_Option Field Vendor.ID DD_AUTOFIND to True
29584>>>>>        Set Field_Option Field Vendor.ID DD_NOPUT to True
29585>>>>>        Set Field_Prompt_Object Field Vendor.ID to Vendor_sl
29586>>>>>        Set Key_Field_State Field Vendor.ID To True
29587>>>>>        Set Status_Help Field Vendor.ID To "Vendor Id Number (system assigned)."
29588>>>>>        Set Field_WebPrompt_Object Field Vendor.ID to oVendorWebLookup
29589>>>>>
29589>>>>>        Set Field_Label_Long Field Vendor.Name To "Vendor Name"
29590>>>>>        Set Field_Label_Short Field Vendor.Name To "Name"
29591>>>>>        Set Field_Option Field Vendor.Name DD_REQUIRED to True
29592>>>>>        Set Field_Prompt_Object Field Vendor.Name to Vendor_sl
29593>>>>>        Set Status_Help Field Vendor.Name To "Vendor Name."
29594>>>>>        Set Field_WebPrompt_Object Field Vendor.Name to oVendorWebLookup
29595>>>>>
29595>>>>>        Set Field_Label_Long Field Vendor.Address To "Street Address"
29596>>>>>        Set Field_Label_Short Field Vendor.Address To "Address"
29597>>>>>        Set Status_Help Field Vendor.Address To "Street Address."
29598>>>>>
29598>>>>>        Set Status_Help Field Vendor.City To "City Name."
29599>>>>>
29599>>>>>        Set Field_Class_Name Field Vendor.State To "dbComboForm"
29600>>>>>        Set Field_Label_Long Field Vendor.State To "State"
29601>>>>>        Set Field_Label_Short Field Vendor.State To "St."
29602>>>>>        Set Field_Option Field Vendor.State DD_CAPSLOCK to True
29603>>>>>        Set Field_Value_Table Field Vendor.State to Vendor_State_VT
29604>>>>>        Set Status_Help Field Vendor.State To "Two letter state ID."
29605>>>>>
29605>>>>>        Set Field_Label_Long Field Vendor.Zip To "Zip/Postal Code"
29606>>>>>        Set Field_Label_Short Field Vendor.Zip To "Zip"
29607>>>>>        Set Field_Mask Field Vendor.Zip To "#####-####"
29608>>>>>        Set Field_Mask_Type Field Vendor.Zip To MASK_WINDOW
29609>>>>>        Set Status_Help Field Vendor.Zip To "Zip or Postal Code."
29610>>>>>
29610>>>>>        Set Field_Label_Long Field Vendor.Phone_Number To "Phone Number"
29611>>>>>        Set Field_Label_Short Field Vendor.Phone_Number To "Phone"
29612>>>>>        Set Status_Help Field Vendor.Phone_Number To "Phone Number."
29613>>>>>
29613>>>>>        Set Field_Label_Long Field Vendor.Fax_Number To "Fax Number"
29614>>>>>        Set Field_Label_Short Field Vendor.Fax_Number To "Fax"
29615>>>>>        Set Status_Help Field Vendor.Fax_Number To "Fax Phone Number."
29616>>>>>
29616>>>>>
29616>>>>>    End_Procedure  //  Construct_Object
29617>>>>>
29617>>>>>
29617>>>>>
29617>>>>>    Procedure Field_Defaults
29619>>>>>        Forward Send Field_Defaults
29621>>>>>    End_Procedure    // Field_Defaults
29622>>>>>    
29622>>>>>End_Class    //  Vendor_DataDictionary
29623>>>>>Use VendorWebLookup.wo
Including file: VendorWebLookup.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\VendorWebLookup.wo)
29623>>>>>>>// Vendor Lookup List
29623>>>>>>>//
29623>>>>>>>
29623>>>>>>>Use cWebModalDialog
29623>>>>>>>Use cWebPanel.pkg
29623>>>>>>>Use cWebButton.pkg
29623>>>>>>>Use cWebPromptList.pkg
29623>>>>>>>Use cWebColumn.pkg
29623>>>>>>>
29623>>>>>>>Use Vendor.DD
29623>>>>>>>
29623>>>>>>>Object oVendorWebLookup is a cWebModalDialog
29625>>>>>>>    Set piColumnCount to 8
29626>>>>>>>    Set psCaption to "Vendor Lookup List"
29627>>>>>>>    Set piWidth to 700
29628>>>>>>>    Set piHeight to 400
29629>>>>>>>
29629>>>>>>>    Object oVendor_DD is a Vendor_DataDictionary
29631>>>>>>>    End_Object 
29632>>>>>>>
29632>>>>>>>    Set Main_DD To oVendor_DD
29633>>>>>>>    Set Server  To oVendor_DD
29634>>>>>>>
29634>>>>>>>
29634>>>>>>>    Object oWebMainPanel is a cWebPanel
29636>>>>>>>        Set piColumnCount to 8
29637>>>>>>>
29637>>>>>>>        Object oPromptList is a cWebPromptList
29639>>>>>>>            Set pbFillHeight to True
29640>>>>>>>            Set piColumnSpan to 8
29641>>>>>>>            
29641>>>>>>>            // Since there are only a few records, we set this property so all records are sent to 
29641>>>>>>>            // the client at once. This improves the performance of scrolling and searching and 
29641>>>>>>>            // enables sorting on all columns.
29641>>>>>>>            Set peDbGridType to gtAllData
29642>>>>>>>
29642>>>>>>>            Object oVendorID is a cWebColumn
29644>>>>>>>                Entry_Item Vendor.ID
29645>>>>>>>                Set psCaption to "Vndr ID"
29646>>>>>>>                Set piWidth to 63
29647>>>>>>>            End_Object 
29648>>>>>>>
29648>>>>>>>            Object oVendorName is a cWebColumn
29650>>>>>>>                Entry_Item Vendor.Name
29651>>>>>>>                Set psCaption to "Name"
29652>>>>>>>                Set piWidth to 315
29653>>>>>>>            End_Object 
29654>>>>>>>
29654>>>>>>>            Object oVendorCity is a cWebColumn
29656>>>>>>>                Entry_Item Vendor.City
29657>>>>>>>                Set psCaption to "City"
29658>>>>>>>                Set piWidth to 147
29659>>>>>>>            End_Object 
29660>>>>>>>        End_Object 
29661>>>>>>>
29661>>>>>>>        Object oOkButton is a cWebButton
29663>>>>>>>            Set psCaption to "OK"
29664>>>>>>>            Set piColumnSpan to 1
29665>>>>>>>            Set piColumnIndex to 5
29666>>>>>>>
29666>>>>>>>            Procedure OnClick
29669>>>>>>>                Send Ok of oPromptList
29670>>>>>>>            End_Procedure
29671>>>>>>>
29671>>>>>>>        End_Object 
29672>>>>>>>
29672>>>>>>>        Object oCancelButton is a cWebButton
29674>>>>>>>            Set psCaption to "Cancel"
29675>>>>>>>            Set piColumnSpan to 1
29676>>>>>>>            Set piColumnIndex to 6
29677>>>>>>>            Procedure OnClick
29680>>>>>>>                Send Cancel of oPromptList
29681>>>>>>>            End_Procedure
29682>>>>>>>
29682>>>>>>>        End_Object 
29683>>>>>>>
29683>>>>>>>        Object oSearchButton is a cWebButton
29685>>>>>>>            Set psCaption to "Search..."
29686>>>>>>>            Set piColumnSpan to 1
29687>>>>>>>            Set piColumnIndex to 7
29688>>>>>>>
29688>>>>>>>            Procedure OnClick
29691>>>>>>>                Send Search of oPromptList
29692>>>>>>>            End_Procedure
29693>>>>>>>
29693>>>>>>>        End_Object 
29694>>>>>>>    End_Object 
29695>>>>>>>
29695>>>>>>>    Set pbServerOnShow to True
29696>>>>>>>    Procedure OnShow 
29699>>>>>>>        Send InitializePromptList of oPromptList
29700>>>>>>>    End_Procedure 
29701>>>>>>>
29701>>>>>>>    Set pbServerOnSubmit to True
29702>>>>>>>    Procedure OnSubmit 
29705>>>>>>>        Send Ok of oPromptList
29706>>>>>>>    End_Procedure 
29707>>>>>>>
29707>>>>>>>End_Object 
29708>>>>>
29708>>>Use Invt.DD
Including file: Invt.dd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Invt.dd)
29708>>>>>Use  Windows.pkg           // Basic Definitions
29708>>>>>Use  DataDict.pkg          // DataDictionary Class Definition
29708>>>>>Use  DDvalTbl.pkg          // Validation Table Class Definitions
29708>>>>>
29708>>>>>Open Invt
29710>>>>>Open OrderDtl
Including file: OrderDtl.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\OrderDtl.fd)
29712>>>>>Open Vendor
29714>>>>>
29714>>>>>Register_Object Invt_sl
29714>>>>>Register_Object oInvtWebLookup
29714>>>>>
29714>>>>>Class Invt_DataDictionary Is A DataDictionary
29715>>>>>
29715>>>>>    Procedure Construct_Object
29717>>>>>        Forward Send Construct_Object
29719>>>>>
29719>>>>>        Set Main_File To Invt.File_Number
29720>>>>>        Set Cascade_Delete_State To False
29721>>>>>
29721>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
29722>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
29723>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
29724>>>>>
29724>>>>>        Set Add_Client_File to OrderDtl.File_Number
29725>>>>>
29725>>>>>        Set Add_Server_File to Vendor.File_Number
29726>>>>>
29726>>>>>
29726>>>>>        Set Field_Label_Long Field Invt.Item_ID To "Invt. Item ID"
29727>>>>>        Set Field_Label_Short Field Invt.Item_ID To "Item ID"
29728>>>>>        Set Field_Option Field Invt.Item_ID DD_AUTOFIND to True
29729>>>>>        Set Field_Option Field Invt.Item_ID DD_REQUIRED to True
29730>>>>>        Set Field_Option Field Invt.Item_ID DD_CAPSLOCK to True
29731>>>>>        Set Field_Prompt_Object Field Invt.Item_ID to Invt_sl
29732>>>>>        Set Field_WebPrompt_Object Field Invt.Item_ID to oInvtWebLookup
29733>>>>>        Set Key_Field_State Field Invt.Item_ID to True
29734>>>>>        Set Status_Help Field Invt.Item_ID To "Inventory Item Id - user defined identification"
29735>>>>>
29735>>>>>        Set Field_Label_Long Field Invt.Description To "Invt. Description"
29736>>>>>        Set Field_Label_Short Field Invt.Description To "Description"
29737>>>>>        Set Field_Option Field Invt.Description DD_REQUIRED to True
29738>>>>>        Set Status_Help Field Invt.Description To "Inventory Part Description"
29739>>>>>
29739>>>>>        Set Field_Option Field Invt.Vendor_ID DD_CAPSLOCK to True
29740>>>>>        Set Status_Help Field Invt.Vendor_ID To "Vendor Number"
29741>>>>>
29741>>>>>        Set Field_Option Field Invt.Vendor_Part_ID DD_REQUIRED to True
29742>>>>>        Set Status_Help Field Invt.Vendor_Part_ID To "Vendor ID name for this item"
29743>>>>>
29743>>>>>        Set Field_Mask_Type Field Invt.Unit_Price To MASK_CURRENCY_WINDOW
29744>>>>>        Set Field_Value_Range Field Invt.Unit_Price To 0 999999.99
29745>>>>>        Set Status_Help Field Invt.Unit_Price To "Retail unit price"
29746>>>>>
29746>>>>>        Set Field_Value_Range Field Invt.On_Hand To -999999 999999
29747>>>>>        Set Status_Help Field Invt.On_Hand To "Units currently available"
29748>>>>>
29748>>>>>    End_Procedure  //  Construct_Object
29749>>>>>  
29749>>>>>    Function Validate_Save Returns Integer
29751>>>>>        Integer iRetVal
29751>>>>>    
29751>>>>>        Forward Get Validate_Save to iRetVal
29753>>>>>        
29753>>>>>        If iRetVal Function_Return iRetVal
29756>>>>>    
29756>>>>>        If Invt.On_Hand Lt 0 Begin
29758>>>>>           Send UserError "Insufficient Inventory Stock" ""
29759>>>>>           Function_Return 1
29760>>>>>        End   
29760>>>>>>
29760>>>>>    End_Function  // Validate_Save
29761>>>>>
29761>>>>>
29761>>>>>    Procedure Field_Defaults
29763>>>>>        Forward Send Field_Defaults
29765>>>>>    End_Procedure    // Field_Defaults
29766>>>>>    
29766>>>>>End_Class    //  Invt_DataDictionary
29767>>>>>Use InvtWebLookup.wo
Including file: InvtWebLookup.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\InvtWebLookup.wo)
29767>>>>>>>// Invt Lookup List
29767>>>>>>>//
29767>>>>>>>
29767>>>>>>>Use cWebModalDialog
29767>>>>>>>Use cWebPanel.pkg
29767>>>>>>>Use cWebButton.pkg
29767>>>>>>>Use cWebPromptList.pkg
29767>>>>>>>Use cWebColumn.pkg
29767>>>>>>>
29767>>>>>>>Use Vendor.DD
29767>>>>>>>Use Invt.DD
29767>>>>>>>
29767>>>>>>>Object oInvtWebLookup is a cWebModalDialog
29769>>>>>>>    Set piColumnCount to 7
29770>>>>>>>    Set psCaption to "Invt Lookup List"
29771>>>>>>>    Set piWidth to 700
29772>>>>>>>    Set piHeight to 400
29773>>>>>>>
29773>>>>>>>    Object oVendor_DD is a Vendor_DataDictionary
29775>>>>>>>    End_Object 
29776>>>>>>>
29776>>>>>>>    Object oInvt_DD is a Invt_DataDictionary
29778>>>>>>>        Set DDO_Server To oVendor_DD
29779>>>>>>>    End_Object 
29780>>>>>>>
29780>>>>>>>    Set Main_DD To oInvt_DD
29781>>>>>>>    Set Server  To oInvt_DD
29782>>>>>>>
29782>>>>>>>
29782>>>>>>>    Object oWebMainPanel is a cWebPanel
29784>>>>>>>        Set piColumnCount to 7
29785>>>>>>>
29785>>>>>>>        Object oPromptList is a cWebPromptList
29787>>>>>>>            Set pbFillHeight to True
29788>>>>>>>            Set piColumnSpan to 7
29789>>>>>>>            
29789>>>>>>>            // Since there are only a few records, we set this property so all records are sent to 
29789>>>>>>>            // the client at once. This improves the performance of scrolling and searching and 
29789>>>>>>>            // enables sorting on all columns.
29789>>>>>>>            Set peDbGridType to gtAllData
29790>>>>>>>
29790>>>>>>>            Object oInvtItem_ID is a cWebColumn
29792>>>>>>>                Entry_Item Invt.Item_ID
29793>>>>>>>                Set psCaption to "Item ID"
29794>>>>>>>                Set piWidth to 147
29795>>>>>>>            End_Object 
29796>>>>>>>
29796>>>>>>>            Object oInvtDescription is a cWebColumn
29798>>>>>>>                Entry_Item Invt.Description
29799>>>>>>>                Set psCaption to "Description"
29800>>>>>>>                Set piWidth to 337
29801>>>>>>>            End_Object 
29802>>>>>>>
29802>>>>>>>            Object oInvtUnit_Price is a cWebColumn
29804>>>>>>>                Entry_Item Invt.Unit_Price
29805>>>>>>>                Set psCaption to "Unit Price"
29806>>>>>>>                Set piWidth to 94
29807>>>>>>>            End_Object 
29808>>>>>>>
29808>>>>>>>            Object oInvtOn_Hand is a cWebColumn
29810>>>>>>>                Entry_Item Invt.On_Hand
29811>>>>>>>                Set psCaption to "On Hand"
29812>>>>>>>                Set piWidth to 94
29813>>>>>>>            End_Object 
29814>>>>>>>        End_Object 
29815>>>>>>>
29815>>>>>>>        Object oOkButton is a cWebButton
29817>>>>>>>            Set psCaption to "OK"
29818>>>>>>>            Set piColumnSpan to 1
29819>>>>>>>            Set piColumnIndex to 4
29820>>>>>>>
29820>>>>>>>            Procedure OnClick
29823>>>>>>>                Send Ok of oPromptList
29824>>>>>>>            End_Procedure
29825>>>>>>>
29825>>>>>>>        End_Object 
29826>>>>>>>
29826>>>>>>>        Object oCancelButton is a cWebButton
29828>>>>>>>            Set psCaption to "Cancel"
29829>>>>>>>            Set piColumnSpan to 1
29830>>>>>>>            Set piColumnIndex to 5
29831>>>>>>>            Procedure OnClick
29834>>>>>>>                Send Cancel of oPromptList
29835>>>>>>>            End_Procedure
29836>>>>>>>
29836>>>>>>>        End_Object 
29837>>>>>>>
29837>>>>>>>        Object oSearchButton is a cWebButton
29839>>>>>>>            Set psCaption to "Search..."
29840>>>>>>>            Set piColumnSpan to 1
29841>>>>>>>            Set piColumnIndex to 6
29842>>>>>>>
29842>>>>>>>            Procedure OnClick
29845>>>>>>>                Send Search of oPromptList
29846>>>>>>>            End_Procedure
29847>>>>>>>
29847>>>>>>>        End_Object 
29848>>>>>>>    End_Object 
29849>>>>>>>
29849>>>>>>>    Set pbServerOnShow to True
29850>>>>>>>    Procedure OnShow 
29853>>>>>>>        Send InitializePromptList of oPromptList
29854>>>>>>>    End_Procedure 
29855>>>>>>>
29855>>>>>>>    Set pbServerOnSubmit to True
29856>>>>>>>    Procedure OnSubmit 
29859>>>>>>>        Send Ok of oPromptList
29860>>>>>>>    End_Procedure 
29861>>>>>>>
29861>>>>>>>End_Object 
29862>>>>>
29862>>>>>
29862>>>Use Customer.DD
Including file: Customer.dd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Customer.dd)
29862>>>>>Use Windows.pkg           // Basic Definitions
29862>>>>>Use DataDict.pkg          // DataDictionary Class Definition
29862>>>>>Use DDvalTbl.pkg          // Validation Table Class Definitions
29862>>>>>
29862>>>>>Open Customer
Including file: Customer.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\Customer.fd)
29864>>>>>Open OrderHea
Including file: OrderHea.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\OrderHea.fd)
29866>>>>>Open Ordsys
29868>>>>>
29868>>>>>
29868>>>>>Register_Object Customer_State_VT
29868>>>>>
29868>>>>>Object Customer_State_VT  is a CodeValidationTable
29870>>>>>    Set Type_Value        To "STATES"
29871>>>>>    Set Table_Title       To "States"
29872>>>>>End_Object   // Customer_State_VT
29873>>>>>
29873>>>>>Register_Function ValidateEmail Integer iColumn String sValue Returns Boolean
29873>>>>>
29873>>>>>Register_Object Customer_sl
29873>>>>>Register_Object oCustomerWebLookup
29873>>>>>
29873>>>>>Class Customer_DataDictionary Is A DataDictionary
29874>>>>>
29874>>>>>    Procedure Construct_Object
29876>>>>>        Forward Send Construct_Object
29878>>>>>
29878>>>>>        Set Main_File To Customer.File_Number
29879>>>>>        Set Cascade_Delete_State To False
29880>>>>>
29880>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
29881>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
29882>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
29883>>>>>
29883>>>>>        Set Add_Client_File to OrderHea.File_Number
29884>>>>>
29884>>>>>        Set Add_System_File to Ordsys.File_Number DD_LOCK_ON_NEW_SAVE
29885>>>>>
29885>>>>>        Set Field_Auto_Increment Field Customer.Customer_Number to File_Field Ordsys.Cust_Number
29886>>>>>        Set Field_Label_Long Field Customer.Customer_Number To "Customer Number"
29887>>>>>        Set Field_Label_Short Field Customer.Customer_Number To "Number"
29888>>>>>        Set Field_Option Field Customer.Customer_Number DD_AUTOFIND to True
29889>>>>>        Set Field_Option Field Customer.Customer_Number DD_NOPUT to True
29890>>>>>        Set Field_Prompt_Object Field Customer.Customer_Number to Customer_sl
29891>>>>>        Set Field_WebPrompt_Object Field Customer.Customer_Number to oCustomerWebLookup
29892>>>>>        Set Key_Field_State Field Customer.Customer_Number to True
29893>>>>>        Set Status_Help Field Customer.Customer_Number To "Customer Id Number (system assigned)."
29894>>>>>
29894>>>>>        Set Field_Label_Long Field Customer.Name To "Customer Name"
29895>>>>>        Set Field_Label_Short Field Customer.Name To "Customer Name"
29896>>>>>        Set Field_Option Field Customer.Name DD_REQUIRED to True
29897>>>>>        Set Field_Prompt_Object Field Customer.Name to Customer_sl
29898>>>>>        Set Field_WebPrompt_Object Field Customer.Name to oCustomerWebLookup
29899>>>>>        Set Status_Help Field Customer.Name to "Customer/Company Name."
29900>>>>>
29900>>>>>        Set Field_Label_Long Field Customer.Address To "Street Address"
29901>>>>>        Set Field_Label_Short Field Customer.Address To "Address"
29902>>>>>        Set Status_Help Field Customer.Address To "Street Address."
29903>>>>>
29903>>>>>        Set Status_Help Field Customer.City To "City Name."
29904>>>>>
29904>>>>>        Set Field_Class_Name Field Customer.State To "dbComboForm"
29905>>>>>        Set Field_Label_Long Field Customer.State To "State"
29906>>>>>        Set Field_Label_Short Field Customer.State To "St."
29907>>>>>        Set Field_Option Field Customer.State DD_CAPSLOCK to True
29908>>>>>        Set Field_Value_Table Field Customer.State to Customer_State_VT
29909>>>>>        Set Status_Help Field Customer.State To "Two letter state ID."
29910>>>>>
29910>>>>>        Set Field_Label_Long Field Customer.Zip To "Zip/Postal Code"
29911>>>>>        Set Field_Label_Short Field Customer.Zip To "Zip"
29912>>>>>        Set Field_Mask Field Customer.Zip To "#####-####"
29913>>>>>        Set Field_Mask_Type Field Customer.Zip To MASK_WINDOW
29914>>>>>        Set Status_Help Field Customer.Zip To "Zip or Postal Code."
29915>>>>>
29915>>>>>        Set Field_Label_Long Field Customer.Phone_Number To "Phone Number"
29916>>>>>        Set Field_Label_Short Field Customer.Phone_Number To "Phone"
29917>>>>>        Set Status_Help Field Customer.Phone_Number To "Phone Number."
29918>>>>>
29918>>>>>        Set Field_Label_Long Field Customer.Fax_Number To "Fax Number"
29919>>>>>        Set Field_Label_Short Field Customer.Fax_Number To "Fax"
29920>>>>>        Set Status_Help Field Customer.Fax_Number To "Fax Phone Number."
29921>>>>>
29921>>>>>        Set Field_Label_Long Field Customer.Email_Address To "E-Mail Address"
29922>>>>>        Set Field_Label_Short Field Customer.Email_Address To "E-Mail"
29923>>>>>        Set Status_Help Field Customer.Email_Address To "E-mail Address (internet)."
29924>>>>>        Set Field_Validate_msg Field Customer.EMail_Address to (RefFunc(ValidateEmail))
29925>>>>>        Set Field_Option Field Customer.EMail_Address DD_REQUIRED to True
29926>>>>>
29926>>>>>        Set Field_Class_Name Field Customer.Credit_Limit To "dbSpinForm"
29927>>>>>        Set Field_Mask_Type Field Customer.Credit_Limit To MASK_CURRENCY_WINDOW
29928>>>>>
29928>>>>>        Set Field_Label_Long Field Customer.Purchases To "Total Purchases"
29929>>>>>        Set Field_Label_Short Field Customer.Purchases To "Purchases"
29930>>>>>        Set Field_Mask_Type Field Customer.Purchases To MASK_CURRENCY_WINDOW
29931>>>>>        Set Field_Option Field Customer.Purchases DD_DISPLAYONLY to True
29932>>>>>
29932>>>>>        Set Field_Label_Long Field Customer.Balance To "Balance Due"
29933>>>>>        Set Field_Label_Short Field Customer.Balance To "Balance"
29934>>>>>        Set Field_Mask_Type Field Customer.Balance To MASK_CURRENCY_WINDOW
29935>>>>>        Set Field_Option Field Customer.Balance DD_DISPLAYONLY to True
29936>>>>>
29936>>>>>        Set Status_Help Field Customer.Comments To "Additional Comments and Notes."
29937>>>>>
29937>>>>>        Set Field_Checkbox_Values Field Customer.Status To "Y" "N"
29938>>>>>        Set Field_Label_Long Field Customer.Status To "Active Status"
29939>>>>>        Set Field_Label_Short Field Customer.Status To "Status"
29940>>>>>        Set Status_Help Field Customer.Status To "Active Inactive Status of customer"
29941>>>>>    End_Procedure  //  Construct_Object
29942>>>>>
29942>>>>>    Procedure Field_defaults
29944>>>>>        Forward Send Field_Defaults
29946>>>>>        Set Field_Changed_Value   Field Customer.State To "FL"
29947>>>>>        Set Field_Changed_Value   Field Customer.Credit_Limit To 1000
29948>>>>>        Set Field_Changed_Value   Field Customer.Status To "Y"
29949>>>>>    End_Procedure
29950>>>>>
29950>>>>>    //
29950>>>>>    //  Validates if the field contains a valid email address (it allows empty values too).
29950>>>>>    //
29950>>>>>    Function ValidateEmail Integer iColumn String sValue Returns Boolean
29952>>>>>        Integer iAt iDot
29952>>>>>        Boolean bResult
29952>>>>>        
29952>>>>>        If (Trim(sValue) <> "") Begin
29954>>>>>            Move (Pos("@", sValue)) to iAt
29955>>>>>            Move (RightPos(".", sValue)) to iDot
29956>>>>>            
29956>>>>>            If (not(iAt > 1 and iDot > 0 and iDot > iAt + 1 and iDot < Length(sValue))) Begin
29958>>>>>                Send Data_set_error iColumn DFERR_OPERATOR "Please enter a valid email address"
29959>>>>>                Move True to bResult
29960>>>>>            End
29960>>>>>>
29960>>>>>        End
29960>>>>>>
29960>>>>>        
29960>>>>>        Function_Return bResult
29961>>>>>    End_Function
29962>>>>>
29962>>>>>
29962>>>>>End_Class    //  Customer_DataDictionary
29963>>>>>
29963>>>>>Use CustomerWebLookup.wo
Including file: CustomerWebLookup.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\CustomerWebLookup.wo)
29963>>>>>>>// Customer Lookup List
29963>>>>>>>//
29963>>>>>>>
29963>>>>>>>Use cWebModalDialog
29963>>>>>>>Use cWebPanel.pkg
29963>>>>>>>Use cWebButton.pkg
29963>>>>>>>Use cWebPromptList.pkg
29963>>>>>>>Use cWebColumn.pkg
29963>>>>>>>
29963>>>>>>>Use Customer.DD
29963>>>>>>>
29963>>>>>>>Object oCustomerWebLookup is a cWebModalDialog
29965>>>>>>>    Set piColumnCount to 6
29966>>>>>>>    Set psCaption to "Customer Lookup List"
29967>>>>>>>    Set piWidth to 550
29968>>>>>>>    Set piHeight to 400
29969>>>>>>>
29969>>>>>>>    Object oCustomer_DD is a Customer_DataDictionary
29971>>>>>>>    End_Object 
29972>>>>>>>
29972>>>>>>>    Set Main_DD To oCustomer_DD
29973>>>>>>>    Set Server  To oCustomer_DD
29974>>>>>>>
29974>>>>>>>
29974>>>>>>>    Object oWebMainPanel is a cWebPanel
29976>>>>>>>        Set piColumnCount to 6
29977>>>>>>>
29977>>>>>>>        Object oPromptList is a cWebPromptList
29979>>>>>>>            Set pbFillHeight to True
29980>>>>>>>            Set piColumnSpan to 6
29981>>>>>>>
29981>>>>>>>            Object oCustomerCustomer_Number is a cWebColumn
29983>>>>>>>                Entry_Item Customer.Customer_Number
29984>>>>>>>                Set psCaption to "Number"
29985>>>>>>>                Set piWidth to 100
29986>>>>>>>            End_Object 
29987>>>>>>>
29987>>>>>>>            Object oCustomerName is a cWebColumn
29989>>>>>>>                Entry_Item Customer.Name
29990>>>>>>>                Set psCaption to "Customer Name"
29991>>>>>>>                Set piWidth to 315
29992>>>>>>>            End_Object 
29993>>>>>>>
29993>>>>>>>            Object oCustomerBalance is a cWebColumn
29995>>>>>>>                Entry_Item Customer.Balance
29996>>>>>>>                Set psCaption to "Balance"
29997>>>>>>>                Set piWidth to 110
29998>>>>>>>            End_Object 
29999>>>>>>>        End_Object 
30000>>>>>>>
30000>>>>>>>        Object oOkButton is a cWebButton
30002>>>>>>>            Set psCaption to "OK"
30003>>>>>>>            Set piColumnSpan to 1
30004>>>>>>>            Set piColumnIndex to 3
30005>>>>>>>
30005>>>>>>>            Procedure OnClick
30008>>>>>>>                Send Ok of oPromptList
30009>>>>>>>            End_Procedure
30010>>>>>>>        End_Object 
30011>>>>>>>
30011>>>>>>>        Object oCancelButton is a cWebButton
30013>>>>>>>            Set psCaption to "Cancel"
30014>>>>>>>            Set piColumnSpan to 1
30015>>>>>>>            Set piColumnIndex to 4
30016>>>>>>>            Procedure OnClick
30019>>>>>>>                Send Cancel of oPromptList
30020>>>>>>>            End_Procedure
30021>>>>>>>
30021>>>>>>>        End_Object 
30022>>>>>>>
30022>>>>>>>        Object oSearchButton is a cWebButton
30024>>>>>>>            Set psCaption to "Search..."
30025>>>>>>>            Set piColumnSpan to 1
30026>>>>>>>            Set piColumnIndex to 5
30027>>>>>>>
30027>>>>>>>            Procedure OnClick
30030>>>>>>>                Send Search of oPromptList
30031>>>>>>>            End_Procedure
30032>>>>>>>
30032>>>>>>>        End_Object 
30033>>>>>>>    End_Object 
30034>>>>>>>
30034>>>>>>>    Set pbServerOnShow to True
30035>>>>>>>    Procedure OnShow 
30038>>>>>>>        Send InitializePromptList of oPromptList
30039>>>>>>>    End_Procedure 
30040>>>>>>>
30040>>>>>>>    Set pbServerOnSubmit to True
30041>>>>>>>    Procedure OnSubmit 
30044>>>>>>>        Send Ok of oPromptList
30045>>>>>>>    End_Procedure 
30046>>>>>>>
30046>>>>>>>End_Object 
30047>>>>>
30047>>>Use SalesP.DD
Including file: SalesP.dd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\SalesP.dd)
30047>>>>>Use  Windows.pkg           // Basic Definitions
30047>>>>>Use  DataDict.pkg          // DataDictionary Class Definition
30047>>>>>Use  DDvalTbl.pkg          // Validation Table Class Definitions
30047>>>>>
30047>>>>>Open Salesp
Including file: SalesP.fd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\SalesP.fd)
30049>>>>>Open Orderhea
30051>>>>>
30051>>>>>Register_Object SalesP_sl
30051>>>>>Register_Object oSalesPWebLookup
30051>>>>>
30051>>>>>Class SalesP_DataDictionary Is A DataDictionary
30052>>>>>
30052>>>>>    Procedure Construct_Object
30054>>>>>        Forward Send Construct_Object
30056>>>>>
30056>>>>>        Set Main_File To Salesp.File_Number
30057>>>>>        Set Cascade_Delete_State To FALSE
30058>>>>>
30058>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
30059>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
30060>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
30061>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
30062>>>>>
30062>>>>>        Set Add_Client_File to Orderhea.File_Number
30063>>>>>
30063>>>>>
30063>>>>>        Set Field_Label_Long Field Salesp.Id To "Sales Person ID"
30064>>>>>        Set Field_Label_Short Field Salesp.Id To "ID"
30065>>>>>        Set Field_Option Field Salesp.Id DD_AUTOFIND to True
30066>>>>>        Set Field_Option Field Salesp.Id DD_REQUIRED to True
30067>>>>>        Set Field_Option Field Salesp.Id DD_CAPSLOCK to True
30068>>>>>        Set Field_Prompt_Object Field Salesp.Id to SalesP_sl
30069>>>>>        Set Field_WebPrompt_Object Field SalesP.ID to oSalesPWebLookup
30070>>>>>        Set Key_Field_State Field Salesp.Id To TRUE
30071>>>>>        Set Status_Help Field Salesp.Id To "Sales person ID code - Upper case alpha"
30072>>>>>
30072>>>>>        Set Field_Label_Long Field Salesp.Name To "Sales Person Name"
30073>>>>>        Set Field_Label_Short Field Salesp.Name To "Sales Person Name"
30074>>>>>        Set Field_Prompt_Object Field Salesp.Name to SalesP_sl
30075>>>>>        Set Status_Help Field Salesp.Name To "Sales person name - first and last"
30076>>>>>
30076>>>>>    End_Procedure  //  Construct_Object
30077>>>>>
30077>>>>>
30077>>>>>    Procedure Field_Defaults
30079>>>>>        Forward Send Field_Defaults
30081>>>>>    End_Procedure    // Field_Defaults
30082>>>>>    
30082>>>>>End_Class    //  Salesp_DataDictionary
30083>>>>>Use SalesPWebLookup.wo
Including file: SalesPWebLookup.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\SalesPWebLookup.wo)
30083>>>>>>>// Sales Person Lookup List
30083>>>>>>>//
30083>>>>>>>
30083>>>>>>>Use cWebModalDialog
30083>>>>>>>Use cWebPanel.pkg
30083>>>>>>>Use cWebButton.pkg
30083>>>>>>>Use cWebPromptList.pkg
30083>>>>>>>Use cWebColumn.pkg
30083>>>>>>>
30083>>>>>>>Use SalesP.DD
30083>>>>>>>
30083>>>>>>>Object oSalesPWebLookup is a cWebModalDialog
30085>>>>>>>    Set piColumnCount to 5
30086>>>>>>>    Set psCaption to "Sales Person Lookup List"
30087>>>>>>>    Set piWidth to 450
30088>>>>>>>    Set piHeight to 400
30089>>>>>>>
30089>>>>>>>    Object oSalesP_DD is a SalesP_DataDictionary
30091>>>>>>>    End_Object 
30092>>>>>>>
30092>>>>>>>    Set Main_DD To oSalesP_DD
30093>>>>>>>    Set Server  To oSalesP_DD
30094>>>>>>>
30094>>>>>>>
30094>>>>>>>    Object oWebMainPanel is a cWebPanel
30096>>>>>>>        Set piColumnCount to 5
30097>>>>>>>
30097>>>>>>>        Object oPromptList is a cWebPromptList
30099>>>>>>>            Set pbFillHeight to True
30100>>>>>>>            Set piColumnSpan to 5
30101>>>>>>>            
30101>>>>>>>            // Since there are only a few records, we set this property so all records are sent to 
30101>>>>>>>            // the client at once. This improves the performance of scrolling and searching and 
30101>>>>>>>            // enables sorting on all columns.
30101>>>>>>>            Set peDbGridType to gtAllData
30102>>>>>>>
30102>>>>>>>            Object oSalesPID is a cWebColumn
30104>>>>>>>                Entry_Item SalesP.ID
30105>>>>>>>                Set psCaption to "ID"
30106>>>>>>>                Set piWidth to 70
30107>>>>>>>            End_Object 
30108>>>>>>>
30108>>>>>>>            Object oSalesPName is a cWebColumn
30110>>>>>>>                Entry_Item SalesP.Name
30111>>>>>>>                Set psCaption to "Sales Person Name"
30112>>>>>>>                Set piWidth to 262
30113>>>>>>>            End_Object 
30114>>>>>>>        End_Object 
30115>>>>>>>
30115>>>>>>>        Object oOkButton is a cWebButton
30117>>>>>>>            Set psCaption to "OK"
30118>>>>>>>            Set piColumnSpan to 1
30119>>>>>>>            Set piColumnIndex to 2
30120>>>>>>>
30120>>>>>>>            Procedure OnClick
30123>>>>>>>                Send Ok of oPromptList
30124>>>>>>>            End_Procedure
30125>>>>>>>
30125>>>>>>>        End_Object 
30126>>>>>>>
30126>>>>>>>        Object oCancelButton is a cWebButton
30128>>>>>>>            Set psCaption to "Cancel"
30129>>>>>>>            Set piColumnSpan to 1
30130>>>>>>>            Set piColumnIndex to 3
30131>>>>>>>            Procedure OnClick
30134>>>>>>>                Send Cancel of oPromptList
30135>>>>>>>            End_Procedure
30136>>>>>>>
30136>>>>>>>        End_Object 
30137>>>>>>>
30137>>>>>>>        Object oSearchButton is a cWebButton
30139>>>>>>>            Set psCaption to "Search..."
30140>>>>>>>            Set piColumnSpan to 1
30141>>>>>>>            Set piColumnIndex to 4
30142>>>>>>>
30142>>>>>>>            Procedure OnClick
30145>>>>>>>                Send Search of oPromptList
30146>>>>>>>            End_Procedure
30147>>>>>>>
30147>>>>>>>        End_Object 
30148>>>>>>>    End_Object 
30149>>>>>>>
30149>>>>>>>    Set pbServerOnShow to True
30150>>>>>>>    Procedure OnShow 
30153>>>>>>>        Send InitializePromptList of oPromptList
30154>>>>>>>    End_Procedure 
30155>>>>>>>
30155>>>>>>>    Set pbServerOnSubmit to True
30156>>>>>>>    Procedure OnSubmit 
30159>>>>>>>        Send Ok of oPromptList
30160>>>>>>>    End_Procedure 
30161>>>>>>>
30161>>>>>>>End_Object 
30162>>>>>
30162>>>>>
30162>>>Use OrderHea.DD
Including file: OrderHea.dd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\OrderHea.dd)
30162>>>>>Use  Windows.pkg           // Basic Definitions
30162>>>>>Use  DataDict.pkg          // DataDictionary Class Definition
30162>>>>>Use  DDvalTbl.pkg          // Validation Table Class Definitions
30162>>>>>
30162>>>>>Open OrderHea
30164>>>>>Open OrderDtl
30166>>>>>Open Customer
30168>>>>>Open SalesP
30170>>>>>Open OrdSys
30172>>>>>
30172>>>>>
30172>>>>>Register_Object Terms_table
30172>>>>>Register_Object Ship_Table
30172>>>>>
30172>>>>>Object Terms_table  is a DescriptionValidationTable
30174>>>>>
30174>>>>>    Procedure Fill_List
30177>>>>>        Forward Send Fill_List
30179>>>>>        Send Add_Table_Value  "NONE"  "None established"
30180>>>>>        Send Add_Table_Value  "COD"  "COD"
30181>>>>>        Send Add_Table_Value  "NET30"  "Net 30"
30182>>>>>        Send Add_Table_Value  "NET60"  "Net 60"
30183>>>>>        Send Add_Table_Value  "NET90"  "Net 90"
30184>>>>>        Send Add_Table_Value  "PREPAY"  "Pre-payment required"
30185>>>>>    End_Procedure    // Fill_List
30186>>>>>End_Object   // Terms_table
30187>>>>>
30187>>>>>Object Ship_Table  is a CodeValidationTable
30189>>>>>    Set Type_Value        To "SHIPPING"
30190>>>>>    Set Allow_Blank_State To True
30191>>>>>End_Object   // Ship_Table
30192>>>>>
30192>>>>>Register_Object OrderHea_sl
30192>>>>>Register_Object oOrderWebLookup
30192>>>>>
30192>>>>>Class OrderHea_DataDictionary is a DataDictionary
30193>>>>>
30193>>>>>    Procedure Construct_Object
30195>>>>>        Forward Send Construct_Object
30197>>>>>
30197>>>>>        Set Main_File To OrderHea.File_Number
30198>>>>>
30198>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
30199>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
30200>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
30201>>>>>
30201>>>>>        Set Add_Client_File to OrderDtl.File_Number
30202>>>>>
30202>>>>>        Set Add_Server_File to Customer.File_Number
30203>>>>>        Set Add_Server_File to SalesP.File_Number
30204>>>>>
30204>>>>>        Set ParentNoSwitchIfCommitted Customer.File_Number to True
30205>>>>>
30205>>>>>        Set Add_System_File to OrdSys.File_Number DD_LOCK_ON_NEW_SAVE_DELETE
30206>>>>>
30206>>>>>        Set Field_Auto_Increment Field OrderHea.Order_Number to File_Field OrdSys.Order_Number
30207>>>>>
30207>>>>>
30207>>>>>        Set Field_Option Field OrderHea.Order_Number DD_AUTOFIND to True
30208>>>>>        Set Field_Prompt_Object Field OrderHea.Order_Number to OrderHea_SL
30209>>>>>        Set Field_WebPrompt_Object Field OrderHea.Order_Number to oOrderWebLookup
30210>>>>>        
30210>>>>>        Set Key_Field_State Field OrderHea.Order_Number to True
30211>>>>>        Set Status_Help Field OrderHea.Order_Number To "Order Number - New orders are assigned numbers automatically"
30212>>>>>
30212>>>>>
30212>>>>>        Set Field_Class_Name Field OrderHea.Order_Date To "dbSpinForm"
30213>>>>>        Set Field_Entry_msg Field OrderHea.Order_Date To Entry_Order_Date
30214>>>>>        Set Field_Mask_Type Field OrderHea.Order_Date To MASK_DATE_WINDOW
30215>>>>>        Set Field_Prompt_Object Field OrderHea.Order_Date to OrderHea_SL
30216>>>>>        Set Field_WebPrompt_Object Field OrderHea.Order_Date to oOrderWebLookup
30217>>>>>
30217>>>>>        Set Status_Help Field OrderHea.Order_Date to "Date on which the order was placed"
30218>>>>>
30218>>>>>        Set Field_Class_Name Field OrderHea.Terms To "dbComboForm"
30219>>>>>        Set Field_Value_Table Field OrderHea.Terms to Terms_table
30220>>>>>        Set Status_Help Field OrderHea.Terms To "Payment terms"
30221>>>>>
30221>>>>>        Set Field_Class_Name Field OrderHea.Ship_Via To "dbComboForm"
30222>>>>>        Set Field_Value_Table Field OrderHea.Ship_Via to Ship_Table
30223>>>>>        Set Status_Help Field OrderHea.Ship_Via To "Shipping method"
30224>>>>>
30224>>>>>        Set Status_Help Field OrderHea.Ordered_By To "Order placed by"
30225>>>>>        Set Field_Option Field OrderHea.Ordered_By DD_COMMIT to True
30226>>>>>
30226>>>>>        Set Field_Label_Long Field OrderHea.Salesperson_ID To "Sales Person ID"
30227>>>>>        Set Field_Label_Short Field OrderHea.Salesperson_ID To "Sales ID"
30228>>>>>        Set Status_Help Field OrderHea.Salesperson_ID To "Sales Person who initiated the order"
30229>>>>>
30229>>>>>        Set Field_Mask_Type Field OrderHea.Order_Total To MASK_CURRENCY_WINDOW
30230>>>>>        Set Field_Option Field OrderHea.Order_Total DD_DISPLAYONLY to True
30231>>>>>
30231>>>>>
30231>>>>>    End_Procedure  // Construct_Object
30232>>>>>
30232>>>>>    Procedure Field_Defaults
30234>>>>>        Forward Send Field_Defaults
30236>>>>>    End_Procedure
30237>>>>>
30237>>>>>    // Add a default date if the field is blank
30237>>>>>    Procedure Entry_Order_Date Integer iField Date dDate
30239>>>>>         Integer iChanged
30239>>>>>         
30239>>>>>         Get Field_Changed_State iField To iChanged
30240>>>>>         If (iChanged=0 And dDate=0) Begin
30242>>>>>            SysDate dDate
30243>>>>>            Set Field_Default_Value iField To dDate
30244>>>>>         End
30244>>>>>>
30244>>>>>    End_Procedure
30245>>>>>
30245>>>>>    Procedure Update
30247>>>>>        Forward Send Update
30249>>>>>        Send Adjust_Balances OrderHea.Order_Total
30250>>>>>    End_Procedure
30251>>>>>
30251>>>>>    Procedure Backout
30253>>>>>        Forward Send Backout
30255>>>>>        Send Adjust_Balances (-OrderHea.Order_Total)
30256>>>>>    End_Procedure
30257>>>>>
30257>>>>>    Procedure Adjust_Balances Number Amt
30259>>>>>        Add Amt To Customer.Purchases
30260>>>>>        Add Amt To Customer.Balance
30261>>>>>    End_Procedure
30262>>>>>
30262>>>>>    Procedure Deleting
30264>>>>>        Forward Send Deleting
30266>>>>>        // see if we can decrement the order number in sys table...
30266>>>>>        // can only do this if this is the newest order.
30266>>>>>        If (OrderHea.Order_Number=OrdSys.Order_Number) Begin // if this is
30268>>>>>           Decrement OrdSys.Order_Number          // the last number,
30269>>>>>           Saverecord OrdSys                      // decrement and save.
30270>>>>>        End
30270>>>>>>
30270>>>>>    End_Procedure
30271>>>>>
30271>>>>>End_Class    //  OrderHea_DataDictionary
30272>>>>>Use OrderWebLookup.wo
Including file: OrderWebLookup.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\OrderWebLookup.wo)
30272>>>>>>>// Order Lookup List
30272>>>>>>>//
30272>>>>>>>
30272>>>>>>>Use cWebModalDialog
30272>>>>>>>Use cWebPanel.pkg
30272>>>>>>>Use cWebButton.pkg
30272>>>>>>>Use cWebPromptList.pkg
30272>>>>>>>Use cWebColumn.pkg
30272>>>>>>>
30272>>>>>>>Use Customer.DD
30272>>>>>>>Use SalesP.DD
30272>>>>>>>Use OrderHea.DD
30272>>>>>>>
30272>>>>>>>Object oOrderWebLookup is a cWebModalDialog
30274>>>>>>>    Set piColumnCount to 8
30275>>>>>>>    Set psCaption to "Order Lookup List"
30276>>>>>>>    Set piWidth to 700
30277>>>>>>>    Set piHeight to 400
30278>>>>>>>
30278>>>>>>>    Object oCustomer_DD is a Customer_DataDictionary
30280>>>>>>>    End_Object 
30281>>>>>>>
30281>>>>>>>    Object oSalesP_DD is a SalesP_DataDictionary
30283>>>>>>>    End_Object 
30284>>>>>>>
30284>>>>>>>    Object oOrderHea_DD is a OrderHea_DataDictionary
30286>>>>>>>        Set DDO_Server To oCustomer_DD
30287>>>>>>>        Set DDO_Server To oSalesP_DD
30288>>>>>>>    End_Object 
30289>>>>>>>
30289>>>>>>>    Set Main_DD To oOrderHea_DD
30290>>>>>>>    Set Server  To oOrderHea_DD
30291>>>>>>>
30291>>>>>>>
30291>>>>>>>    Object oWebMainPanel is a cWebPanel
30293>>>>>>>        Set piColumnCount to 8
30294>>>>>>>
30294>>>>>>>        Object oPromptList is a cWebPromptList
30296>>>>>>>            Set pbFillHeight to True
30297>>>>>>>            Set piColumnSpan to 8
30298>>>>>>>
30298>>>>>>>            Object oOrderHeaOrder_Number is a cWebColumn
30300>>>>>>>                Entry_Item OrderHea.Order_Number
30301>>>>>>>                Set psCaption to "Order Num"
30302>>>>>>>                Set piWidth to 115
30303>>>>>>>            End_Object 
30304>>>>>>>
30304>>>>>>>            Object oCustomerName is a cWebColumn
30306>>>>>>>                Entry_Item Customer.Name
30307>>>>>>>                Set psCaption to "Customer"
30308>>>>>>>                Set piWidth to 315
30309>>>>>>>            End_Object 
30310>>>>>>>
30310>>>>>>>            Object oSalesPName is a cWebColumn
30312>>>>>>>                Entry_Item SalesP.Name
30313>>>>>>>                Set psCaption to "Sales Person"
30314>>>>>>>                Set piWidth to 262
30315>>>>>>>            End_Object 
30316>>>>>>>
30316>>>>>>>            Object oOrderHeaOrder_Total is a cWebColumn
30318>>>>>>>                Entry_Item OrderHea.Order_Total
30319>>>>>>>                Set psCaption to "Price"
30320>>>>>>>                Set piWidth to 115
30321>>>>>>>            End_Object 
30322>>>>>>>        End_Object 
30323>>>>>>>
30323>>>>>>>        Object oOkButton is a cWebButton
30325>>>>>>>            Set psCaption to "OK"
30326>>>>>>>            Set piColumnSpan to 1
30327>>>>>>>            Set piColumnIndex to 5
30328>>>>>>>
30328>>>>>>>            Procedure OnClick
30331>>>>>>>                Send Ok of oPromptList
30332>>>>>>>            End_Procedure
30333>>>>>>>
30333>>>>>>>        End_Object 
30334>>>>>>>
30334>>>>>>>        Object oCancelButton is a cWebButton
30336>>>>>>>            Set psCaption to "Cancel"
30337>>>>>>>            Set piColumnSpan to 1
30338>>>>>>>            Set piColumnIndex to 6
30339>>>>>>>            Procedure OnClick
30342>>>>>>>                Send Cancel of oPromptList
30343>>>>>>>            End_Procedure
30344>>>>>>>
30344>>>>>>>        End_Object 
30345>>>>>>>
30345>>>>>>>        Object oSearchButton is a cWebButton
30347>>>>>>>            Set psCaption to "Search..."
30348>>>>>>>            Set piColumnSpan to 1
30349>>>>>>>            Set piColumnIndex to 7
30350>>>>>>>
30350>>>>>>>            Procedure OnClick
30353>>>>>>>                Send Search of oPromptList
30354>>>>>>>            End_Procedure
30355>>>>>>>
30355>>>>>>>        End_Object 
30356>>>>>>>    End_Object 
30357>>>>>>>
30357>>>>>>>    Set pbServerOnShow to True
30358>>>>>>>    Procedure OnShow 
30361>>>>>>>        Send InitializePromptList of oPromptList
30362>>>>>>>    End_Procedure 
30363>>>>>>>
30363>>>>>>>    Set pbServerOnSubmit to True
30364>>>>>>>    Procedure OnSubmit 
30367>>>>>>>        Send Ok of oPromptList
30368>>>>>>>    End_Procedure 
30369>>>>>>>
30369>>>>>>>End_Object 
30370>>>>>
30370>>>>>
30370>>>Use OrderDtl.DD
Including file: OrderDtl.dd    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\DDSrc\OrderDtl.dd)
30370>>>>>Use  Windows.pkg           // Basic Definitions
30370>>>>>Use  DataDict.pkg          // DataDictionary Class Definition
30370>>>>>Use  DDvalTbl.pkg          // Validation Table Class Definitions
30370>>>>>
30370>>>>>Open OrderDtl
30372>>>>>Open OrderHea
30374>>>>>Open Invt
30376>>>>>
30376>>>>>
30376>>>>>Class OrderDtl_DataDictionary Is A DataDictionary
30377>>>>>
30377>>>>>    Procedure Construct_Object
30379>>>>>        Forward Send Construct_Object
30381>>>>>
30381>>>>>        Set Main_File To OrderDtl.File_Number
30382>>>>>        Set Cascade_Delete_State To False
30383>>>>>
30383>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
30384>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
30385>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
30386>>>>>
30386>>>>>        Set Add_Server_File to OrderHea.File_Number
30387>>>>>        Set Add_Server_File to Invt.File_Number
30388>>>>>
30388>>>>>        Set Field_Auto_Increment Field OrderDtl.Detail_Number to File_Field OrderHea.Last_Detail_Num
30389>>>>>
30389>>>>>
30389>>>>>        Set Field_Option Field OrderDtl.Order_Number DD_NOPUT to True
30390>>>>>
30390>>>>>        Set Field_Option Field OrderDtl.Detail_Number DD_NOPUT to True
30391>>>>>
30391>>>>>
30391>>>>>        Set Field_Exit_msg Field OrderDtl.Qty_Ordered To Adjust_Display_Total
30392>>>>>        Set Field_Label_Long Field OrderDtl.Qty_Ordered To "Quantity Ordered"
30393>>>>>        Set Field_Label_Short Field OrderDtl.Qty_Ordered To "Quantity"
30394>>>>>        Set Field_Mask_Type Field OrderDtl.Qty_Ordered to Mask_Numeric_Window
30395>>>>>        Set Status_Help Field OrderDtl.Qty_Ordered To "Number of items ordered"
30396>>>>>
30396>>>>>        Set Field_Entry_msg Field OrderDtl.Price To Entering_Price
30397>>>>>        Set Field_Exit_msg Field OrderDtl.Price To Adjust_Display_Total
30398>>>>>        Set Field_Label_Long Field OrderDtl.Price To "Price per Unit"
30399>>>>>        Set Field_Label_Short Field OrderDtl.Price To "Price"
30400>>>>>        Set Field_Mask_Type Field OrderDtl.Price To MASK_CURRENCY_WINDOW
30401>>>>>        Set Status_Help Field OrderDtl.Price To "Price per Unit"
30402>>>>>
30402>>>>>        Set Field_Label_Long Field OrderDtl.Extended_Price To "Extended Price"
30403>>>>>        Set Field_Label_Short Field OrderDtl.Extended_Price To "Total"
30404>>>>>        Set Field_Mask_Type Field OrderDtl.Extended_Price To MASK_CURRENCY_WINDOW
30405>>>>>        Set Field_Option Field OrderDtl.Extended_Price DD_DISPLAYONLY to True
30406>>>>>        Set Status_Help Field OrderDtl.Extended_Price To "Total extended price"
30407>>>>>
30407>>>>>    End_Procedure  //  Construct_Object
30408>>>>>
30408>>>>>    // Update and Backout need to adjust the Invt.On_Hand quantity,
30408>>>>>    // the OrderDtl line's extended price and the OrderHea total.
30408>>>>>    // We will call the same procedure (Adjust_Balances) to insure that
30408>>>>>    // Backout and Update are inverses of each other.
30408>>>>>    // Note that Backout does not need to change the extended_price.
30408>>>>>    // This only gets changed as part of update.
30408>>>>>    Procedure Update
30410>>>>>        Forward Send Update
30412>>>>>        Move (OrderDtl.Price * OrderDtl.Qty_Ordered) To OrderDtl.Extended_Price
30413>>>>>        Send Adjust_Balances OrderDtl.Qty_Ordered OrderDtl.Extended_Price
30414>>>>>    End_Procedure
30415>>>>>    
30415>>>>>    Procedure Backout
30417>>>>>        Forward Send Backout
30419>>>>>        Send Adjust_Balances (-OrderDtl.Qty_Ordered) (-OrderDtl.Extended_Price)
30420>>>>>    End_Procedure
30421>>>>>
30421>>>>>    // Called by Backout and Update, passing the quantity and the extended price. 
30421>>>>>    // Subtract quantity from on-hand Invt and add extended Amt to order total.
30421>>>>>    Procedure Adjust_Balances Number Qty Number Amt
30423>>>>>        Subtract Qty From Invt.On_Hand
30424>>>>>        Add      Amt To   OrderHea.Order_Total
30425>>>>>    End_Procedure
30426>>>>>
30426>>>>>    // When entering the price field, we may wish to update the
30426>>>>>    // current field value with the standard unit price from the Invt table.
30426>>>>>    // Only do this if the current amount is zero and an item was actually picked.
30426>>>>>    // If non-zero or no item picked, we assume the field is being edited (and we make no assumptions).
30426>>>>>    Procedure Entering_Price Integer Field# Number nAmnt
30428>>>>>        Handle hoInvtDD
30428>>>>>        Boolean bHasRecord
30428>>>>>
30428>>>>>        Get Data_Set Invt.File_Number to hoInvtDD
30429>>>>>
30429>>>>>        If (hoInvtDD) Begin
30431>>>>>            Get HasRecord of hoInvtDD to bHasRecord
30432>>>>>        
30432>>>>>            If (nAmnt=0 and bHasRecord) Begin
30434>>>>>               Get File_Field_Current_Value File_Field Invt.Unit_Price to nAmnt
30435>>>>>               Set Field_Changed_Value Field# to nAmnt
30436>>>>>               Send Adjust_Display_Total
30437>>>>>            End
30437>>>>>>
30437>>>>>        End
30437>>>>>>
30437>>>>>    End_Procedure
30438>>>>>
30438>>>>>    // This updates the extended price field, which will update any display balances.
30438>>>>>    // This is only done for display purposes.
30438>>>>>    // The actual amount is updated to the field during the save.
30438>>>>>    Procedure Adjust_Display_total Integer iField String sValue
30440>>>>>        Integer iQty
30440>>>>>        Number  nAmnt
30440>>>>>        
30440>>>>>        Get Field_Current_Value Field OrderDtl.Qty_Ordered    To iQty
30441>>>>>        Get Field_Current_Value Field OrderDtl.Price          To nAmnt
30442>>>>>        Set Field_Current_Value Field OrderDtl.Extended_Price To (nAmnt * iQty)
30443>>>>>        // note: we set value, but not changed_state!
30443>>>>>    End_Procedure
30444>>>>>
30444>>>>>
30444>>>>>    Procedure Field_Defaults
30446>>>>>        Forward Send Field_Defaults
30448>>>>>        Set Field_Changed_Value Field OrderDtl.Qty_Ordered to 1
30449>>>>>    End_Procedure    // Field_Defaults
30450>>>>>    
30450>>>>>End_Class    //  OrderDtl_DataDictionary
30451>>>>>
30451>>>Use cWebParentCombo.pkg
30451>>>
30451>>>Object oOrder is a cWebView
30453>>>    Set piColumnCount to 10
30454>>>    Set psCaption to "Order Entry"
30455>>>    Set piWidth to 800
30456>>>    
30456>>>    Delegate Set phoDefaultView to Self      // Automatically load this view when starting the webapp
30458>>>
30458>>>    Object oVendor_DD is a Vendor_DataDictionary
30460>>>    End_Object 
30461>>>
30461>>>    Object oInvt_DD is a Invt_DataDictionary
30463>>>        Set DDO_Server To oVendor_DD
30464>>>        
30464>>>        Procedure OnPostFind Integer eMessage Boolean bFound
30467>>>            Boolean bSynching
30467>>>
30467>>>            // Each time an inventory item is selected, we use the unit price as the
30467>>>            // suggested price for the line item.
30467>>>            
30467>>>            Get AppSynching to bSynching
30468>>>            // Do not perform this action while synchronizing DDOs to the WebApp Client
30468>>>            If (not(bSynching)) Begin
30470>>>                Send SetPriceDefault of oOrderDtl_DD Invt.Unit_Price
30471>>>            End
30471>>>>
30471>>>        End_Procedure
30472>>>    End_Object 
30473>>>
30473>>>    Object oCustomer_DD is a Customer_DataDictionary
30475>>>    End_Object 
30476>>>
30476>>>    Object oSalesP_DD is a SalesP_DataDictionary
30478>>>    End_Object 
30479>>>
30479>>>    Object oOrderHea_DD is a OrderHea_DataDictionary
30481>>>        Set DDO_Server To oCustomer_DD
30482>>>        Set DDO_Server To oSalesP_DD
30483>>>        // this lets you save a new parent DD record from within child DD
30483>>>        Set Allow_Foreign_New_Save_State to True
30484>>>    End_Object 
30485>>>
30485>>>    Object oOrderDtl_DD is a OrderDtl_DataDictionary
30487>>>        Set DDO_Server To oOrderHea_DD
30488>>>        Set DDO_Server To oInvt_DD
30489>>>        Set Constrain_File To OrderHea.File_Number
30490>>>
30490>>>        // set the default price and adjust the display total
30490>>>        Procedure SetPriceDefault Number nNum
30493>>>            Set Field_Changed_Value Field OrderDtl.Price to nNum
30494>>>            Send Adjust_Display_total 
30495>>>        End_Procedure
30496>>>    End_Object 
30497>>>
30497>>>    Set Main_DD To oOrderHea_DD
30498>>>    Set Server  To oOrderHea_DD
30499>>>
30499>>>
30499>>>    Object oWebMainPanel is a cWebPanel
30501>>>        Set piColumnCount to 10
30502>>>
30502>>>        Object oOrderHeaOrder_Number is a cWebForm
30504>>>            Entry_Item OrderHea.Order_Number
30505>>>            Set piColumnSpan to 3
30506>>>            Set piColumnIndex to 0
30507>>>            Set psLabel to "Order Number:"
30508>>>            Set peLabelAlign to alignRight
30509>>>        End_Object 
30510>>>
30510>>>        Object oCustomerCustomer_Number is a cWebForm
30512>>>            Entry_Item Customer.Customer_Number
30513>>>            Set piColumnSpan to 3
30514>>>            Set piColumnIndex to 3
30515>>>            Set psLabel to "Customer Number:"
30516>>>            Set peLabelAlign to alignRight
30517>>>        End_Object 
30518>>>
30518>>>        Object oOrderHeaOrder_Date is a cWebDateForm
30520>>>            Entry_Item OrderHea.Order_Date
30521>>>            Set piColumnSpan to 4
30522>>>            Set piColumnIndex to 6
30523>>>            Set psLabel to "Order Date:"
30524>>>            Set peLabelAlign to alignRight
30525>>>        End_Object 
30526>>>
30526>>>        Object oCustomerName is a cWebForm
30528>>>            Entry_Item Customer.Name
30529>>>            Set piColumnSpan to 6
30530>>>            Set piColumnIndex to 0
30531>>>            Set psLabel to "Customer Name:"
30532>>>            Set peLabelAlign to alignRight
30533>>>        End_Object 
30534>>>
30534>>>        Object oCustomerAddress is a cWebForm
30536>>>            Entry_Item Customer.Address
30537>>>            Set piColumnSpan to 6
30538>>>            Set piColumnIndex to 0
30539>>>            Set psLabel to "Street Address:"
30540>>>            Set peLabelAlign to alignRight
30541>>>        End_Object 
30542>>>
30542>>>        Object oCustomerCity is a cWebForm
30544>>>            Entry_Item Customer.City
30545>>>            Set piColumnSpan to 3
30546>>>            Set piColumnIndex to 0
30547>>>            Set psLabel to "City:"
30548>>>            Set peLabelAlign to alignRight
30549>>>        End_Object 
30550>>>
30550>>>        Object oCustomerZip is a cWebForm
30552>>>            Entry_Item Customer.Zip
30553>>>            Set piColumnSpan to 3
30554>>>            Set piColumnIndex to 3
30555>>>            Set psLabel to "Zip:"
30556>>>            Set peLabelAlign to alignRight
30557>>>        End_Object 
30558>>>
30558>>>        Object oOrderHeaOrdered_By is a cWebForm
30560>>>            Entry_Item OrderHea.Ordered_By
30561>>>            Set piColumnSpan to 3
30562>>>            Set piColumnIndex to 7
30563>>>            Set psLabel to "Ordered By:"
30564>>>            Set peLabelAlign to alignRight
30565>>>        End_Object 
30566>>>
30566>>>        Object oCustomerState is a cWebCombo
30568>>>            Entry_Item Customer.State
30569>>>            Set piColumnSpan to 3
30570>>>            Set piColumnIndex to 0
30571>>>            Set psLabel to "State:"
30572>>>            Set peLabelAlign to alignRight
30573>>>        End_Object 
30574>>>
30574>>>        Object oSalesPID is a cWebParentCombo
30576>>>            Entry_Item SalesP.Name
30577>>>            Set piColumnSpan to 5
30578>>>            Set piColumnIndex to 5
30579>>>            Set psLabel to "Salesperson:"
30580>>>            Set peLabelAlign to alignRight
30581>>>        End_Object 
30582>>>
30582>>>        Object oOrderHeaTerms is a cWebCombo
30584>>>            Entry_Item OrderHea.Terms
30585>>>            Set piColumnSpan to 5
30586>>>            Set piColumnIndex to 0
30587>>>            Set psLabel to "Terms:"
30588>>>            Set peLabelAlign to alignRight
30589>>>        End_Object 
30590>>>
30590>>>        Object oOrderHeaShip_Via is a cWebCombo
30592>>>            Entry_Item OrderHea.Ship_Via
30593>>>            Set piColumnSpan to 5
30594>>>            Set piColumnIndex to 5
30595>>>            Set psLabel to "Ship Via:"
30596>>>            Set peLabelAlign to alignRight
30597>>>        End_Object 
30598>>>
30598>>>        Object oDetailGrid is a cWebGrid
30600>>>            Set Server to oOrderDtl_DD
30601>>>            Set piOrdering to 1
30602>>>            Set pbFillHeight to True
30603>>>            Set piColumnSpan to 10
30604>>>            Set piMinHeight to 200
30605>>>
30605>>>            Object oInvtItem_ID is a cWebColumn
30607>>>                Entry_Item Invt.Item_ID
30608>>>                Set psCaption to "Item ID"
30609>>>                Set piWidth to 130
30610>>>            End_Object 
30611>>>
30611>>>            Object oInvtDescription is a cWebColumn
30613>>>                Entry_Item Invt.Description
30614>>>                Set psCaption to "Description"
30615>>>                Set piWidth to 320
30616>>>            End_Object 
30617>>>
30617>>>            Object oInvtUnit_Price is a cWebColumn
30619>>>                Entry_Item Invt.Unit_Price
30620>>>                Set psCaption to "Unit Price"
30621>>>                Set piWidth to 94
30622>>>            End_Object 
30623>>>
30623>>>            Object oOrderDtlPrice is a cWebColumn
30625>>>                Entry_Item OrderDtl.Price
30626>>>                Set psCaption to "Price"
30627>>>                Set piWidth to 94
30628>>>                Set pbServerOnChange to True
30629>>>                
30629>>>                Procedure OnChange String sNewValue String sOldValue
30632>>>                    Send Adjust_Display_total of oOrderDtl_DD
30633>>>                End_Procedure
30634>>>            End_Object 
30635>>>
30635>>>            Object oOrderDtlQty_Ordered is a cWebColumn
30637>>>                Entry_Item OrderDtl.Qty_Ordered
30638>>>                Set psCaption to "Quantity"
30639>>>                Set piWidth to 94
30640>>>                Set pbServerOnChange to True
30641>>>                
30641>>>                Procedure OnChange String sNewValue String sOldValue
30644>>>                    Send Adjust_Display_total of oOrderDtl_DD
30645>>>                End_Procedure
30646>>>            End_Object 
30647>>>
30647>>>            Object oOrderDtlExtended_Price is a cWebColumn
30649>>>                Entry_Item OrderDtl.Extended_Price
30650>>>                Set psCaption to "Total"
30651>>>                Set piWidth to 115
30652>>>            End_Object 
30653>>>        End_Object 
30654>>>        Object oOrderHea_Order_Total is a cWebForm
30656>>>            Entry_Item OrderHea.Order_Total
30657>>>            Set psLabel to "Order Total:"
30658>>>            
30658>>>            Set piColumnIndex to 6
30659>>>            Set peLabelAlign to alignRight
30660>>>            Set piColumnSpan to 4
30661>>>        End_Object
30662>>>    End_Object 
30663>>>
30663>>>End_Object 
30664>    Use Customer.wo
Including file: Customer.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\Customer.wo)
30664>>>// Customer Maintenance
30664>>>//
30664>>>
30664>>>Use cWebView.pkg
30664>>>Use cWebPanel.pkg
30664>>>Use cWebForm.pkg
30664>>>Use cWebCheckBox.pkg
30664>>>Use cWebTabContainer.pkg
30664>>>Use cWebTabPage.pkg
30664>>>Use cWebCombo.pkg
30664>>>Use cWebEdit.pkg
30664>>>
30664>>>Use Customer.DD
30664>>>
30664>>>Object oCustomer is a cWebView
30666>>>    Set piColumnCount to 10
30667>>>    Set psCaption to "Customer Maintenance"
30668>>>    Set piWidth to 600
30669>>>
30669>>>
30669>>>    Object oCustomer_DD is a Customer_DataDictionary
30671>>>    End_Object 
30672>>>
30672>>>    Set Main_DD To oCustomer_DD
30673>>>    Set Server  To oCustomer_DD
30674>>>
30674>>>    Object oWebMainPanel is a cWebPanel
30676>>>        Set piColumnCount to 10
30677>>>
30677>>>        Object oCustomerCustomer_Number is a cWebForm
30679>>>            Entry_Item Customer.Customer_Number
30680>>>            Set piColumnSpan to 4
30681>>>            Set piColumnIndex to 0
30682>>>            Set psLabel to "Customer Num:"
30683>>>            Set peLabelAlign to alignRight
30684>>>        End_Object 
30685>>>
30685>>>        Object oCustomerName is a cWebForm
30687>>>            Entry_Item Customer.Name
30688>>>            Set piColumnSpan to 6
30689>>>            Set piColumnIndex to 4
30690>>>            Set psLabel to "Name:"
30691>>>            Set peLabelAlign to alignRight
30692>>>            Set piLabelOffset to 60
30693>>>        End_Object 
30694>>>
30694>>>        Object oWebTabContainer is a cWebTabContainer
30696>>>            Set piColumnSpan to 10
30697>>>            Set pbShowLabel to False
30698>>>
30698>>>            Object oAddress_page is a cWebTabPage
30700>>>                Set piColumnCount to 10
30701>>>                Set psCaption to "Address"
30702>>>
30702>>>                Object oCustomerAddress is a cWebForm
30704>>>                    Entry_Item Customer.Address
30705>>>                    Set piColumnSpan to 9
30706>>>                    Set piColumnIndex to 0
30707>>>                    Set psLabel to "Street Address:"
30708>>>                    Set peLabelAlign to alignRight
30709>>>                End_Object 
30710>>>
30710>>>                Object oCustomerCity is a cWebForm
30712>>>                    Entry_Item Customer.City
30713>>>                    Set piColumnSpan to 5
30714>>>                    Set piColumnIndex to 0
30715>>>                    Set psLabel to "City / State / Zip:"
30716>>>                    Set peLabelAlign to alignRight
30717>>>                End_Object 
30718>>>
30718>>>                Object oCustomerState is a cWebCombo
30720>>>                    Entry_Item Customer.State
30721>>>                    Set piColumnSpan to 2
30722>>>                    Set piColumnIndex to 5
30723>>>                    Set pbShowLabel to False
30724>>>                    Set peLabelAlign to alignRight
30725>>>                End_Object 
30726>>>
30726>>>                Object oCustomerZip is a cWebForm
30728>>>                    Entry_Item Customer.Zip
30729>>>                    Set piColumnSpan to 2
30730>>>                    Set piColumnIndex to 7
30731>>>                    Set pbShowLabel to False
30732>>>                    Set peLabelAlign to alignRight
30733>>>                End_Object 
30734>>>
30734>>>                Object oCustomerPhone_Number is a cWebForm
30736>>>                    Entry_Item Customer.Phone_Number
30737>>>                    Set piColumnSpan to 5
30738>>>                    Set piColumnIndex to 0
30739>>>                    Set psLabel to "Phone Number:"
30740>>>                    Set peLabelAlign to alignRight
30741>>>                End_Object 
30742>>>
30742>>>                Object oCustomerFax_Number is a cWebForm
30744>>>                    Entry_Item Customer.Fax_Number
30745>>>                    Set piColumnSpan to 4
30746>>>                    Set piColumnIndex to 5
30747>>>                    Set psLabel to "Fax:"
30748>>>                    Set peLabelAlign to alignRight
30749>>>                    Set piLabelOffset to 50
30750>>>                End_Object 
30751>>>
30751>>>                Object oCustomerEMail_Address is a cWebForm
30753>>>                    Entry_Item Customer.EMail_Address
30754>>>                    Set piColumnSpan to 8
30755>>>                    Set piColumnIndex to 0
30756>>>                    Set psLabel to "E-Mail Address:"
30757>>>                    Set peLabelAlign to alignRight
30758>>>                End_Object 
30759>>>
30759>>>                Object oCustomerStatus is a cWebCheckBox
30761>>>                    Entry_Item Customer.Status
30762>>>                    Set piColumnIndex to 0
30763>>>                    Set psCaption to "Active Customer"
30764>>>                    Set piColumnSpan to 8
30765>>>                    Set pbShowLabel to True
30766>>>                End_Object 
30767>>>            End_Object 
30768>>>
30768>>>            Object oBalances_page is a cWebTabPage
30770>>>                Set piColumnCount to 12
30771>>>                Set psCaption to "Balances"
30772>>>
30772>>>                Object oCustomerCredit_Limit is a cWebForm
30774>>>                    Entry_Item Customer.Credit_Limit
30775>>>                    Set piColumnSpan to 6
30776>>>                    Set piColumnIndex to 0
30777>>>                    Set psLabel to "Credit Limit:"
30778>>>                    Set peLabelAlign to alignRight
30779>>>                End_Object 
30780>>>
30780>>>                Object oCustomerPurchases is a cWebForm
30782>>>                    Entry_Item Customer.Purchases
30783>>>                    Set piColumnSpan to 6
30784>>>                    Set piColumnIndex to 0
30785>>>                    Set psLabel to "Total Purchases:"
30786>>>                    Set peLabelAlign to alignRight
30787>>>                End_Object 
30788>>>
30788>>>                Object oCustomerBalance is a cWebForm
30790>>>                    Entry_Item Customer.Balance
30791>>>                    Set piColumnSpan to 6
30792>>>                    Set piColumnIndex to 0
30793>>>                    Set psLabel to "Balance Due:"
30794>>>                    Set peLabelAlign to alignRight
30795>>>                End_Object 
30796>>>            End_Object 
30797>>>
30797>>>            Object oComments_page is a cWebTabPage
30799>>>                Set piColumnCount to 10
30800>>>                Set psCaption to "Comments"
30801>>>
30801>>>                Object oCustomerComments is a cWebEdit
30803>>>                    Entry_Item Customer.Comments
30804>>>                    Set piColumnSpan to 0
30805>>>                    Set piColumnIndex to 0
30806>>>                    Set pbShowLabel to False
30807>>>                    Set pbFillHeight to True
30808>>>                    Set peLabelAlign to alignRight
30809>>>                End_Object 
30810>>>            End_Object 
30811>>>        End_Object 
30812>>>    End_Object 
30813>>>
30813>>>End_Object 
30814>    Use Inventory.wo
Including file: Inventory.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\Inventory.wo)
30814>>>// Inventory Maintenance
30814>>>//
30814>>>
30814>>>Use cWebView.pkg
30814>>>Use cWebPanel.pkg
30814>>>Use cWebForm.pkg
30814>>>
30814>>>Use Vendor.DD
30814>>>Use Invt.DD
30814>>>
30814>>>Object oInventory is a cWebView
30816>>>    Set piColumnCount to 10
30817>>>    Set psCaption to "Inventory Maintenance"
30818>>>    Set piWidth to 700
30819>>>
30819>>>    Object oVendor_DD is a Vendor_DataDictionary
30821>>>    End_Object 
30822>>>
30822>>>    Object oInvt_DD is a Invt_DataDictionary
30824>>>        Set DDO_Server To oVendor_DD
30825>>>    End_Object 
30826>>>
30826>>>    Set Main_DD To oInvt_DD
30827>>>    Set Server  To oInvt_DD
30828>>>
30828>>>
30828>>>    Object oWebMainPanel is a cWebPanel
30830>>>        Set piColumnCount to 10
30831>>>
30831>>>        Object oInvtItem_ID is a cWebForm
30833>>>            Entry_Item Invt.Item_ID
30834>>>            Set piColumnSpan to 4
30835>>>            Set piColumnIndex to 0
30836>>>            Set psLabel to "Item ID:"
30837>>>            Set peLabelAlign to alignRight
30838>>>        End_Object 
30839>>>
30839>>>        Object oInvtDescription is a cWebForm
30841>>>            Entry_Item Invt.Description
30842>>>            Set piColumnSpan to 6
30843>>>            Set piColumnIndex to 4
30844>>>            Set psLabel to "Description:"
30845>>>            Set peLabelAlign to alignRight
30846>>>        End_Object 
30847>>>
30847>>>        Object oVendorID is a cWebForm
30849>>>            Entry_Item Vendor.ID
30850>>>            Set piColumnSpan to 4
30851>>>            Set piColumnIndex to 0
30852>>>            Set psLabel to "Vendor ID:"
30853>>>            Set peLabelAlign to alignRight
30854>>>        End_Object 
30855>>>
30855>>>        Object oVendorName is a cWebForm
30857>>>            Entry_Item Vendor.Name
30858>>>            Set piColumnSpan to 6
30859>>>            Set piColumnIndex to 4
30860>>>            Set psLabel to "Vendor Name:"
30861>>>            Set peLabelAlign to alignRight
30862>>>        End_Object 
30863>>>
30863>>>        Object oInvtVendor_Part_ID is a cWebForm
30865>>>            Entry_Item Invt.Vendor_Part_ID
30866>>>            Set piColumnSpan to 5
30867>>>            Set piColumnIndex to 0
30868>>>            Set psLabel to "Vendor Part ID:"
30869>>>            Set peLabelAlign to alignRight
30870>>>        End_Object 
30871>>>
30871>>>        Object oInvtUnit_Price is a cWebForm
30873>>>            Entry_Item Invt.Unit_Price
30874>>>            Set piColumnSpan to 4
30875>>>            Set piColumnIndex to 0
30876>>>            Set psLabel to "Unit Price:"
30877>>>            Set peLabelAlign to alignRight
30878>>>        End_Object 
30879>>>
30879>>>        Object oInvtOn_Hand is a cWebForm
30881>>>            Entry_Item Invt.On_Hand
30882>>>            Set piColumnSpan to 3
30883>>>            Set piColumnIndex to 4
30884>>>            Set psLabel to "Qty On Hand:"
30885>>>            Set peLabelAlign to alignRight
30886>>>        End_Object 
30887>>>    End_Object 
30888>>>
30888>>>End_Object 
30889>    Use Vendor.wo
Including file: Vendor.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\Vendor.wo)
30889>>>// Vendor Maintenance
30889>>>//
30889>>>
30889>>>Use cWebView.pkg
30889>>>Use cWebPanel.pkg
30889>>>Use cWebForm.pkg
30889>>>Use cWebCombo.pkg
30889>>>
30889>>>Use Vendor.DD
30889>>>
30889>>>Object oVendor is a cWebView
30891>>>    Set piColumnCount to 10
30892>>>    Set psCaption to "Vendor Maintenance"
30893>>>    Set piWidth to 700
30894>>>
30894>>>    Object oVendor_DD is a Vendor_DataDictionary
30896>>>    End_Object 
30897>>>
30897>>>    Set Main_DD To oVendor_DD
30898>>>    Set Server  To oVendor_DD
30899>>>
30899>>>
30899>>>    Object oWebMainPanel is a cWebPanel
30901>>>        Set piColumnCount to 10
30902>>>
30902>>>        Object oVendorID is a cWebForm
30904>>>            Entry_Item Vendor.ID
30905>>>            Set piColumnSpan to 4
30906>>>            Set piColumnIndex to 0
30907>>>            Set psLabel to "ID:"
30908>>>            Set peLabelAlign to alignRight
30909>>>        End_Object 
30910>>>
30910>>>        Object oVendorName is a cWebForm
30912>>>            Entry_Item Vendor.Name
30913>>>            Set piColumnSpan to 6
30914>>>            Set piColumnIndex to 4
30915>>>            Set psLabel to "Name:"
30916>>>            Set peLabelAlign to alignRight
30917>>>            Set piLabelOffset to 70
30918>>>        End_Object 
30919>>>
30919>>>        Object oVendorAddress is a cWebForm
30921>>>            Entry_Item Vendor.Address
30922>>>            Set piColumnSpan to 10
30923>>>            Set piColumnIndex to 0
30924>>>            Set psLabel to "Street:"
30925>>>            Set peLabelAlign to alignRight
30926>>>        End_Object 
30927>>>
30927>>>        Object oVendorCity is a cWebForm
30929>>>            Entry_Item Vendor.City
30930>>>            Set piColumnSpan to 5
30931>>>            Set piColumnIndex to 0
30932>>>            Set psLabel to "City \ State \ ZIP:"
30933>>>            Set peLabelAlign to alignRight
30934>>>        End_Object 
30935>>>
30935>>>        Object oVendorState is a cWebCombo
30937>>>            Entry_Item Vendor.State
30938>>>            Set piColumnSpan to 3
30939>>>            Set piColumnIndex to 5
30940>>>            Set peLabelAlign to alignRight
30941>>>            Set pbShowLabel to False
30942>>>        End_Object 
30943>>>
30943>>>        Object oVendorZip is a cWebForm
30945>>>            Entry_Item Vendor.Zip
30946>>>            Set piColumnSpan to 2
30947>>>            Set piColumnIndex to 8
30948>>>            Set peLabelAlign to alignRight
30949>>>            Set pbShowLabel to False
30950>>>        End_Object 
30951>>>
30951>>>        Object oVendorPhone_Number is a cWebForm
30953>>>            Entry_Item Vendor.Phone_Number
30954>>>            Set piColumnSpan to 5
30955>>>            Set piColumnIndex to 0
30956>>>            Set psLabel to "Phone:"
30957>>>            Set peLabelAlign to alignRight
30958>>>        End_Object 
30959>>>
30959>>>        Object oVendorFax_Number is a cWebForm
30961>>>            Entry_Item Vendor.Fax_Number
30962>>>            Set piColumnSpan to 5
30963>>>            Set piColumnIndex to 5
30964>>>            Set psLabel to "Fax:"
30965>>>            Set peLabelAlign to alignRight
30966>>>        End_Object 
30967>>>    End_Object 
30968>>>
30968>>>End_Object 
30969>    Use SalesPerson.wo
Including file: SalesPerson.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\SalesPerson.wo)
30969>>>// Sales Person Maintenance
30969>>>//
30969>>>
30969>>>Use cWebView.pkg
30969>>>Use cWebPanel.pkg
30969>>>Use cWebForm.pkg
30969>>>
30969>>>Use SalesP.DD
30969>>>
30969>>>Object oSalesPerson is a cWebView
30971>>>    Set piColumnCount to 10
30972>>>    Set psCaption to "Sales Person Maintenance"
30973>>>    Set piWidth to 600
30974>>>
30974>>>    Object oSalesP_DD is a SalesP_DataDictionary
30976>>>    End_Object 
30977>>>
30977>>>    Set Main_DD To oSalesP_DD
30978>>>    Set Server  To oSalesP_DD
30979>>>
30979>>>
30979>>>    Object oWebMainPanel is a cWebPanel
30981>>>        Set piColumnCount to 10
30982>>>
30982>>>        Object oSalesPID is a cWebForm
30984>>>            Entry_Item SalesP.ID
30985>>>            Set piColumnSpan to 3
30986>>>            Set piColumnIndex to 0
30987>>>            Set psLabel to "ID:"
30988>>>            Set peLabelAlign to alignRight
30989>>>            Set piLabelOffset to 50
30990>>>        End_Object 
30991>>>
30991>>>        Object oSalesPName is a cWebForm
30993>>>            Entry_Item SalesP.Name
30994>>>            Set piColumnSpan to 7
30995>>>            Set piColumnIndex to 3
30996>>>            Set psLabel to "Name:"
30997>>>            Set peLabelAlign to alignRight
30998>>>            Set piLabelOffset to 50
30999>>>        End_Object 
31000>>>    End_Object 
31001>>>
31001>>>End_Object 
31002>    
31002>    Use CustomerListSample.wo
Including file: CustomerListSample.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\CustomerListSample.wo)
31002>>>Use cWebView.pkg
31002>>>Use cWebPanel.pkg
31002>>>Use cWebForm.pkg
31002>>>Use cWebRadio.pkg
31002>>>Use cWebCheckbox.pkg
31002>>>Use cWebForm.pkg
31002>>>Use cWebButton.pkg
31002>>>Use cWebLabel.pkg
31002>>>Use cWebGroup.pkg
31002>>>
31002>>>// Note: This sample does not actually run a DataFlex Reports report. The .pdf file that would normally
31002>>>// be generated by DataFlex Reports is a previously generated file, which was installed with DataFlex.
31002>>>
31002>>>// If you have an installed version of DataFlex Reports compatible with this version of DataFlex, then
31002>>>// you could comment out the code below to generate a live DataFlex Reports report.
31002>>>Object oCustomerListSample is a cWebView
31004>>>    Set piWidth to 700
31005>>>    Set psCaption to "Customer List (DataFlex Reports)"
31006>>>
31006>>>// If you are using DataFlex Reports, here is how you would actually
31006>>>// initialize, run and save the report to a PDF file.
31006>>>
31006>>>//    Use cDRReport.pkg // Move this line to the other USE statement lines above the cWebView component
31006>>>//
31006>>>//    Object oReport is a cDRReport
31006>>>//        Procedure OnInitializeReport
31006>>>//            Send SetFilters
31006>>>//            Send SetSortFields
31006>>>//        End_Procedure
31006>>>//
31006>>>//        Procedure SetFilters
31006>>>//            Integer[] iCustomerCustomerNumbers
31006>>>//            String[] sCustomerNames
31006>>>//            String sReportId
31006>>>//
31006>>>//            Get psReportId to sReportId
31006>>>//            Send RemoveAllFilters sReportId  // clear any previous filters
31006>>>//
31006>>>//            WebGet psValue of oFromCustomerCustomerNumber to iCustomerCustomerNumbers[0]
31006>>>//            WebGet psValue of oToCustomerCustomerNumber to iCustomerCustomerNumbers[1]
31006>>>//
31006>>>//            Move (SortArray (iCustomerCustomerNumbers)) to iCustomerCustomerNumbers
31006>>>//            If (iCustomerCustomerNumbers[0] <> 0) Begin
31006>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Customer_Number}" C_DRGreaterThanOrEqual iCustomerCustomerNumbers[0]
31006>>>//            End
31006>>>//            If (iCustomerCustomerNumbers[1] <> 0) Begin
31006>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Customer_Number}" C_DRLessThanOrEqual iCustomerCustomerNumbers[1]
31006>>>//            End
31006>>>//
31006>>>//            WebGet psValue of oFromCustomerName to sCustomerNames[0]
31006>>>//            WebGet psValue of oToCustomerName to sCustomerNames[1]
31006>>>//
31006>>>//            Move (Trim (sCustomerNames[0])) to sCustomerNames[0]
31006>>>//            Move (Trim (sCustomerNames[1])) to sCustomerNames[1]
31006>>>//            Move (SortArray (sCustomerNames)) to sCustomerNames
31006>>>//
31006>>>//            If (sCustomerNames[0] <> "") Begin
31006>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Name}" C_DRGreaterThanOrEqual sCustomerNames[0]
31006>>>//            End
31006>>>//            If (sCustomerNames[1] <> "") Begin
31006>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Name}" C_DRLessThanOrEqual sCustomerNames[1]
31006>>>//            End
31006>>>//        End_Procedure
31006>>>//
31006>>>//        Procedure SetSortFields
31006>>>//            Integer iRadio
31006>>>//            Boolean bAscending
31006>>>//
31006>>>//            WebGet psValue of oSortNumber to iRadio
31006>>>//            Get GetChecked of oSortAscending to bAscending
31006>>>//            
31006>>>//            Send RemoveAllRecordSortFields C_USEMAINDRREPORTID
31006>>>//            If (iRadio=0) Begin
31006>>>//                Send AddRecordSortField C_USEMAINDRREPORTID "{Customer.Customer_Number}" (If(bAscending, C_drAscending, C_drDescending))
31006>>>//            End
31006>>>//            Else Begin
31006>>>//                Send AddRecordSortField C_USEMAINDRREPORTID "{Customer.Name}" (If(bAscending, C_DRAscending, C_DRDescending))
31006>>>//            End
31006>>>//        End_Procedure
31006>>>//
31006>>>//        Function GenerateReport Returns String
31006>>>//            String sReportId sPath
31006>>>//            DRPDFExportOptions PDFReportOptions
31006>>>//            Boolean bCanceled
31006>>>//
31006>>>//            Set psReportName to "CustomerList.dr"
31006>>>//            Get OpenReport to sReportId
31006>>>//
31006>>>//            If (sReportId <> "") Begin
31006>>>//                Get DefaultPDFExportOptions to PDFReportOptions
31006>>>//                Move C_drHigh to PDFReportOptions.iImageQuality
31006>>>//                Set pPDFExportOptions to PDFReportOptions
31006>>>//
31006>>>//                Get ReportCacheFileName '.pdf' to sPath
31006>>>//
31006>>>//                If (sPath <> "") Begin
31006>>>//                    Send ExportReport C_DRPDF sPath
31006>>>//
31006>>>//                    // see if report ran ok, if not return empty path
31006>>>//                    Get pbCanceled to bCanceled
31006>>>//                    If (bCanceled) Begin
31006>>>//                        Move "" to sPath
31006>>>//                    End
31006>>>//                End
31006>>>//
31006>>>//                Send CloseReport sReportId
31006>>>//            End
31006>>>//            
31006>>>//            Function_Return sPath
31006>>>//        End_Function
31006>>>//    End_Object
31006>>>
31006>>>// This is a dummy object that is used in place of the report PDF that would have been
31006>>>// generated using DataFlex Reports. Note that this also shows you how to download a
31006>>>// static file (could be any kind of file) from a secure non-web location. In this case,
31006>>>// the dummy report is located in \Data, which is not a web path.
31006>>>
31006>>>    Object oReport is a cObject
31008>>>        Function GenerateReport Returns String
31011>>>            String sPath
31011>>>
31011>>>            Get GetReportsCache of ghoWebApp True to sPath
31012>>>            If (sPath <> "") Begin
31014>>>                Move (sPath + "\CustomerListSample.pdf") to sPath
31015>>>            End
31015>>>>
31015>>>            Function_Return sPath
31016>>>        End_Function
31017>>>    End_Object
31018>>>
31018>>>    Procedure RunReport
31021>>>        String sFile sUrl
31021>>>
31021>>>        // generate the report file and return its full file path name (not a URL)
31021>>>        Get GenerateReport of oReport to sFile
31022>>>
31022>>>        If (sFile="") Begin
31024>>>            Send ShowInfoBox "The Report could not be generated"
31025>>>        End
31025>>>>
31025>>>        Else Begin
31026>>>            Get DownloadURL of ghoWebResourceManager sFile to sUrl
31027>>>
31027>>>            // this is used to show a PDF file in a new browser tab or window
31027>>>            // use btNewTab to open a new browser tab page
31027>>>            // use btNewWindow to open a new browser window
31027>>>            Send NavigateToPage sUrl btNewTab
31028>>>
31028>>>            // this is used to show a PDF file in an embedded viewer within this view
31028>>>            //WebSet psUrl of oWebIFrame1 to sUrl
31028>>>        End
31028>>>>
31028>>>    End_Procedure
31029>>>
31029>>>    Object oWebMainPanel is a cWebPanel
31031>>>        Set piColumnCount to 10
31032>>>
31032>>>        Object oCustomerCustomerNumberGroup is a cWebGroup
31034>>>            Set piColumnSpan to 3
31035>>>            Set psCaption to "Customer Number:"
31036>>>            Set piColumnCount to 10
31037>>>
31037>>>            Object oFromCustomerCustomerNumber is a cWebform
31039>>>               Set psLabel to "From:"
31040>>>               Set piLabelOffset to 50
31041>>>               Set piColumnSpan to 0
31042>>>            End_Object
31043>>>
31043>>>            Object oToCustomerCustomerNumber is a cWebform
31045>>>               Set psLabel to "To:"
31046>>>               Set piLabelOffset to 50
31047>>>               Set piColumnSpan to 0
31048>>>            End_Object
31049>>>        End_Object
31050>>>
31050>>>        Object oWebLabel1 is a cWebLabel
31052>>>            Set piColumnSpan to 0
31053>>>            Set psCaption to "Note: This view simply displays a static file ('CustomerListSample.pdf'), so these settings do not really change the output."
31054>>>            Set piColumnIndex to 3
31055>>>        End_Object
31056>>>
31056>>>        Object oCustomerCustoNameGroup is a cWebGroup
31058>>>            Set psCaption to "Customer Name:"
31059>>>            Set piColumnSpan to 5
31060>>>            Set piColumnCount to 10
31061>>>
31061>>>            Object oFromCustomerName is a cWebform
31063>>>               Set psLabel to "From:"
31064>>>               Set piLabelOffset to 50
31065>>>               Set piColumnSpan to 0
31066>>>            End_Object
31067>>>
31067>>>            Object oToCustomerName is a cWebform
31069>>>               Set psLabel to "To:"
31070>>>               Set piLabelOffset to 50
31071>>>               Set piColumnSpan to 0
31072>>>            End_Object
31073>>>        End_Object
31074>>>
31074>>>        Object oSortOrderGroup is a cWebGroup
31076>>>            Set psCaption to "Order By:"
31077>>>            Set piColumnSpan to 5
31078>>>
31078>>>            Object oSortNumber is a cWebRadio
31080>>>               Set psCaption to "Customer Number"
31081>>>               Set psGroupName to "Sort"
31082>>>               Set psRadioValue to "0"
31083>>>            End_Object
31084>>>
31084>>>            Object oSortName is a cWebRadio
31086>>>               Set psCaption to "Customer Name"
31087>>>               Set psGroupName to "Sort"
31088>>>               Set psRadioValue to "1"
31089>>>            End_Object
31090>>>
31090>>>            Object oSortAscending is a cWebCheckbox
31092>>>               Set psCaption to "Ascending"
31093>>>               Set psChecked to 1
31094>>>               Set psUnChecked to 0
31095>>>               Set psValue to 1
31096>>>            End_Object
31097>>>        End_Object
31098>>>
31098>>>        Object oRunButton is a cWebButton
31100>>>            Set psCaption to "Run Report"
31101>>>            Set piColumnSpan to 3
31102>>>
31102>>>            Procedure OnClick
31105>>>                Send RunReport
31106>>>            End_Procedure
31107>>>        End_Object
31108>>>
31108>>>// this would be used if you wanted to output to an embedded window
31108>>>//        Object oWebIFrame1 is a cWebIFrame
31108>>>//           Set pbFillHeight to True
31108>>>//           Set pbShowBorder to True
31108>>>//        End_Object
31108>>>
31108>>>   End_Object
31109>>>End_Object
31110>    Use OrderListSample.wo
Including file: OrderListSample.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\OrderListSample.wo)
31110>>>Use cWebView.pkg
31110>>>Use cWebPanel.pkg
31110>>>Use cWebForm.pkg
31110>>>Use cWebRadio.pkg
31110>>>Use cWebCheckbox.pkg
31110>>>Use cWebForm.pkg
31110>>>Use cWebButton.pkg
31110>>>Use cWebLabel.pkg
31110>>>Use cWebGroup.pkg
31110>>>
31110>>>// Note: This sample does not actually run a DataFlex Reports report. The .pdf file that would normally
31110>>>// be generated by DataFlex Reports is a previously generated file which was installed with DataFlex.
31110>>>
31110>>>// If you have an installed version of DataFlex Reports compatible with this version of DataFlex, then
31110>>>// you could comment out the code below to generate a live DataFlex Reports report.
31110>>>Object oOrderListSample is a cWebView
31112>>>    Set psCaption to "Order List (DataFlex Reports)"
31113>>>    Set piWidth to 700
31114>>>    Set piColumnCount to 10
31115>>>
31115>>>// If you are using DataFlex Reports, here is how you would actually
31115>>>// initialize, run and save the report to a PDF file.
31115>>>
31115>>>//    Use cDRReport.pkg // Move this line to the other USE statement lines above the cWebView component
31115>>>//
31115>>>//    Object oReport is a cDRReport
31115>>>//        Procedure OnInitializeReport
31115>>>//            Send SetFilters
31115>>>//        End_Procedure
31115>>>//
31115>>>//        Procedure SetFilters
31115>>>//            Number nMinOrderTotal
31115>>>//            String sReportId
31115>>>//
31115>>>//            Get psReportId to sReportId
31115>>>//            Send RemoveAllFilters sReportId  // clear any previous filters
31115>>>//
31115>>>//            WebGet psValue of oFromOrderHeaOrderTotal to nMinOrderTotal
31115>>>//            // Send AddFilter C_USEMAINDRREPORTID "{OrderHea.Order_Total}" C_DRGreaterThanOrEqual nMinOrderTotal
31115>>>//            // psFilterFunction is displayed in the report's page header so we use this instead of AddFilter
31115>>>//            Set psFilterFunction C_USEMAINDRREPORTID to ('return ({OrderHea.Order_Total} > ' + String(nMinOrderTotal) + ')')
31115>>>//        End_Procedure
31115>>>//
31115>>>//        Function GenerateReport Returns String
31115>>>//            String sReportId sPath
31115>>>//            DRPDFExportOptions PDFReportOptions
31115>>>//            Boolean bCanceled
31115>>>//
31115>>>//            Set psReportName to "OrderList.DR"
31115>>>//            Get OpenReport to sReportId
31115>>>//
31115>>>//            If (sReportId <> "") Begin
31115>>>//                Get DefaultPDFExportOptions to PDFReportOptions
31115>>>//                Move C_drHigh to PDFReportOptions.iImageQuality
31115>>>//                Set pPDFExportOptions to PDFReportOptions
31115>>>//
31115>>>//                Get ReportCacheFileName '.pdf' to sPath
31115>>>//
31115>>>//                If (sPath <> "") Begin
31115>>>//                    Send ExportReport C_DRPDF sPath
31115>>>//
31115>>>//                    // see if report ran ok, if not return empty path
31115>>>//                    Get pbCanceled to bCanceled
31115>>>//                    If (bCanceled) Begin
31115>>>//                        Move "" to sPath
31115>>>//                    End
31115>>>//                End
31115>>>//
31115>>>//                Send CloseReport sReportId
31115>>>//            End
31115>>>//
31115>>>//            Function_Return sPath
31115>>>//        End_Function
31115>>>//    End_Object
31115>>>
31115>>>// This is a dummy object that is used in place of a report PDF file that would have been
31115>>>// generated using DataFlex Reports. Note that this also shows you how to download a
31115>>>// static file (could be any kind of file) from a secure non-web location. In this case,
31115>>>// the dummy report is located in \Data, which is not a web path.
31115>>>
31115>>>    Object oReport is a cObject
31117>>>        Function GenerateReport Returns String
31120>>>            String sPath
31120>>>
31120>>>            Get GetReportsCache of ghoWebApp True to sPath
31121>>>            If (sPath <> "") Begin
31123>>>                Move (sPath + "\OrderListSample.pdf") to sPath
31124>>>            End
31124>>>>
31124>>>            Function_Return sPath
31125>>>        End_Function
31126>>>    End_Object
31127>>>
31127>>>    Procedure RunReport
31130>>>        String sFile sUrl
31130>>>
31130>>>        // generate the report file and return its full file path name (not a URL)
31130>>>        Get GenerateReport of oReport to sFile
31131>>>
31131>>>        If (sFile="") Begin
31133>>>            Send ShowInfoBox "The Report could not be generated"
31134>>>        End
31134>>>>
31134>>>        Else Begin
31135>>>            Get DownloadURL of ghoWebResourceManager sFile to sUrl
31136>>>
31136>>>            // this is used to show a PDF file in a new browser tab or window
31136>>>            // use btNewTab to open a new browser tab page
31136>>>            // use btNewWindow to open a new browser window
31136>>>            Send NavigateToPage sUrl btNewTab
31137>>>
31137>>>            // this is used to show a PDF file in an embedded viewer within this view
31137>>>            //WebSet psUrl of oWebIFrame1 to sUrl
31137>>>        End
31137>>>>
31137>>>    End_Procedure
31138>>>
31138>>>    Object oOrderTotalGroup is a cWebGroup
31140>>>        Set psCaption to "Minimum Order Total:"
31141>>>        Set piColumnSpan to 3
31142>>>        Set piColumnCount to 6
31143>>>
31143>>>        Object oFromOrderHeaOrderTotal is a cWebForm
31145>>>            Set psLabel to "From:"
31146>>>            Set psValue to 5000
31147>>>            Set piColumnSpan to 6
31148>>>            Set piLabelOffset to 50
31149>>>        End_Object
31150>>>    End_Object
31151>>>
31151>>>    Object oWebLabel1 is a cWebLabel
31153>>>        Set piColumnSpan to 0
31154>>>        Set psCaption to "Note: This view simply displays a static file ('OrderListSample.pdf'), so this setting does not really change the output."
31155>>>        Set piColumnIndex to 3
31156>>>    End_Object
31157>>>
31157>>>    Object oRunButton is a cWebButton
31159>>>        Set psCaption to "Run Report"
31160>>>        Set piColumnSpan to 3
31161>>>
31161>>>        Procedure OnClick
31164>>>            Send RunReport
31165>>>        End_Procedure
31166>>>    End_Object
31167>>>
31167>>>// this would be used if you wanted to output to an embedded window
31167>>>//        Object oWebIFrame1 is a cWebIFrame
31167>>>//           Set pbFillHeight to True
31167>>>//           Set pbShowBorder to True
31167>>>//        End_Object
31167>>>End_Object
31168>    Use CustomerOrdersSample.wo
Including file: CustomerOrdersSample.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\CustomerOrdersSample.wo)
31168>>>Use cWebView.pkg
31168>>>Use cWebPanel.pkg
31168>>>Use cWebForm.pkg
31168>>>Use cWebRadio.pkg
31168>>>Use cWebCheckbox.pkg
31168>>>Use cWebForm.pkg
31168>>>Use cWebButton.pkg
31168>>>Use cWebLabel.pkg
31168>>>Use cWebIFrame.pkg
31168>>>Use cWebSpacer.pkg
31168>>>Use cWebGroup.pkg
31168>>>
31168>>>// Note: This sample does not actually run a DataFlex Reports report. The .pdf file that would normally
31168>>>// be generated by DataFlex Reports is a previously generated file, which was installed with DataFlex.
31168>>>
31168>>>// If you have an installed version of DataFlex Reports compatible with this version of DataFlex, then
31168>>>// you could comment out the code below to generate a live DataFlex Reports report.
31168>>>Object oCustomerOrdersSample is a cWebView
31170>>>    Set psCaption to "Customer Orders (DataFlex Reports)"
31171>>>    Set piMinWidth to 800
31172>>>    Set piColumnCount to 10
31173>>>
31173>>>// If you are using DataFlex Reports, here is how you would actually
31173>>>// initialize, run and save the report to a PDF file.
31173>>>//
31173>>>//    Use cDRReport.pkg // Move this line to the other USE statement lines above the cWebView component
31173>>>//
31173>>>//    Object oReport is a cDRReport
31173>>>//        Procedure OnInitializeReport
31173>>>//            Send SetFilters
31173>>>//        End_Procedure
31173>>>//
31173>>>//        Procedure SetFilters
31173>>>//            Integer[] iCustomerCustomerNumbers
31173>>>//            String sReportId
31173>>>//
31173>>>//            Get psReportId to sReportId
31173>>>//            Send RemoveAllFilters sReportId  // clear any previous filters
31173>>>//
31173>>>//            WebGet psValue of oFromCustomerCustomerNumber to iCustomerCustomerNumbers[0]
31173>>>//            WebGet psValue of oToCustomerCustomerNumber to iCustomerCustomerNumbers[1]
31173>>>//
31173>>>//            Move (SortArray (iCustomerCustomerNumbers)) to iCustomerCustomerNumbers
31173>>>//            If (iCustomerCustomerNumbers[0] <> 0) Begin
31173>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Customer_Number}" C_DRGreaterThanOrEqual iCustomerCustomerNumbers[0]
31173>>>//            End
31173>>>//            If (iCustomerCustomerNumbers[1] <> 0) Begin
31173>>>//                Send AddFilter C_USEMAINDRREPORTID "{Customer.Customer_Number}" C_DRLessThanOrEqual iCustomerCustomerNumbers[1]
31173>>>//            End
31173>>>//        End_Procedure
31173>>>//
31173>>>//        Function GenerateReport Returns String
31173>>>//            String sReportId sPath
31173>>>//            DRPDFExportOptions PDFReportOptions
31173>>>//            Boolean bCanceled
31173>>>//
31173>>>//            Set psReportName to "CustomerOrders.DR"
31173>>>//            Get OpenReport to sReportId
31173>>>//
31173>>>//            If (sReportId <> "") Begin
31173>>>//                Get DefaultPDFExportOptions to PDFReportOptions
31173>>>//                Move C_drHigh to PDFReportOptions.iImageQuality
31173>>>//                Set pPDFExportOptions to PDFReportOptions
31173>>>//
31173>>>//                Get ReportCacheFileName '.pdf' to sPath
31173>>>//                If (sPath <> "") Begin
31173>>>//                    Send ExportReport C_DRPDF sPath
31173>>>//
31173>>>//                    // see if report ran ok, if not return empty path
31173>>>//                    Get pbCanceled to bCanceled
31173>>>//                    If (bCanceled) Begin
31173>>>//                        Move "" to sPath
31173>>>//                    End
31173>>>//                End
31173>>>//
31173>>>//                Send CloseReport sReportId
31173>>>//            End
31173>>>//
31173>>>//            Function_Return sPath
31173>>>//        End_Function
31173>>>//    End_Object
31173>>>
31173>>>// This is a dummy object that is used in place of a report PDF that would have been
31173>>>// generated using DataFlex Reports. Note that this also shows you how to download a
31173>>>// static file (could be any kind of file) from a secure non-web location. In this case,
31173>>>// the dummy report results is located in \ReportsCache folder, which is not a web path.
31173>>>
31173>>>    Object oReport is a cObject
31175>>>        Function GenerateReport Returns String
31178>>>            String sPath
31178>>>
31178>>>            Get GetReportsCache of ghoWebApp True to sPath
31179>>>            If (sPath <> "") Begin
31181>>>                Move (sPath + "\CustomerOrderSample.pdf") to sPath
31182>>>            End
31182>>>>
31182>>>            Function_Return sPath
31183>>>        End_Function
31184>>>    End_Object
31185>>>
31185>>>    Procedure RunReport
31188>>>        String sFile sUrl
31188>>>
31188>>>        // generate the report file and return its full file path name (not a URL)
31188>>>        Get GenerateReport of oReport to sFile
31189>>>
31189>>>        If (sFile="") Begin
31191>>>            Send ShowInfoBox "The Report could not be generated"
31192>>>        End
31192>>>>
31192>>>        Else Begin
31193>>>            Get DownloadURL of ghoWebResourceManager sFile to sUrl
31194>>>
31194>>>            // this is used to show a PDF file in a new browser tab or window
31194>>>            // use btNewTab to open a new browser tab page
31194>>>            // use btNewWindow to open a new browser window
31194>>>            //Send NavigateToPage sUrl btNewTab
31194>>>
31194>>>            // this is used to show PDF in an embedded viewer within this view
31194>>>            WebSet psUrl of oWebIFrame to sUrl
31195>>>        End
31195>>>>
31195>>>    End_Procedure
31196>>>
31196>>>    Object oWebPanelTop is a cWebPanel
31198>>>        Set peRegion to prTop
31199>>>
31199>>>        Object oWebPanelTopLeft is a cWebPanel
31201>>>            Set peRegion to prLeft
31202>>>            Set piWidth to 200
31203>>>
31203>>>            Object oCustomerCustomerNumberGroup is a cWebGroup
31205>>>                Set psCaption to "Customer Number:"
31206>>>                Set piColumnSpan to 0
31207>>>                Set piColumnCount to 10
31208>>>
31208>>>                Object oFromCustomerCustomerNumber is a cWebform
31210>>>                   Set psLabel to "From:"
31211>>>                   Set piLabelOffset to 50
31212>>>                   Set piColumnSpan to 0
31213>>>                End_Object
31214>>>
31214>>>                Object oToCustomerCustomerNumber is a cWebform
31216>>>                   Set psLabel to "To:"
31217>>>                   Set piLabelOffset to 50
31218>>>                   Set piColumnSpan to 0
31219>>>                End_Object
31220>>>            End_Object
31221>>>
31221>>>            Object oRunButton is a cWebButton
31223>>>                Set psCaption to "Run Report"
31224>>>                Set piColumnSpan to 0
31225>>>
31225>>>                Procedure OnClick
31228>>>                    Send RunReport
31229>>>                End_Procedure
31230>>>            End_Object
31231>>>        End_Object
31232>>>
31232>>>        Object oWebPanelTopCenter is a cWebPanel
31234>>>            Set peRegion to prCenter
31235>>>
31235>>>            Object oWebLabel1 is a cWebLabel
31237>>>                Set piColumnSpan to 0
31238>>>                Set psCaption to "Note: This view simply displays a static file ('CustomerOrderSample.pdf'), so these settings do not really change the output."
31239>>>                Set piColumnIndex to 3
31240>>>            End_Object
31241>>>        End_Object
31242>>>    End_Object
31243>>>
31243>>>    Object oWebPanelCenter is a cWebPanel
31245>>>        Set peRegion to prCenter
31246>>>
31246>>>        // output to an embedded window
31246>>>        Object oWebIFrame is a cWebIFrame
31248>>>           Set pbFillHeight to True
31249>>>           Set pbShowBorder to True
31250>>>        End_Object
31251>>>    End_Object
31252>>>End_Object
31253>    
31253>    Use DemoSliders.wo
Including file: DemoSliders.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoSliders.wo)
31253>>>Use cWebView.pkg
31253>>>Use cWebPanel.pkg
31253>>>Use cWebTabContainer.pkg
31253>>>Use cWebTabPage.pkg
31253>>>Use cWebForm.pkg
31253>>>Use cWebLabel.pkg
31253>>>Use cWebSlider.pkg
31253>>>Use cWebGroup.pkg
31253>>>
31253>>>Use Customer.dd
31253>>>
31253>>>Object oDemoSliders is a cWebView
31255>>>    Set piWidth to 700
31256>>>    Set psCaption to "Demo Sliders"
31257>>>    
31257>>>    Object oCustomer_DD is a Customer_DataDictionary
31259>>>    End_Object
31260>>>
31260>>>    Set Main_DD to oCustomer_DD
31261>>>    Set Server to oCustomer_DD
31262>>>
31262>>>    Object oWebMainPanel is a cWebPanel
31264>>>        Set piColumnCount to 10
31265>>>
31265>>>        Object oWebTabContainer is a cWebTabContainer
31267>>>            
31267>>>            
31267>>>            Object oVerticalPage is a cWebTabPage
31269>>>                Set piColumnCount to 10
31270>>>                Set psCaption to "Vertical"
31271>>>                
31271>>>                Object oLabel1 is a cWebLabel
31273>>>                    Set piColumnSpan to 1
31274>>>                    Set psCaption to "Default"
31275>>>                End_Object
31276>>>                
31276>>>                Object oLabel2 is a cWebLabel
31278>>>                    Set piColumnSpan to 1
31279>>>                    Set piColumnIndex to 1
31280>>>                    Set psCaption to "Markers"
31281>>>                End_Object
31282>>>                
31282>>>                Object oLabel3 is a cWebLabel
31284>>>                    Set piColumnSpan to 3
31285>>>                    Set piColumnIndex to 2
31286>>>                    Set psCaption to "Labels"
31287>>>                End_Object
31288>>>                
31288>>>                
31288>>>                Object oLabel4 is a cWebLabel
31290>>>                    Set piColumnSpan to 3
31291>>>                    Set piColumnIndex to 5
31292>>>                    Set psCaption to "Labels & Markers"
31293>>>                End_Object
31294>>>                
31294>>>                Object oLabel5 is a cWebLabel
31296>>>                    Set piColumnSpan to 1
31297>>>                    Set piColumnIndex to 8
31298>>>                    Set psCaption to "0 - 100"
31299>>>                End_Object
31300>>>                                
31300>>>                Object oLabel6 is a cWebLabel
31302>>>                    Set piColumnSpan to 1
31303>>>                    Set piColumnIndex to 9
31304>>>                    Set psCaption to "Range"
31305>>>                End_Object
31306>>>                                
31306>>>
31306>>>                Object oSlider1 is a cWebSlider
31308>>>                    Set piColumnSpan to 1
31309>>>                    Set pbVertical to True
31310>>>                    Set piHeight to 400
31311>>>                    Set pbShowLabel to False
31312>>>                End_Object
31313>>>                
31313>>>                
31313>>>                Object oSlider2 is a cWebSlider
31315>>>                    Set piColumnSpan to 1
31316>>>                    Set piColumnIndex to 1
31317>>>                    Set pbVertical to True
31318>>>                    Set piHeight to 400
31319>>>                    Set pbShowLabel to False
31320>>>                    Set pbShowMarkers to True
31321>>>                End_Object
31322>>>                
31322>>>                Object oSlider3 is a cWebSlider
31324>>>                    Set piMaxValue to 5
31325>>>                    Set piMinValue to 1
31326>>>                    Set piInterval to 1
31327>>>                    Set pbVertical to True
31328>>>                    Set piHeight to 400
31329>>>                    Set pbShowLabel to False
31330>>>                    Set piColumnIndex to 2
31331>>>                    Set piColumnSpan to 3
31332>>>                    Procedure OnFillLabels
31335>>>                        Send AddLabel 1 "First" 
31336>>>                        Send AddLabel 2 "Second" 
31337>>>                        Send AddLabel 3 "Third" 
31338>>>                        Send AddLabel 4 "Fourth" 
31339>>>                        Send AddLabel 5 "Fifth" 
31340>>>                    End_Procedure
31341>>>                End_Object
31342>>>                
31342>>>                Object oSlider4 is a cWebSlider
31344>>>                    Set pbVertical to True
31345>>>                    Set piHeight to 400
31346>>>                    Set pbShowLabel to False
31347>>>                    Set piColumnIndex to 5
31348>>>                    Set piColumnSpan to 3
31349>>>                    
31349>>>                    Set piMaxValue to 50
31350>>>                    Set piMinValue to 10
31351>>>                    Set piInterval to 1
31352>>>                    Set pbShowMarkers to True
31353>>>                    Procedure OnFillLabels
31356>>>                        Send AddLabel 10 "Ten" 
31357>>>                        Send AddLabel 20 "Twenty" 
31358>>>                        Send AddLabel 30 "Thirty" 
31359>>>                        Send AddLabel 40 "Forty" 
31360>>>                        Send AddLabel 50 "Fifty" 
31361>>>                    End_Procedure
31362>>>                End_Object
31363>>>                
31363>>>                Object oSlider5 is a cWebSlider
31365>>>                    Set pbVertical to True
31366>>>                    Set piHeight to 400
31367>>>                    Set pbShowLabel to False
31368>>>                    Set piColumnIndex to 8
31369>>>                    Set piColumnSpan to 1
31370>>>                    
31370>>>                    Set psLabel to "1 - 100"
31371>>>                    Set piMaxValue to 100
31372>>>                    Set piMinValue to 1
31373>>>                    Set piInterval to 1
31374>>>                    Set pbShowValue to True
31375>>>                    Set piSliderValue to 50
31376>>>                    Set pbShowMarkers to True
31377>>>                    Set pbShowRange to True
31378>>>                End_Object
31379>>>                
31379>>>                Object oSlider6 is a cWebSlider
31381>>>                    Set pbVertical to True
31382>>>                    Set piHeight to 400
31383>>>                    Set pbShowLabel to False
31384>>>                    Set piColumnIndex to 9
31385>>>                    Set piColumnSpan to 1
31386>>>                    
31386>>>                    Set psLabel to "Range 0 - 100"
31387>>>                    Set piMaxValue to 100
31388>>>                    Set piMinValue to 0
31389>>>                    Set piInterval to 1
31390>>>                    Set piFrom to 20
31391>>>                    Set piTo to 50
31392>>>                    Set pbShowValue to True
31393>>>                    Set pbRanged to True
31394>>>                    Set pbShowRange to True
31395>>>                End_Object
31396>>>            End_Object 
31397>>>
31397>>>            Object oHorizontalPage is a cWebTabPage
31399>>>                Set piColumnCount to 10
31400>>>                Set psCaption to "Horizontal"
31401>>>                
31401>>>                Object oSlider1 is a cWebSlider
31403>>>                    Set psLabel to "Default"
31404>>>                    Set piColumnSpan to 0
31405>>>                End_Object               
31406>>>                
31406>>>                Object oSlider2 is a cWebSlider
31408>>>                    Set psLabel to "Markers"
31409>>>                    Set piColumnSpan to 0
31410>>>                    Set pbShowMarkers to True
31411>>>                End_Object     
31412>>>                
31412>>>                Object oSlider3 is a cWebSlider
31414>>>                    Set psLabel to "Labels"
31415>>>                    Set piMaxValue to 5
31416>>>                    Set piMinValue to 1
31417>>>                    Set piInterval to 1
31418>>>                    Set pbShowMarkers to False
31419>>>                    Procedure OnFillLabels
31422>>>                        Send AddLabel 1 "First" 
31423>>>                        Send AddLabel 2 "Second" 
31424>>>                        Send AddLabel 3 "Third" 
31425>>>                        Send AddLabel 4 "Fourth" 
31426>>>                        Send AddLabel 5 "Fifth" 
31427>>>                    End_Procedure
31428>>>                End_Object
31429>>>                                
31429>>>                Object oSlider4 is a cWebSlider
31431>>>                    Set psLabel to "Labels & Markers"
31432>>>                    Set piMaxValue to 50
31433>>>                    Set piMinValue to 10
31434>>>                    Set piInterval to 1
31435>>>                    Set pbShowMarkers to True
31436>>>                    Procedure OnFillLabels
31439>>>                        Send AddLabel 10 "Ten" 
31440>>>                        Send AddLabel 20 "Twenty" 
31441>>>                        Send AddLabel 30 "Thirty" 
31442>>>                        Send AddLabel 40 "Forty" 
31443>>>                        Send AddLabel 50 "Fifty" 
31444>>>                    End_Procedure
31445>>>                End_Object
31446>>>                
31446>>>                Object oSlider5 is a cWebSlider
31448>>>                    Set psLabel to "1 - 100"
31449>>>                    Set piMaxValue to 100
31450>>>                    Set piMinValue to 1
31451>>>                    Set piInterval to 1
31452>>>                    Set pbShowValue to True
31453>>>                    Set piSliderValue to 50
31454>>>                    Set pbShowMarkers to True
31455>>>                    Set pbShowRange to True
31456>>>                End_Object
31457>>>                
31457>>>                Object oSlider6 is a cWebSlider
31459>>>                    Set psLabel to "Range 0 - 100"
31460>>>                    Set piMaxValue to 100
31461>>>                    Set piMinValue to 0
31462>>>                    Set piInterval to 1
31463>>>                    Set piFrom to 20
31464>>>                    Set piTo to 50
31465>>>                    Set pbShowValue to True
31466>>>                    Set pbRanged to True
31467>>>                    Set pbShowRange to True
31468>>>                End_Object
31469>>>
31469>>>                Object oCustomerCardContainer is a cWebGroup
31471>>>                    Set psCaption to "Customer Sliders:"
31472>>>                    Set piColumnCount to 10
31473>>>    
31473>>>                    Object oCustomer_Number is a cWebForm
31475>>>                        Entry_Item Customer.Customer_Number
31476>>>                        Set piColumnSpan to 4
31477>>>                        Set psLabel to "Customer:"
31478>>>                    End_Object
31479>>>    
31479>>>                    Object oCustomer_Name is a cWebForm
31481>>>                        Entry_Item Customer.Name
31482>>>                        Set piColumnSpan to 0
31483>>>                        Set piColumnIndex to 4
31484>>>                        Set pbShowLabel to False
31485>>>                        Set psLabel to "Customer Name:"
31486>>>                    End_Object
31487>>>                    
31487>>>                    Object oCustomer_Credit_Limit is a cWebSlider
31489>>>                        Entry_Item Customer.Credit_Limit
31490>>>                        Set psLabel to "Credit Limit:"
31491>>>                        Set piMinValue to 10000
31492>>>                        Set piMaxValue to 500000
31493>>>                        Set pbShowValue to True
31494>>>                        Set pbShowRange to True
31495>>>
31495>>>                        Procedure OnFillLabels
31498>>>                            Send AddLabel 100000 "Low"
31499>>>                            Send AddLabel 250000 "Medium" 
31500>>>                            Send AddLabel 400000 "High" 
31501>>>                        End_Procedure
31502>>>                    End_Object
31503>>>                    
31503>>>                    Object oCustomer_Purchases is a cWebSlider
31505>>>                        Entry_Item Customer.Purchases
31506>>>                        Set psLabel to "Purchases:"
31507>>>                        Set piMinValue to 10000
31508>>>                        Set piMaxValue to 500000
31509>>>                        Set pbShowValue to True
31510>>>                        Set pbShowRange to True
31511>>>                    End_Object
31512>>>                    
31512>>>                    Object oCustomer_Balance is a cWebSlider
31514>>>                        Entry_Item Customer.Balance
31515>>>                        Set psLabel to "Balance:"
31516>>>                        Set piMinValue to 10000
31517>>>                        Set piMaxValue to 500000
31518>>>                        Set pbShowValue to True
31519>>>                        Set pbShowRange to True
31520>>>                    End_Object
31521>>>                End_Object
31522>>>            End_Object
31523>>>        End_Object 
31524>>>    End_Object 
31525>>>End_Object
31526>    Use DemoConstrainedGrid.wo
Including file: DemoConstrainedGrid.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoConstrainedGrid.wo)
31526>>>Use cWebView.pkg
31526>>>Use cWebForm.pkg
31526>>>Use cWebCombo.pkg
31526>>>Use cWebButton.pkg
31526>>>Use cWebGrid.pkg
31526>>>Use cWebColumn.pkg
31526>>>Use cWebColumnCombo.pkg
31526>>>Use cWebColumnCheckbox.pkg
31526>>>Use cWebPanel.pkg
31526>>>Use Customer.DD
31526>>>
31526>>>
31526>>>Object oDemoConstrainedGrid is a cWebView
31528>>>    Object oCustomer_DD is a Customer_DataDictionary
31530>>>        Set Auto_Fill_State to True
31531>>>
31531>>>        Procedure OnConstrain
31534>>>            String sFilter sFrom sTo
31534>>>            Forward Send OnConstrain
31536>>>            
31536>>>            WebGet psFilter of oDemoConstrainedGrid to sFilter
31538>>>            WebGet psFilterFrom of oDemoConstrainedGrid to sFrom
31540>>>            WebGet psFilterTo of oDemoConstrainedGrid to sTo
31542>>>            
31542>>>            If (sFilter = "NUMBER") Begin
31544>>>                Constrain Customer.Customer_Number Between sFrom and sTo
31548>>>            End
31548>>>>
31548>>>            
31548>>>            If (sFilter = "NAME") Begin
31550>>>                Constrain Customer.Name Between sFrom and sTo
31554>>>            End
31554>>>>
31554>>>            
31554>>>        End_Procedure
31555>>>    End_Object
31556>>>
31556>>>    Set Main_DD to oCustomer_DD
31557>>>    Set Server to oCustomer_DD
31558>>>    
31558>>>    Set psCaption to "Constrained Grid"
31559>>>    
31559>>>    //  Web Properties used to store constraint values
31559>>>    Property String psFilter ""
31563>>>    Property String psFilterFrom ""
31567>>>    Property String psFilterTo ""
31571>>>    
31571>>>    //  Fill the grid on load
31571>>>    Procedure OnLoad
31574>>>        Send Find of oCustomer_DD FIRST_RECORD Index.1
31575>>>    End_Procedure
31576>>>    
31576>>>    Object oTopPanel is a cWebPanel
31578>>>        Set peRegion to prTop
31579>>>        Set piColumnCount to 4
31580>>>        
31580>>>        Object oFilterCombo is a cWebCombo
31582>>>            Set psLabel to "Filter on:"
31583>>>            
31583>>>            Procedure OnFill
31586>>>                Forward Send OnFill
31588>>>                
31588>>>                Send AddComboItem "" "None"
31589>>>                Send AddComboItem "NUMBER" "Number"
31590>>>                Send AddComboItem "NAME" "Name"
31591>>>            End_Procedure
31592>>>        End_Object
31593>>>        
31593>>>        Object oFromForm is a cWebForm
31595>>>            Set piColumnIndex to 1
31596>>>            Set psLabel to "From:"
31597>>>        End_Object
31598>>>        
31598>>>        Object oToForm is a cWebForm
31600>>>            Set piColumnIndex to 2
31601>>>            Set psLabel to "To:"
31602>>>        End_Object
31603>>>        
31603>>>        Object oUpdate is a cWebButton
31605>>>            Set psCaption to "Update"
31606>>>            Set piColumnIndex to 3
31607>>>            
31607>>>            Set pbServerOnClick to True
31608>>>            Procedure OnClick
31611>>>                String sVal
31611>>>                
31611>>>                WebGet psValue of oFilterCombo to sVal
31612>>>                WebSet psFilter of oDemoConstrainedGrid to sVal
31613>>>                
31613>>>                WebGet psValue of oFromForm to sVal
31614>>>                WebSet psFilterFrom of oDemoConstrainedGrid to sVal
31615>>>                
31615>>>                WebGet psValue of oToForm to sVal
31616>>>                WebSet psFilterTo of oDemoConstrainedGrid to sVal
31617>>>                
31617>>>                Send Rebuild_Constraints of oCustomer_DD
31618>>>
31618>>>                // make sure buffer has correct (old) record
31618>>>                // and rebuild list around valid record close to this one
31618>>>                Send Refind_Records of oCustomer_DD
31619>>>                Send FindDDRecordInBuffer of oList
31620>>>            End_Procedure
31621>>>        End_Object
31622>>>    End_Object
31623>>>    
31623>>>    Object oMainPanel is a cWebPanel
31625>>>        Set peRegion to prCenter
31626>>>            
31626>>>        
31626>>>        Object oList is a cWebGrid
31628>>>            Set pbFillHeight to True
31629>>>            Set pbShowLabel to False
31630>>>            Set piOrdering to 1
31631>>>            
31631>>>            Object oCustomerNumber is a cWebColumn
31633>>>                Set piWidth to 10
31634>>>                Set psCaption to "Number"
31635>>>                Set pbPromptButton to False
31636>>>                
31636>>>                Entry_Item Customer.Customer_Number
31637>>>            End_Object
31638>>>            
31638>>>            Object oCustomerName is a cWebColumn
31640>>>                Set piWidth to 20
31641>>>                Set psCaption to "Name"
31642>>>                Set pbPromptButton to False
31643>>>                
31643>>>                Entry_Item Customer.Name
31644>>>            End_Object
31645>>>            
31645>>>            Object oCustomerAddress is a cWebColumn
31647>>>                Set piWidth to 20
31648>>>                Set psCaption to "Address"
31649>>>                
31649>>>                Entry_Item Customer.Address 
31650>>>            End_Object
31651>>>            
31651>>>            Object oCustomerState is a cWebColumnCombo
31653>>>                Set piWidth to 14
31654>>>                Set psCaption to "State"
31655>>>                
31655>>>                Entry_Item Customer.State
31656>>>            End_Object
31657>>>            
31657>>>            Object oCustomerStatus is a cWebColumnCheckbox
31659>>>                Set piWidth to 8
31660>>>                Set psCaption to "Status"
31661>>>                                
31661>>>                Entry_Item Customer.Status
31662>>>            End_Object
31663>>>            
31663>>>            Object oCalculated is a cWebColumn
31665>>>                Set piWidth to 6
31666>>>                Set psCaption to "Calc"
31667>>>                Set pbEnabled to False
31668>>>                
31668>>>                //  The OnSetCalculatedValue procedure can be used on any data entry object (DEO)
31668>>>                Procedure OnSetCalculatedValue String ByRef sValue
31671>>>                    Move ("$" + string(Customer.Credit_Limit)) to sValue
31672>>>                End_Procedure
31673>>>            End_Object
31674>>>        End_Object
31675>>>    End_Object
31676>>>End_Object
31677>>>
31677>>>
31677>    Use DemoDialogs.wo
Including file: DemoDialogs.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoDialogs.wo)
31677>>>Use cWebView.pkg
31677>>>Use cWebButton.pkg
31677>>>Use cWebApp.pkg
31677>>>Use cWebHorizontalLine.pkg
31677>>>
31677>>>Use DemoActionDialog.wo
Including file: DemoActionDialog.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoActionDialog.wo)
31677>>>>>Use cWebModalDialog.pkg
31677>>>>>Use cWebButton.pkg
31677>>>>>Use cWebLabel.pkg
31677>>>>>Use cWebPanel.pkg
31677>>>>>Use cWebForm.pkg
31677>>>>>
31677>>>>>Object oDemoActionDialog is a cWebModalDialog
31679>>>>>    Set psCaption to "Question.."
31680>>>>>    Set pbResizable to False
31681>>>>>    Set piWidth to 400
31682>>>>>    Set piColumnCount to 4
31683>>>>>    
31683>>>>>    Property String psReturnMsg ""
31687>>>>>    
31687>>>>>    Property String psReturnObj ""
31691>>>>>    
31691>>>>>    Object oMainPanel is a cWebPanel
31693>>>>>        Set peRegion to prCenter
31694>>>>>        
31694>>>>>        Object oQuestionLbl is a cWebLabel
31696>>>>>            Set psCaption to "Are you sure that you want to do this?"
31697>>>>>        End_Object
31698>>>>>        
31698>>>>>        Object oResponseFrm is a cWebForm
31700>>>>>            Set pbShowLabel to False
31701>>>>>        End_Object
31702>>>>>    End_Object
31703>>>>>    
31703>>>>>    Object oButtonPanel is a cWebPanel
31705>>>>>        Set peRegion to prBottom
31706>>>>>        Set piColumnCount to 4
31707>>>>>        
31707>>>>>        Object oOkBtn is a cWebButton
31709>>>>>            Set pbShowLabel to False
31710>>>>>            Set psCaption to "Ok"
31711>>>>>            Set piColumnIndex to 1
31712>>>>>            
31712>>>>>            Procedure OnClick
31715>>>>>                Send SendResponse True
31716>>>>>            End_Procedure
31717>>>>>        End_Object
31718>>>>>        
31718>>>>>        Object oCancelBtn is a cWebButton
31720>>>>>            Set pbShowLabel to False
31721>>>>>            Set psCaption to "Cancel"
31722>>>>>            Set piColumnIndex to 2
31723>>>>>            
31723>>>>>            Procedure OnClick
31726>>>>>                Send SendResponse False
31727>>>>>            End_Procedure
31728>>>>>        End_Object
31729>>>>>    End_Object
31730>>>>>    
31730>>>>>    Set pbServerOnSubmit to True
31731>>>>>    Procedure OnSubmit
31734>>>>>        Send SendResponse True
31735>>>>>    End_Procedure
31736>>>>>    
31736>>>>>    Procedure AskQuestion String sTitle String sQuestion Handle hReturnObj Handle hReturnMsg
31739>>>>>        String sWO sMethod
31739>>>>>        
31739>>>>>        Get WebObjectName of hReturnObj to sWO
31740>>>>>        Get WebMethodName of hReturnObj hReturnMsg to sMethod
31741>>>>>        If (sMethod <> "") Begin
31743>>>>>            WebSet psReturnObj to sWO
31744>>>>>            WebSet psReturnMsg to sMethod
31745>>>>>            
31745>>>>>            WebSet psCaption of oDemoActionDialog to sTitle
31746>>>>>            WebSet psCaption of oQuestionLbl to sQuestion
31747>>>>>            
31747>>>>>            WebSet psValue of oResponseFrm to ""
31748>>>>>                    
31748>>>>>            Send Show of oDemoActionDialog
31749>>>>>        End
31749>>>>>>
31749>>>>>    End_Procedure
31750>>>>>    
31750>>>>>    Procedure SendResponse Boolean bOk
31753>>>>>        Handle hReturnMsg hReturnObj
31753>>>>>        String sName sResponse
31753>>>>>        
31753>>>>>        //  Get handle to web object
31753>>>>>        WebGet psReturnObj of oDemoActionDialog to sName
31754>>>>>        Get WebObjectByName sName to hReturnObj
31755>>>>>        
31755>>>>>        If (hReturnObj > 0) Begin
31757>>>>>            //  Get handle to return message
31757>>>>>            WebGet psReturnMsg of oDemoActionDialog to sName
31758>>>>>            Get WebMethodByName of hReturnObj sName to hReturnMsg
31759>>>>>                
31759>>>>>            If (hReturnMsg > 0) Begin
31761>>>>>                WebGet psValue of oResponseFrm to sResponse
31762>>>>>                Send Hide of oDemoActionDialog
31763>>>>>
31763>>>>>                //  Call handler method
31763>>>>>                Send hReturnMsg of hReturnObj bOk sResponse
31764>>>>>            End
31764>>>>>>
31764>>>>>        End
31764>>>>>>
31764>>>>>    End_Procedure
31765>>>>>End_Object
31766>>>>>
31766>>>>>
31766>>>>>
31766>>>Use DemoQuestionDialog.wo
Including file: DemoQuestionDialog.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoQuestionDialog.wo)
31766>>>>>Use cWebModalDialog.pkg
31766>>>>>Use cWebButton.pkg
31766>>>>>Use cWebLabel.pkg
31766>>>>>Use cWebPanel.pkg
31766>>>>>Use cWebForm.pkg
31766>>>>>
31766>>>>>Object oDemoQuestionDialog is a cWebModalDialog
31768>>>>>    Set psCaption to "Question.."
31769>>>>>    Set pbResizable to False
31770>>>>>    Set piWidth to 400
31771>>>>>    Set piColumnCount to 4
31772>>>>>    
31772>>>>>    // send reply on Esc or "x" as submit, which will send the callback on a cancel
31772>>>>>    Set pbServerOnEscape to True
31773>>>>>    
31773>>>>>    
31773>>>>>    Object oMainPanel is a cWebPanel
31775>>>>>        Set peRegion to prCenter
31776>>>>>        
31776>>>>>        Object oQuestionLbl is a cWebLabel
31778>>>>>            Set psCaption to "Are you sure that you want to do this?"
31779>>>>>        End_Object
31780>>>>>        
31780>>>>>        Object oResponseFrm is a cWebForm
31782>>>>>            Set pbShowLabel to False
31783>>>>>        End_Object
31784>>>>>    End_Object
31785>>>>>    
31785>>>>>    Object oButtonPanel is a cWebPanel
31787>>>>>        Set peRegion to prBottom
31788>>>>>        Set piColumnCount to 4
31789>>>>>        
31789>>>>>        Object oOkBtn is a cWebButton
31791>>>>>            Set pbShowLabel to False
31792>>>>>            Set psCaption to "Ok"
31793>>>>>            Set piColumnIndex to 1
31794>>>>>            
31794>>>>>            Procedure OnClick
31797>>>>>                Send Ok
31798>>>>>            End_Procedure
31799>>>>>        End_Object
31800>>>>>        
31800>>>>>        Object oCancelBtn is a cWebButton
31802>>>>>            Set pbShowLabel to False
31803>>>>>            Set psCaption to "Cancel"
31804>>>>>            Set piColumnIndex to 2
31805>>>>>            
31805>>>>>            Procedure OnClick
31808>>>>>                Send Cancel
31809>>>>>            End_Procedure
31810>>>>>        End_Object
31811>>>>>    End_Object
31812>>>>>    
31812>>>>>    Set pbServerOnSubmit to True
31813>>>>>   
31813>>>>>    Procedure OnSubmit
31816>>>>>        Send Ok
31817>>>>>    End_Procedure
31818>>>>>    
31818>>>>>    Procedure InitializeDialog String sTitle String sQuestion
31821>>>>>        WebSet psCaption of oDemoQuestionDialog to sTitle
31822>>>>>        WebSet psCaption of oQuestionLbl to sQuestion
31823>>>>>        WebSet psValue of oResponseFrm to ""
31824>>>>>    End_Procedure
31825>>>>>    
31825>>>>>    Procedure GetAnswers String ByRef sResponse Boolean ByRef bCancel
31828>>>>>        WebGet psValue of oResponseFrm to sResponse
31829>>>>>        WebGet pbCanceled to bCancel
31830>>>>>    End_Procedure
31831>>>>>
31831>>>>>    Procedure OnEscape
31834>>>>>        Forward Send OnEscape
31836>>>>>    End_Procedure
31837>>>>>    
31837>>>>>End_Object
31838>>>>>
31838>>>>>
31838>>>>>
31838>>>Use DemoFileDialog.wo
Including file: DemoFileDialog.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoFileDialog.wo)
31838>>>>>Use cWebModalDialog.pkg
31838>>>>>Use cWebButton.pkg
31838>>>>>Use cWebTreeView.pkg
31838>>>>>Use cWebImage.pkg
31838>>>>>Use cWebPanel.pkg
31838>>>>>Use cWebList.pkg
31838>>>>>Use cWebColumn.pkg
31838>>>>>
31838>>>>>Define C_FileAttributeDirectory for |CI$0010
31838>>>>>
31838>>>>>// tFileTime
31838>>>>>// ---------
31838>>>>>
31838>>>>>// A 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 (UTC).
31838>>>>>Struct tFileTime
31838>>>>>    DWord dwLowDateTime    // Low-order part of the file time.
31838>>>>>    DWord dwHighDateTime   // High-order part of the file time.
31838>>>>>End_Struct
31838>>>>>
31838>>>>>// tWin32FindData
31838>>>>>// --------------
31838>>>>>
31838>>>>>// This structure describes a file that the FindFirstFile, FindFirstFileEx, or FindNextFile functions find.
31838>>>>>Struct tWin32FindData
31838>>>>>    DWord     dwFileAttributes                
31838>>>>>    tFileTime ftCreationTime    
31838>>>>>    tFileTime ftCreationTime    
31838>>>>>    tFileTime ftLastAccessTime  
31838>>>>>    tFileTime ftLastAccessTime  
31838>>>>>    tFileTime ftLastWriteTime   
31838>>>>>    tFileTime ftLastWriteTime   
31838>>>>>    DWord     nFileSizeHigh
31838>>>>>    DWord     nFileSizeLow
31838>>>>>    DWord     dwReserved0
31838>>>>>    DWord     dwReserved1
31838>>>>>    Char[MAX_PATH] cFileName         
31838>>>>>    Char[14]       cAlternateFileName
31838>>>>>End_Struct
31838>>>>>
31838>>>>>External_Function FindClose "FindClose" Kernel32.dll Handle hOpenFile Returns Integer
31839>>>>>External_Function FindFirstFile "FindFirstFileA" Kernel32.dll String sFileSpec Pointer lpWin32FindData Returns Handle
31840>>>>>External_Function FindNextFile "FindNextFileA" Kernel32.dll Handle hFindFile Pointer lpWin32FindData Returns Handle
31841>>>>>
31841>>>>>Object oDemoFileDialog is a cWebModalDialog
31843>>>>>    Set piColumnCount to 3
31844>>>>>    Set piWidth to 900
31845>>>>>    Set piHeight to 600
31846>>>>>    Set psCaption to "Select folder.." 
31847>>>>>
31847>>>>>    
31847>>>>>    Object oLeftPanel is a cWebPanel
31849>>>>>        Set peRegion to prLeft
31850>>>>>        Set pbResizable to True
31851>>>>>        Set piWidth to 300
31852>>>>>        
31852>>>>>        Object oTreeView is a cWebTreeView
31854>>>>>            Set pbFillHeight to True
31855>>>>>            Property String psStartupPath "C:\Users\Harm\Pictures\"
31857>>>>>//            Send RegisterDownloadFolder of ghoWebResourceManager "C:\Users\Harm\Pictures\"
31857>>>>>            
31857>>>>>            // To fill the tree with items, we implement the OnLoadChildNodes event that is called
31857>>>>>            // by the tree engine. It returns sub tree items based on the parent id, value or the 
31857>>>>>            // current level. In this implementation we look at the file system and generate
31857>>>>>            // items for that.
31857>>>>>            Function OnLoadChildNodes String sId String sValue Integer iLevel Returns tWebTreeItem[]
31860>>>>>                tWebTreeItem[] aItems
31860>>>>>                tWebTreeItem[] aItems
31861>>>>>                Integer iCount iDrive iDriveStatus
31861>>>>>                String sLoc sLine
31861>>>>>                
31861>>>>>                String sDirectory sFileName sSize
31861>>>>>                Integer iRow iAttributes iSize iVoid
31861>>>>>                Number nSize
31861>>>>>                Boolean bIsDirectory
31861>>>>>                Pointer lpWin32FindData
31861>>>>>                Handle hFileFind hMoreFiles
31861>>>>>                tWin32FindData Win32FindData
31861>>>>>                tWin32FindData Win32FindData
31861>>>>>                
31861>>>>>                Move 0 to iCount
31862>>>>>                
31862>>>>>                If (iLevel = 0) Begin
31864>>>>>                    //  At the root level, we display the drives that are available
31864>>>>>                    For iDrive from 1 to 26
31870>>>>>>
31870>>>>>                        GetDskInfo iDrive iDriveStatus
31871>>>>>                        If (iDriveStatus > Drive_root_not_exist) Begin
31873>>>>>                            Move (Character (iDrive + 64) + ":\") to sLoc
31874>>>>>                            Move sLoc   to aItems[iCount].sName
31875>>>>>                            Move sLoc   to aItems[iCount].sValue        //  Store the full path as value
31876>>>>>                            Move sLoc   to aItems[iCount].sAltText
31877>>>>>                            Move True   to aItems[iCount].bFolder
31878>>>>>                            Move True   to aItems[iCount].bLoadChildren
31879>>>>>                            
31879>>>>>                            //  We need to generate a unique ID here without special characters, since we want to return multiple levels at initialization
31879>>>>>                            Move (Replaces(":", Replaces("\", sLoc, ""), "")) to aItems[iCount].sId
31880>>>>>                            Move sId to aItems[iCount].sParentId
31881>>>>>                            
31881>>>>>                            //  We have different icons for some of the drive types
31881>>>>>                            Case Begin
31881>>>>>                                Case (iDriveStatus = Drive_fixed)
31883>>>>>                                    Move "Images/Harddisk.png" to aItems[iCount].sIcon
31884>>>>>                                    Case Break
31885>>>>>                                Case (iDriveStatus = Drive_cdrom)
31888>>>>>                                    Move "Images/CDRom.png" to aItems[iCount].sIcon
31889>>>>>                                    Case Break
31890>>>>>                                Case (iDriveStatus = Drive_remote)
31893>>>>>                                    Move "Images/NetworkDrive.png" to aItems[iCount].sIcon
31894>>>>>                                    Case Break
31895>>>>>                            Case End
31895>>>>>                            
31895>>>>>                            Increment iCount
31896>>>>>                        End
31896>>>>>>
31896>>>>>                    Loop
31897>>>>>>
31897>>>>>                End
31897>>>>>>
31897>>>>>                Else Begin
31898>>>>>                    
31898>>>>>                    // Test if this is actually a valid directory.... 
31898>>>>>                    Delegate Get IsDirectory sValue to bIsDirectory
31900>>>>>                    
31900>>>>>                    If (bIsDirectory) Begin
31902>>>>>                
31902>>>>>                        // Iterate all the files in this directory....
31902>>>>>                        Move (AddressOf(Win32FindData)) to lpWin32FindData
31903>>>>>                        Move (FindFirstFile(sValue - "*.*", lpWin32FindData)) to hFileFind
31904>>>>>                
31904>>>>>                        If (hFileFind <> -1) Begin
31906>>>>>                            Repeat
31906>>>>>>
31906>>>>>                                Get CharArrayToString Win32FindData.cFileName to sFileName
31907>>>>>                                Move Win32FindData.dwFileAttributes to iAttributes
31908>>>>>                
31908>>>>>                                // Is it a file or a directory?....
31908>>>>>                                If (IsFlagIn(C_FileAttributeDirectory, iAttributes)) Begin
31910>>>>>                                    If (sFileName <> "" and sFileName <> "." and sFileName <> "..") Begin
31912>>>>>                                        Get CharArrayToString Win32FindData.cFileName to sFileName
31913>>>>>                                        Move Win32FindData.dwFileAttributes to iAttributes
31914>>>>>                    
31914>>>>>                                        Move (sValue + sFileName + "\") to sLoc
31915>>>>>                                
31915>>>>>                                        Move sFileName      to aItems[iCount].sName
31916>>>>>                                        Move sLoc           to aItems[iCount].sValue    //  Store the full path as value
31917>>>>>                                        Move sLoc           to aItems[iCount].sAltText
31918>>>>>                                        Move True           to aItems[iCount].bFolder
31919>>>>>                                        Move True           to aItems[iCount].bLoadChildren
31920>>>>>    
31920>>>>>                                        //  We need to generate a unique ID here without special characters, since we want to return multiple levels at initialization
31920>>>>>                                        Move (Replaces(":", Replaces("\", sLoc, ""), "")) to aItems[iCount].sId
31921>>>>>                                        Move sId to aItems[iCount].sParentId
31922>>>>>    
31922>>>>>                                        Increment iCount
31923>>>>>                                    End
31923>>>>>>
31923>>>>>                                End
31923>>>>>>
31923>>>>>                
31923>>>>>                                Move (FindNextFile(hFileFind, lpWin32FindData)) to hMoreFiles
31924>>>>>                            Until (hMoreFiles = 0)
31926>>>>>                
31926>>>>>                            Move (FindClose(hFileFind)) to iVoid
31927>>>>>                        End
31927>>>>>>
31927>>>>>                    End
31927>>>>>>
31927>>>>>                    
31927>>>>>                    
31927>>>>>//                    //  At sub levels we read the contents of the folder and return those as tree items
31927>>>>>//                    Direct_Input ("dir: " + sValue)
31927>>>>>//    
31927>>>>>//                    Repeat
31927>>>>>//                        Readln sLine
31927>>>>>//                        
31927>>>>>//                        Move (Trim(sLine)) to sLine
31927>>>>>//                        
31927>>>>>//                        If (sLine <> "" and sLine <> "[.]" and sLine <> "[..]") Begin
31927>>>>>//                            //  Switch between folders and files
31927>>>>>//                            If (Left(sLine, 1) = "[") Begin
31927>>>>>//                                Move (Mid(sLine, Length(sLine) - 2, 2)) to sLine
31927>>>>>//                                
31927>>>>>//                                Move (sValue + Trim(sLine) + "\") to sLoc
31927>>>>>//                            
31927>>>>>//                                Move (Trim(sLine))  to aItems[iCount].sName
31927>>>>>//                                Move sLoc           to aItems[iCount].sValue    //  Store the full path as value
31927>>>>>//                                Move sLoc           to aItems[iCount].sAltText
31927>>>>>//                                Move True           to aItems[iCount].bFolder
31927>>>>>//                                Move True           to aItems[iCount].bLoadChildren
31927>>>>>//                            End
31927>>>>>//                            Else Begin
31927>>>>>//                                Move (sValue + Trim(sLine)) to sLoc
31927>>>>>//                                
31927>>>>>//                                Move (Trim(sLine))  to aItems[iCount].sName
31927>>>>>//                                Move sLoc           to aItems[iCount].sValue    //  Store the full path as value
31927>>>>>//                                Move sLoc           to aItems[iCount].sAltText
31927>>>>>//                                Move False          to aItems[iCount].bFolder
31927>>>>>//                                Move False          to aItems[iCount].bLoadChildren
31927>>>>>//                            End
31927>>>>>//                            
31927>>>>>//                            //  We need to generate a unique ID here without special characters, since we want to return multiple levels at initialization
31927>>>>>//                            Move (Replaces(":", Replaces("\", sLoc, ""), "")) to aItems[iCount].sId
31927>>>>>//                            Move sId to aItems[iCount].sParentId
31927>>>>>//                            
31927>>>>>//                            Increment iCount
31927>>>>>//                        End
31927>>>>>//                    Until (SeqEof) 
31927>>>>>                End
31927>>>>>>
31927>>>>>                
31927>>>>>                Function_Return aItems
31928>>>>>            End_Function
31929>>>>>            
31929>>>>>            Set pbServerOnSelect to True
31930>>>>>            
31930>>>>>            Procedure OnSelect String sId String sValue Integer iLevel
31933>>>>>
31933>>>>>                
31933>>>>>                // Now Refresh oFileList
31933>>>>>                WebSet psDirectory of oFileList to sValue
31935>>>>>                Send GridRefresh to oFileList
31936>>>>>            End_Procedure
31937>>>>>            
31937>>>>>            
31937>>>>>            //  We override the OnLoad event and manually fill the tree. We need to do this because
31937>>>>>            //  we want to expand it to our initial path and select the current item.
31937>>>>>            Procedure OnLoad
31940>>>>>                tWebTreeItem[] aTree aLevel
31940>>>>>                tWebTreeItem[] aTree aLevel
31942>>>>>                tWebTreeItem tItem
31942>>>>>                tWebTreeItem tItem
31942>>>>>                String sPath sCurPath sPart
31942>>>>>                Integer iPos iTo iLevel iItem
31942>>>>>                Boolean bContinue
31942>>>>>                
31942>>>>>                //  Load root level
31942>>>>>                Get OnLoadChildNodes "" "" 0 to aTree
31943>>>>>                
31943>>>>>                Get psStartupPath to sPath
31944>>>>>                Move 0 to iPos
31945>>>>>                Move 0 to iItem
31946>>>>>                Move 1 to iLevel
31947>>>>>                
31947>>>>>                //  Loop through the parts of the path (the different folders)
31947>>>>>                While (iPos < Length(sPath))                    
31951>>>>>                    //  Cut the current folder out of the full path string
31951>>>>>                    Move (Pos("\", sPath, iPos + 1)) to iTo
31952>>>>>                    If (iTo = 0) Begin
31954>>>>>                        Move (Length(sPath)) to iTo
31955>>>>>                    End
31955>>>>>>
31955>>>>>                    Move (Mid(sPath, iTo - iPos, iPos + 1)) to sPart
31956>>>>>                    
31956>>>>>                    If (Trim(sPart) <> "") Begin
31958>>>>>                        Move (Trim(sCurPath) + Trim(sPart)) to sCurPath
31959>>>>>                        Move True to bContinue
31960>>>>>                        
31960>>>>>                        //  Find the folder in the generated tree nodes
31960>>>>>                        While (iItem < SizeOfArray(aTree) and bContinue)
31964>>>>>                            If (aTree[iItem].sValue = sCurPath) Begin
31966>>>>>                                Move aTree[iItem] to tItem
31967>>>>>                                
31967>>>>>                                //  Mark as expanded
31967>>>>>                                Move True to aTree[iItem].bExpanded
31968>>>>>                                
31968>>>>>                                //  Generate the tree nodes for the new level
31968>>>>>                                Get OnLoadChildNodes aTree[iItem].sId aTree[iItem].sValue iLevel to aLevel
31969>>>>>                                Get ConcatArrays aTree aLevel to aTree
31970>>>>>                                
31970>>>>>                                Move False to bContinue
31971>>>>>                            End
31971>>>>>>
31971>>>>>                            
31971>>>>>                            Increment iItem
31972>>>>>                        Loop
31973>>>>>>
31973>>>>>                    End
31973>>>>>>
31973>>>>>                    
31973>>>>>                    Move iTo to iPos
31974>>>>>                    Increment iLevel
31975>>>>>                Loop
31976>>>>>>
31976>>>>>                
31976>>>>>                //  Update the tree with the new nodes
31976>>>>>                Send UpdateSubNodes "" aTree
31977>>>>>                
31977>>>>>                //  Mark the current item as selected
31977>>>>>                If (tItem.sId <> "") Begin
31979>>>>>                    Send Select tItem.sId
31980>>>>>                    
31980>>>>>                End
31980>>>>>>
31980>>>>>            End_Procedure
31981>>>>>            
31981>>>>>            Function ConcatArrays tWebTreeItem[] aMain tWebTreeItem[] aAdd Returns tWebTreeItem[]
31984>>>>>                Integer i iTo
31984>>>>>                
31984>>>>>                Move (SizeOfArray(aAdd) - 1) to iTo
31985>>>>>                For i from 0 to iTo
31991>>>>>>
31991>>>>>                    Move aAdd[i] to aMain[SizeOfArray(aMain)]
31992>>>>>                Loop
31993>>>>>>
31993>>>>>                    
31993>>>>>                Function_Return aMain
31994>>>>>            End_Function
31995>>>>>            
31995>>>>>        End_Object
31996>>>>>        
31996>>>>>        Object oRefresh is a cWebButton
31998>>>>>            Set psCaption to "Refresh"
31999>>>>>            Set pbShowLabel to False
32000>>>>>            Set pbServerOnClick to True
32001>>>>>            
32001>>>>>            Procedure OnClick
32004>>>>>                Forward Send OnClick
32006>>>>>                
32006>>>>>                Send FullRefresh of oTreeView
32007>>>>>            End_Procedure
32008>>>>>        End_Object
32009>>>>>    End_Object
32010>>>>>    
32010>>>>>    Object oCenter is a cWebPanel
32012>>>>>        Set peRegion to prCenter
32013>>>>>
32013>>>>>        Object oCenterPanel is a cWebPanel
32015>>>>>            Set peRegion to prCenter
32016>>>>>        
32016>>>>>            Object oPreview is a cWebImage
32018>>>>>                Set pbFillHeight to True
32019>>>>>                
32019>>>>>                Set pePosition to wiCenter
32020>>>>>                Set pbScroll to True
32021>>>>>                Set pbShowBorder to True
32022>>>>>                Set psUrl to "Images/PoweredByDataFlex.png"
32023>>>>>            End_Object
32024>>>>>        End_Object
32025>>>>>
32025>>>>>        
32025>>>>>        Object oBottomPanel is a cWebPanel
32027>>>>>            Set peRegion to prBottom
32028>>>>>            Set pbResizable to True
32029>>>>>            Set piHeight to 250
32030>>>>>            Set piMinHeight to 200
32031>>>>>            
32031>>>>>            Object oFileList is a cWebList
32033>>>>>                Property String psDirectory ""
32037>>>>>                
32037>>>>>                Set pbFillHeight to True
32038>>>>>                
32038>>>>>                Set pbDataAware to False
32039>>>>>                Set piSortColumn to 0
32040>>>>>                
32040>>>>>                Object oFileName is a cWebColumn
32042>>>>>                    Set psCaption to "File name"
32043>>>>>                    Set piWidth to 10
32044>>>>>                End_Object
32045>>>>>                
32045>>>>>                Object oFileSize is a cWebColumn
32047>>>>>                    Set psCaption to "Size"
32048>>>>>                    Set piWidth to 4
32049>>>>>                End_Object 
32050>>>>>                
32050>>>>>                Procedure OnChangeCurrentRow String sFromRowID String sToRowID
32053>>>>>                    //  If an item is selected in the tree, we want to update the previewer if it is an image.
32053>>>>>                    //  If no image is selected, we reset the previewer to the default image.
32053>>>>>                    String sExt sPath
32053>>>>>                    
32053>>>>>                    WebGet psDirectory to sPath
32054>>>>>                    If (Right(sPath, 1) <> "\") Move (sPath + "\") to sPath
32057>>>>>                    Move (sPath + sToRowID) to sPath
32058>>>>>                    
32058>>>>>                    Move (Lowercase(Trim(Right(sPath, Length(sPath) - RightPos(".", sPath))))) to sExt
32059>>>>>                    If (sExt = "jpg" or sExt = "png" or sExt = "gif" or sExt = "bmp" or sExt = "ico" or sExt = "jpeg" or sExt = "svg") Begin
32061>>>>>                        WebSet psUrl of (oPreview) to ""
32062>>>>>                        
32062>>>>>                        
32062>>>>>                        Send UpdateLocalImage of oPreview sPath
32063>>>>>                    End
32063>>>>>>
32063>>>>>                    Else Begin
32064>>>>>                        WebSet psUrl of (oPreview) to "Images/PoweredByDataFlex.png"
32065>>>>>                    End
32065>>>>>>
32065>>>>>                End_Procedure                
32066>>>>>                
32066>>>>>                
32066>>>>>                
32066>>>>>                Procedure OnManualLoadData tWebRow[] ByRef aTheRows String ByRef sCurrentRowID
32069>>>>>                    String sDirectory sFileName sSize
32069>>>>>                    Integer iRow iAttributes iSize iVoid
32069>>>>>                    Number nSize
32069>>>>>                    Boolean bIsDirectory
32069>>>>>                    Pointer lpWin32FindData
32069>>>>>                    Handle hFileFind hMoreFiles
32069>>>>>                    tWin32FindData Win32FindData
32069>>>>>                    tWin32FindData Win32FindData
32069>>>>>
32069>>>>>                    Move 0 to iRow
32070>>>>>                    WebGet psDirectory to sDirectory
32071>>>>>                    
32071>>>>>                    // Test if this is actually a valid directory.... 
32071>>>>>                    Delegate Get IsDirectory sDirectory to bIsDirectory
32073>>>>>                    
32073>>>>>                    If (bIsDirectory) Begin
32075>>>>>                        // Iterate all the files in this directory....
32075>>>>>                        Move (AddressOf(Win32FindData)) to lpWin32FindData
32076>>>>>                        Move (FindFirstFile(sDirectory - "*.*", lpWin32FindData)) to hFileFind
32077>>>>>                
32077>>>>>                        If (hFileFind <> -1) Begin
32079>>>>>                            Repeat
32079>>>>>>
32079>>>>>                                Get CharArrayToString Win32FindData.cFileName to sFileName
32080>>>>>                                Move Win32FindData.dwFileAttributes to iAttributes
32081>>>>>                
32081>>>>>                                // Is it a file or a directory?....
32081>>>>>                                If (not(IsFlagIn(C_FileAttributeDirectory, iAttributes))) Begin
32083>>>>>                                    // Get the Size string
32083>>>>>                                    Move Win32FindData.nFileSizeLow to iSize
32084>>>>>                                    If (iSize < 1000) Begin
32086>>>>>                                        Move (String(iSize) * "bytes") to sSize
32087>>>>>                                    End
32087>>>>>>
32087>>>>>                                    Else If (iSize < 1000000) Begin
32090>>>>>                                        Move (iSize / 1000.0) to nSize
32091>>>>>                                        Move (FormatNumber(nSize, 2) * "KB") to sSize
32092>>>>>                                    End
32092>>>>>>
32092>>>>>                                    Else Begin
32093>>>>>                                        Move (iSize / 1000000.0) to nSize
32094>>>>>                                        Move (FormatNumber(nSize, 2) * "MB") to sSize
32095>>>>>                                    End
32095>>>>>>
32095>>>>>                                    
32095>>>>>                                    
32095>>>>>                                    // Populate the row....
32095>>>>>                                    Move sFileName to aTheRows[iRow].sRowID    // RowId
32096>>>>>                                    Move sFileName to aTheRows[iRow].aCells[0].sValue    // File Name
32097>>>>>                                    Move sSize     to aTheRows[iRow].aCells[1].sValue    // File Size 
32098>>>>>                                    If (iRow = 0) Begin
32100>>>>>                                        Move sFileName to sCurrentRowID
32101>>>>>                                        Send OnChangeCurrentRow "" sFileName
32102>>>>>                                    End
32102>>>>>>
32102>>>>>                                    Increment iRow
32103>>>>>                                End
32103>>>>>>
32103>>>>>                
32103>>>>>                                Move (FindNextFile(hFileFind, lpWin32FindData)) to hMoreFiles
32104>>>>>                            Until (hMoreFiles = 0)
32106>>>>>                
32106>>>>>                            Move (FindClose(hFileFind)) to iVoid
32107>>>>>                        End
32107>>>>>>
32107>>>>>                    End
32107>>>>>>
32107>>>>>                    
32107>>>>>                End_Procedure
32108>>>>>            End_Object
32109>>>>>        End_Object
32110>>>>>    End_Object    
32111>>>>>    
32111>>>>>    
32111>>>>>    Set pbServerOnSubmit to True
32112>>>>>    Procedure OnSubmit
32115>>>>>        String sPath sFile
32115>>>>>        
32115>>>>>        WebGet psDirectory of oFileList to sPath
32116>>>>>        If (Right(sPath, 1) <> "\") Move (sPath + "\") to sPath
32119>>>>>        
32119>>>>>        WebGet psCurrentRowID of oFileList to sFile
32120>>>>>        Move (sPath + sFile) to sPath
32121>>>>>        
32121>>>>>        Send ShowInfoBox ("Selected path '" + sPath + "'")
32122>>>>>    End_Procedure
32123>>>>>
32123>>>>>    Function CharArrayToString Char[] ACharArray Returns String
32126>>>>>        // Converts an array of type Char into a DataFlex string. The returned string will not
32126>>>>>        // be null terminated.
32126>>>>>        String sReturn
32126>>>>>        Address pStr
32126>>>>>    
32126>>>>>        Move (AddressOf(ACharArray)) to pStr
32127>>>>>        Move pStr to sReturn         // use built-in DataFlex string address to string conversion
32128>>>>>        Move (CString(sReturn)) to sReturn
32129>>>>>        
32129>>>>>        Function_Return sReturn
32130>>>>>    End_Function
32131>>>>>    
32131>>>>>
32131>>>>>    Function IsDirectory String sPath Returns Boolean
32134>>>>>        // Returns True if the sPath is a directory.
32134>>>>>        Integer iAttributes
32134>>>>>        Move (GetFileAttributes(sPath)) to iAttributes
32135>>>>>        If (iAttributes <> -1) Begin
32137>>>>>            Function_Return  ((iAttributes iand C_FileAttributeDirectory) = C_FileAttributeDirectory)
32138>>>>>        End
32138>>>>>>
32138>>>>>        Function_Return False // File is not a directory (or doesn't exist)
32139>>>>>    End_Function
32140>>>>>End_Object
32141>>>>>
32141>>>>>
32141>>>
32141>>>Object oDemoDialogs is a cWebView
32143>>>    Set piWidth to 300
32144>>>    Set psCaption to "Dialogs"
32145>>>    
32145>>>    Object oInfoBtn is a cWebButton
32147>>>        Set psCaption to "Standard Info Dialog"
32148>>>        
32148>>>        Procedure OnClick
32151>>>            Send ShowInfoBox of oWebApp "Hello world!"
32152>>>        End_Procedure
32153>>>    End_Object
32154>>>    
32154>>>    Object oConfirmBtn is a cWebButton
32156>>>        Set psCaption to "Standard Confirmation Dialog"
32157>>>        
32157>>>        Procedure ConfirmResponse Integer eConfirmMode
32160>>>            If (eConfirmMode = cmYes) Begin
32162>>>                WebSet pbEnabled to False
32163>>>            End
32163>>>>
32163>>>        End_Procedure
32164>>>        //  Publish the response method (Security!)
32164>>>        WebPublishProcedure ConfirmResponse
32165>>>        
32165>>>        Procedure OnClick
32168>>>            Send ShowYesNo of oWebApp (Self) (RefProc(ConfirmResponse)) "Are you sure you want to disable this button?" "Question title!"
32169>>>        End_Procedure
32170>>>    End_Object
32171>>>    
32171>>>    Object oCustomMessage is a cWebButton
32173>>>        Set psCaption to "Custom Message Box"
32174>>>        
32174>>>        Procedure CustomResponse Integer eBtn
32177>>>            Send ShowInfoBox ("You liked " + String(eBtn) + "!")
32178>>>        End_Procedure
32179>>>        //  Publish the response method (Security!)
32179>>>        WebPublishProcedure CustomResponse
32180>>>
32180>>>        Procedure OnClick
32183>>>            String[] aButtons
32184>>>            
32184>>>            Move "One"      to aButtons[0]
32185>>>            Move "Two"      to aButtons[1]
32186>>>            Move "Three"    to aButtons[2]
32187>>>            Move "Four"     to aButtons[3]
32188>>>            
32188>>>            Send ShowMessageBox of oWebApp Self (RefProc(CustomResponse)) "Pick your favorite number!" "Multiple choice" "WebMsgBoxConfirm" 1  aButtons
32189>>>        End_Procedure        
32190>>>    End_Object
32191>>>
32191>>>    Object oWebHorizontalLine1 is a cWebHorizontalLine
32193>>>    End_Object
32194>>>
32194>>>    Object oStandardAction is a cWebButton
32196>>>        Set psCaption to "Standard Question Dialog"
32197>>>        
32197>>>        // Standard dialog calls OnCloseModalDialog callback upon completion
32197>>>        Procedure OnCloseModalDialog Handle hoModalDialog
32200>>>            Boolean bCancel
32200>>>            String sAnswer
32200>>>            Send GetAnswers of hoModalDialog (&sAnswer) (&bCancel) 
32201>>>            If (bCancel) Begin
32203>>>                Send ShowInfoBox ("You didn't want to answer, did you?")
32204>>>            End
32204>>>>
32204>>>            Else Begin
32205>>>                Send ShowInfoBox ("Your name is '" + sAnswer + "'!!!")
32206>>>            End
32206>>>>
32206>>>        End_Procedure
32207>>>
32207>>>        Procedure OnClick
32210>>>            Send InitializeDialog of oDemoQuestionDialog "Question" "What is your name?" 
32211>>>            Send Popup of oDemoQuestionDialog Self
32212>>>        End_Procedure
32213>>>        
32213>>>    End_Object
32214>>>    
32214>>>    Object oCustomAction is a cWebButton
32216>>>        Set psCaption to "Custom Question Dialog"
32217>>>        
32217>>>        Procedure HandleResponse Boolean bOk String sAnswer
32220>>>            If (bOk) Begin
32222>>>                Send ShowInfoBox ("Your name is '" + sAnswer + "'!!!")
32223>>>            End
32223>>>>
32223>>>            Else Begin
32224>>>                Send ShowInfoBox ("You didn't want to answer, did you?")
32225>>>            End
32225>>>>
32225>>>        End_Procedure
32226>>>        //  Publish the response method (Security!)
32226>>>        WebPublishProcedure HandleResponse
32227>>>
32227>>>        Procedure OnClick
32230>>>            Send AskQuestion of oDemoActionDialog "Question" "What is your name?" (Self) (RefProc(HandleResponse))
32231>>>        End_Procedure
32232>>>    End_Object
32233>>>    
32233>>>    Object oWebHorizontalLine2 is a cWebHorizontalLine
32235>>>    End_Object
32236>>>    
32236>>>    Object oErrorDialog is a cWebButton
32238>>>        Set psCaption to "Standard Error Dialog"
32239>>>        
32239>>>        Procedure OnClick
32242>>>            Error 150 "Demo error message shown as unhandled error!"
32243>>>>
32243>>>        End_Procedure
32244>>>    End_Object
32245>>>    
32245>>>    Object oUserErrorDialog is a cWebButton
32247>>>        Set psCaption to "User Error Dialog"
32248>>>        
32248>>>        Procedure OnClick
32251>>>            Send UserError "Friendly error message using the UserError procedure." "Friendly error message :-)"
32252>>>        End_Procedure
32253>>>    End_Object
32254>>>
32254>>>    Object oUnhandledClientError is a cWebButton
32256>>>        Set piColumnSpan to 0
32257>>>        Set psCaption to "Clientside Error Dialog"
32258>>>    
32258>>>        Set psClientOnClick to "DoesNotExist"
32259>>>        Set pbServerOnClick to False
32260>>>    End_Object
32261>>>
32261>>>    Object oWebHorizontalLine3 is a cWebHorizontalLine
32263>>>    End_Object
32264>>>    
32264>>>    
32264>>>    Object oOpenFile is a cWebButton
32266>>>        Set psCaption to "File Dialog"
32267>>>        
32267>>>        Procedure OnClick
32270>>>            Send Show of oDemoFileDialog
32271>>>        End_Procedure
32272>>>    End_Object
32273>>>End_Object
32274>>>
32274>>>
32274>    Use DemoManualDataAwareGrid.wo
Including file: DemoManualDataAwareGrid.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoManualDataAwareGrid.wo)
32274>>>// Inventory List
32274>>>//
32274>>>
32274>>>Use cWebView.pkg
32274>>>Use cWebPanel.pkg
32274>>>Use cWebGrid.pkg
32274>>>Use cWebColumn.pkg
32274>>>
32274>>>Use Vendor.DD
32274>>>Use Invt.DD
32274>>>
32274>>>
32274>>>Object oDemoManualDataAwareGrid is a cWebView
32276>>>    Set piColumnCount to 10
32277>>>    Set psCaption to "Manual Data Aware Grid"
32278>>>    Set piWidth to 750
32279>>>    
32279>>>
32279>>>    Object oVendor_DD is a Vendor_DataDictionary
32281>>>    End_Object 
32282>>>
32282>>>    Object oInvt_DD is a Invt_DataDictionary
32284>>>        Set DDO_Server To oVendor_DD
32285>>>    End_Object 
32286>>>
32286>>>    Set Main_DD To oInvt_DD
32287>>>    Set Server  To oInvt_DD
32288>>>
32288>>>    Object oGrid is a cWebGrid 
32290>>>        Set piHeight to 500
32291>>>        Set pbColumnSortable to True
32292>>>        Set peDbGridType to gtManual
32293>>>        
32293>>>        Object oInvt_Description is a cWebColumn
32295>>>            Entry_Item Invt.Description
32296>>>            Set psCaption to "Inventory Item"
32297>>>            Set piWidth to 75
32298>>>            
32298>>>            Set pbSortable to True
32299>>>        End_Object
32300>>>
32300>>>        Object oInvt_Vendor_Part_ID is a cWebColumn
32302>>>            Entry_Item Invt.Vendor_Part_ID
32303>>>            Set psCaption to "Part ID"
32304>>>            Set piWidth to 40
32305>>>            
32305>>>            Set pbSortable to True
32306>>>        End_Object
32307>>>        
32307>>>        Object oVendor_ID is a cWebColumn
32309>>>            Entry_Item Vendor.ID
32310>>>            Set psCaption to "Vendor"
32311>>>            Set piWidth to 30
32312>>>            
32312>>>            Set pbSortable to True
32313>>>        End_Object
32314>>>        
32314>>>        Object oVendor_Name is a cWebColumn
32316>>>            Entry_Item Vendor.Name
32317>>>            Set psCaption to "Vendor"
32318>>>            Set piWidth to 50
32319>>>            
32319>>>            Set pbSortable to True
32320>>>        End_Object
32321>>>        
32321>>>        Object oInvt_On_Hand is a cWebColumn
32323>>>            Entry_Item Invt.On_Hand
32324>>>            Set psCaption to "On Hand"
32325>>>            Set piWidth to 20
32326>>>            
32326>>>            Set pbSortable to True
32327>>>        End_Object
32328>>>
32328>>>        Object oInvt_Unit_Price is a cWebColumn
32330>>>            Entry_Item Invt.Unit_Price
32331>>>            Set psCaption to "Unit Price"
32332>>>            Set piWidth to 30
32333>>>            
32333>>>            Set pbSortable to True
32334>>>        End_Object
32335>>>
32335>>>
32335>>>        Procedure OnManualLoadData tWebRow[] ByRef aTheRows String ByRef sCurrentRowID
32338>>>            // Loads the first 10 inventory items.
32338>>>            Handle hoDD
32338>>>            RowID riRowID 
32338>>>            String sRowID
32338>>>            Integer iRow
32338>>>
32338>>>            // Establish the find ordering and find the first record.
32338>>>            Move 0 to iRow            
32339>>>            Get Server to hoDD
32340>>>            Get ReadDDFirstRecord hoDD 1 False to riRowID
32341>>>
32341>>>            //  Find remaining records....
32341>>>            While (Found and (iRow < 10))
32345>>>                //  We use the LoadGridRow function to fill the row struct based on the data entry object (DEO) values
32345>>>                Get LoadGridRow to aTheRows[iRow]
32346>>>                
32346>>>                Increment iRow
32347>>>                Send Locate_Next to hoDD
32348>>>            Loop
32349>>>>
32349>>>            
32349>>>            // Set the first row to be the selected row
32349>>>            If (IsNullRowID(riRowID)) Begin
32351>>>                Move "" to sCurrentRowID
32352>>>            End
32352>>>>
32352>>>            Else Begin
32353>>>                Send FindByRowId of oInvt_DD Invt.File_Number riRowID
32354>>>                Move (SerializeRowID(riRowID)) to sCurrentRowID
32355>>>            End
32355>>>>
32355>>>            
32355>>>            
32355>>>        End_Procedure
32356>>>
32356>>>        Procedure OnLoad
32359>>>            Send GridRefresh
32360>>>        End_Procedure
32361>>>    End_Object
32362>>>
32362>>>End_Object 
32363>    Use DemoManualGrid.wo
Including file: DemoManualGrid.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoManualGrid.wo)
32363>>>Use cWebView.pkg
32363>>>Use cWebPanel.pkg
32363>>>Use cWebForm.pkg 
32363>>>Use cWebGrid.pkg
32363>>>Use cWebColumn.pkg
32363>>>Use cWebLabel.pkg
32363>>>Use cWebButton.pkg
32363>>>Use cWebHtmlBox.pkg
32363>>>
32363>>>Object oDemoManualGrid is a cWebView
32365>>>    Set piWidth to 750
32366>>>    Set psCaption to "Manual Grid"
32367>>>    
32367>>>    Set piColumnCount to 10
32368>>>
32368>>>    Object oGrid is a cWebGrid
32370>>>        Set pbFillHeight to True
32371>>>
32371>>>        Set pbDataAware to False
32372>>>        Set pbOfflineEditing to True
32373>>>        
32373>>>        Set pbColumnSortable to True
32374>>>        Set piSortColumn to 0
32375>>>        
32375>>>        Object oArtistCol is a cWebColumn
32377>>>            Set psCaption to "Artist"
32378>>>            Set piWidth to 100
32379>>>        End_Object
32380>>>        
32380>>>        Object oAlbumCol is a cWebColumn
32382>>>            Set psCaption to "Album"
32383>>>            Set piWidth to 100
32384>>>        End_Object
32385>>>
32385>>>        Object oSizeCol is a cWebColumn
32387>>>            Set psCaption to "Size"
32388>>>            Set peDataType to typeNumber
32389>>>            Set piWidth to 40
32390>>>            Set psMask to ",*0.0 MB"
32391>>>            
32391>>>            Set piPrecision to 1
32392>>>            Set piMaxLength to 10
32393>>>        End_Object
32394>>>
32394>>>        Object oLengthCol is a cWebColumn
32396>>>            Set psCaption to "Length"
32397>>>            Set peDataType to typeNumber
32398>>>            Set piWidth to 40
32399>>>            Set psMask to ",*0.00 M"
32400>>>            
32400>>>            
32400>>>            Set piMaxLength to 10
32401>>>            Set piPrecision to 2
32402>>>        End_Object
32403>>>        
32403>>>        Procedure OnManualLoadData tWebRow[] ByRef aTheRows String ByRef sCurrentRowID
32406>>>            Integer iHigh
32406>>>            
32406>>>            Get LoadDataFromFile (&aTheRows) to iHigh
32407>>>        End_Procedure 
32408>>>        
32408>>>        Procedure OnProcessDataSet tWebRow[] aData Integer eOperation Integer iSelectedRowIndex
32411>>>            Send SaveDataToFile aData
32412>>>            
32412>>>            Send ShowInfoBox ("Saved " + String(SizeOfArray(aData)) + " lines!") "Confirm"
32413>>>        End_Procedure
32414>>>        
32414>>>        Procedure OnLoad
32417>>>            Forward Send OnLoad
32419>>>            
32419>>>            Send GridRefresh
32420>>>        End_Procedure
32421>>>    End_Object
32422>>>
32422>>>    Object oWebButton1 is a cWebButton
32424>>>        Set piColumnSpan to 0
32425>>>        Set psCaption to "Save Data!"
32426>>>    
32426>>>        Procedure OnClick
32429>>>            Send ProcessDataSet of oGrid 342
32430>>>        End_Procedure
32431>>>    End_Object
32432>>>    
32432>>>    Object oDescriptionLabel is a cWebHtmlBox
32434>>>        Set psHtml to "<h1>Loading</h1><p>The data shown inside the grid is manually loaded from a CSV file. The <b>pbDataAware</b> property is set to False, so that it is manually loaded and doesn't try to find and save on DDOs. The grid is triggered to fill itself by calling <b>GridRefresh</b> and, because <b>pbDataAware</b> is False, this causes <b>OnManualLoadData</b> to be called. The data is put in an array of <b>tWebRow</b> structs received by reference. The first string in the aValues array is the unique for each row, it is required to provide such an unique ID. The <b>ConvertToClient</b> function can be used to convert values to right format understood by the JavaScript engine.</p><h1>Saving</h1><p>Saving is done for the entire set at once. It is triggered by calling <b>ProcessDataSet</b>, which tells the client to send all rows to the server in a new call. This new call fires the <b>OnProcessDataSet</b> event that gets the data in an array of tWebRow structs. The <b>ConvertFromClient</b> function can be used to convert values back to native DataFlex types.</p>"
32435>>>        Set piColumnSpan to 0
32436>>>    End_Object
32437>>>        
32437>>>    Function LoadDataFromFile tWebRow[] ByRef aTheRows Returns Integer
32440>>>        String sArtist sAlbum sTrash
32440>>>        Number nSize nLength 
32440>>>        Integer iID iNum iDecSep iHighest
32440>>>        
32440>>>        
32440>>>        Direct_Input "ManualData.Csv"
32441>>>        
32441>>>        Get_Attribute DF_DECIMAL_SEPARATOR to iDecSep
32444>>>        Set_Attribute DF_DECIMAL_SEPARATOR to (Ascii("."))
32447>>>        
32447>>>        Move 0 to iNum
32448>>>        Move 0 to iHighest
32449>>>        Repeat
32449>>>>
32449>>>            Readln iID sArtist sAlbum nSize nLength sTrash
32455>>>            
32455>>>            If (Trim(sArtist) <> "") Begin
32457>>>                //  Decode data                             
32457>>>                Move iID                                    to aTheRows[iNum].sRowID
32458>>>                Move sArtist                                to aTheRows[iNum].aCells[0].sValue
32459>>>                Move sAlbum                                 to aTheRows[iNum].aCells[1].sValue
32460>>>                Move (ConvertToClient(typeNumber, nSize))   to aTheRows[iNum].aCells[2].sValue
32461>>>                Move (ConvertToClient(typeNumber, nLength)) to aTheRows[iNum].aCells[3].sValue
32462>>>                
32462>>>                If (iID > iHighest) Begin
32464>>>                    Move iID to iHighest                        
32465>>>                End
32465>>>>
32465>>>                
32465>>>                Increment iNum                                
32466>>>            End
32466>>>>
32466>>>        Until (SeqEof)// or iNum > 3)
32468>>>        
32468>>>        Set_Attribute DF_DECIMAL_SEPARATOR to iDecSep
32471>>>        
32471>>>        Close_Input
32472>>>        
32472>>>        WebSet piHighest to iHighest
32474>>>                
32474>>>        Function_Return iHighest
32475>>>    End_Function
32476>>>    
32476>>>    Property Integer piHighest 0
32480>>>    
32480>>>    Procedure SaveDataToFile tWebRow[] aData
32483>>>        //Send ShowInfoBox (SFormat("We are going to save %1 rows!", SizeOfArray(aData))) ("Yeeh!")
32483>>>        Integer iChOut iTo iRow iCol iDecSep iID iHigh
32483>>>        String sArtist sAlbum
32483>>>        Number nSize nLength 
32483>>>        
32483>>>        WebGet piHighest to iHigh
32484>>>        
32484>>>        Get_Attribute DF_DECIMAL_SEPARATOR to iDecSep
32487>>>        Set_Attribute DF_DECIMAL_SEPARATOR to (Ascii("."))
32490>>>        
32490>>>        EraseFile "Albums.csv"
32491>>>>
32491>>>        
32491>>>        Move (Seq_New_Channel()) to iChOut
32492>>>        Direct_Output channel iChOut "ManualData.csv"
32494>>>        
32494>>>        Move (SizeOfArray(aData) - 1) to iTo
32495>>>        
32495>>>        For iRow from 0 to iTo
32501>>>>
32501>>>            If (Left(aData[iRow].sRowID, 4) = "new_") Begin
32503>>>                //  Autonumber
32503>>>                Increment iHigh
32504>>>                Move iHigh to iID
32505>>>            End
32505>>>>
32505>>>            Else Begin
32506>>>                Move (aData[iRow].sRowID) to iID
32507>>>            End
32507>>>>
32507>>>            
32507>>>            //  Encode data
32507>>>            Move (Replaces('"', aData[iRow].aCells[0].sValue, '\"'))           to sArtist
32508>>>            Move (Replaces('"', aData[iRow].aCells[1].sValue, '\"'))           to sAlbum
32509>>>            Move (ConvertFromClient(typeNumber, aData[iRow].aCells[2].sValue)) to nSize
32510>>>            Move (ConvertFromClient(typeNumber, aData[iRow].aCells[3].sValue)) to nLength
32511>>>                
32511>>>            Writeln channel iChOut '"' iID '","' sArtist '","' sAlbum '","' nSize '","' nLength '"'
32524>>>        Loop
32525>>>>
32525>>>        
32525>>>        Close_Output channel iChOut
32527>>>        Send Seq_Release_Channel iChOut
32528>>>        
32528>>>        Set_Attribute DF_DECIMAL_SEPARATOR to iDecSep
32531>>>    End_Procedure
32532>>>
32532>>>End_Object
32533>    Use DemoMultiDDOStructure.wo
Including file: DemoMultiDDOStructure.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoMultiDDOStructure.wo)
32533>>>Use cWebView.pkg
32533>>>Use cWebPanel.pkg
32533>>>Use cWebForm.pkg 
32533>>>Use cWebTabContainer.pkg
32533>>>Use cWebTabPage.pkg
32533>>>Use cWebEdit.pkg
32533>>>Use cWebCheckbox.pkg
32533>>>Use cWebGroup.pkg
32533>>>
32533>>>Use Vendor.DD
32533>>>Use Customer.DD
32533>>>Use Invt.DD
32533>>>
32533>>>Object oDemoMultiDDOStructure is a cWebView
32535>>>    Set piWidth to 900
32536>>>    Set psCaption to "Multi DDO Structure"
32537>>>    Set piColumnCount to 10
32538>>>    
32538>>>    // DDO Structure 1: this will be the view's main DDO structure
32538>>>    Object oCustomer_DD is a Customer_DataDictionary
32540>>>    End_Object
32541>>>
32541>>>    Set Main_DD to oCustomer_DD
32542>>>    
32542>>>    // DDO Structure 2: We need to register this so it will be synchronized at the client
32542>>>    Object oInactiveCustomer_DD is a Customer_DataDictionary
32544>>>        Procedure OnConstrain
32547>>>            Constrain Customer.Status eq "N"
32549>>>        End_Procedure
32550>>>    End_Object
32551>>>    
32551>>>    Send AddDDOStructure oInactiveCustomer_DD
32552>>>    
32552>>>    // DDO Structure 3: We need to register this so it will be synchronized at the client
32552>>>    Object oVendor_DD is a Vendor_DataDictionary
32554>>>    End_Object
32555>>>    
32555>>>    Send AddDDOStructure oVendor_DD
32556>>>
32556>>>    // DDO Structure 4: We need to register this so it will be synchronized at the client
32556>>>    Object oVendorTwo_DD is a Vendor_DataDictionary
32558>>>    End_Object
32559>>>
32559>>>    Object oInvt_DD is a Invt_DataDictionary
32561>>>        Set DDO_Server to oVendorTwo_DD
32562>>>    End_Object
32563>>>
32563>>>    Send AddDDOStructure oInvt_DD
32564>>>
32564>>>    Object oCustomerContainer is a cWebGroup
32566>>>        Set psCaption to "All Customers:"
32567>>>        Set piColumnCount to 9
32568>>>        Set piColumnSpan to 5
32569>>>        
32569>>>        Set Server to oCustomer_DD
32570>>>
32570>>>        Object oCustomer_Customer_Number is a cWebForm
32572>>>            Entry_Item Customer.Customer_Number
32573>>>            Set piColumnSpan to 0
32574>>>            Set psLabel to "Customer Number:"
32575>>>            Set peAlign to alignLeft
32576>>>        End_Object
32577>>>
32577>>>        Object oCustomer_Name is a cWebForm
32579>>>            Entry_Item Customer.Name
32580>>>            Set piColumnSpan to 0
32581>>>            Set psLabel to "Customer Name:"
32582>>>        End_Object
32583>>>
32583>>>        Object oCustomer_Address is a cWebForm
32585>>>            Entry_Item Customer.Address
32586>>>            Set piColumnSpan to 0
32587>>>            Set psLabel to "Street Address:"
32588>>>        End_Object
32589>>>
32589>>>        Object oCustomer_City is a cWebForm
32591>>>            Entry_Item Customer.City
32592>>>            Set piColumnSpan to 0
32593>>>            Set psLabel to "City:"
32594>>>        End_Object
32595>>>
32595>>>        Object oCustomer_Comments is a cWebEdit
32597>>>            Entry_Item Customer.Comments
32598>>>            Set piColumnSpan to 0
32599>>>            Set pbShowLabel to False
32600>>>        End_Object           
32601>>>    End_Object
32602>>>
32602>>>    Object oInactiveCustomerContainer is a cWebGroup
32604>>>        Set psCaption to "Inactive Customers:"
32605>>>        Set piColumnIndex to 5
32606>>>        Set piColumnCount to 9
32607>>>        
32607>>>        Set Server to oInactiveCustomer_DD
32608>>>
32608>>>        Object oCustomer_Customer_Number is a cWebForm
32610>>>            Entry_Item Customer.Customer_Number
32611>>>            Set piColumnSpan to 0
32612>>>            Set psLabel to "Customer Number:"
32613>>>            Set peAlign to alignLeft
32614>>>        End_Object
32615>>>
32615>>>        Object oCustomer_Name is a cWebForm
32617>>>            Entry_Item Customer.Name
32618>>>            Set piColumnSpan to 0
32619>>>            Set psLabel to "Customer Name:"
32620>>>        End_Object
32621>>>
32621>>>        Object oCustomer_Address is a cWebForm
32623>>>            Entry_Item Customer.Address
32624>>>            Set piColumnSpan to 0
32625>>>            Set psLabel to "Street Address:"
32626>>>        End_Object
32627>>>
32627>>>        Object oCustomer_City is a cWebForm
32629>>>            Entry_Item Customer.City
32630>>>            Set piColumnSpan to 0
32631>>>            Set psLabel to "City:"
32632>>>        End_Object
32633>>>
32633>>>        Object oCustomer_Comments is a cWebEdit
32635>>>            Entry_Item Customer.Comments
32636>>>            Set piColumnSpan to 0
32637>>>            Set pbShowLabel to False
32638>>>        End_Object           
32639>>>
32639>>>        Object oCustomer_Status is a cWebCheckBox
32641>>>            Entry_Item Customer.Status
32642>>>            Set piColumnSpan to 0
32643>>>            Set psCaption to "Active Status"
32644>>>            Set pbShowLabel to True
32645>>>        End_Object
32646>>>    End_Object
32647>>>    
32647>>>    Object oVendorContainer is a cWebGroup
32649>>>        Set psCaption to "Vendor:"
32650>>>        Set piColumnSpan to 5
32651>>>        Set piColumnCount to 9
32652>>>            
32652>>>        Set Server to oVendor_DD
32653>>>
32653>>>        Object oVendor_ID is a cWebForm
32655>>>            Entry_Item Vendor.ID
32656>>>            Set piColumnSpan to 0
32657>>>            Set psLabel to "Vendor ID:"
32658>>>            Set peAlign to alignLeft
32659>>>        End_Object
32660>>>
32660>>>        Object oVendor_Name is a cWebForm
32662>>>            Entry_Item Vendor.Name
32663>>>            Set piColumnSpan to 0
32664>>>            Set psLabel to "Vendor Name:"
32665>>>        End_Object
32666>>>
32666>>>        Object oVendor_Address is a cWebForm
32668>>>            Entry_Item Vendor.Address
32669>>>            Set piColumnSpan to 0
32670>>>            Set psLabel to "Street Address:"
32671>>>        End_Object
32672>>>
32672>>>        Object oVendor_City is a cWebForm
32674>>>            Entry_Item Vendor.City
32675>>>            Set piColumnSpan to 0
32676>>>            Set psLabel to "City:"
32677>>>        End_Object            
32678>>>    End_Object
32679>>>    
32679>>>    Object oInventoryContainer is a cWebGroup
32681>>>        Set psCaption to "Inventory:"
32682>>>        Set piColumnIndex to 5
32683>>>        Set piColumnCount to 9
32684>>>        
32684>>>        Set Server to oInvt_DD
32685>>>
32685>>>        Object oInvt_Item_ID is a cWebForm
32687>>>            Entry_Item Invt.Item_ID
32688>>>            Set piColumnSpan to 0
32689>>>            Set psLabel to "Inventory Item:"
32690>>>            Set peAlign to alignLeft
32691>>>        End_Object
32692>>>
32692>>>        Object oInvt_Description is a cWebForm
32694>>>            Entry_Item Invt.Description
32695>>>            Set piColumnSpan to 0
32696>>>            Set psLabel to "Description:"
32697>>>        End_Object
32698>>>
32698>>>        Object oVendor_Name1 is a cWebForm
32700>>>            Entry_Item Vendor.Name
32701>>>            Set piColumnSpan to 0
32702>>>            Set psLabel to "Vendor:"
32703>>>        End_Object
32704>>>
32704>>>        Object oInvt_Unit_Price is a cWebForm
32706>>>            Entry_Item Invt.Unit_Price
32707>>>            Set piColumnSpan to 0
32708>>>            Set psLabel to "Unit Price:"
32709>>>            Set peAlign to alignLeft
32710>>>        End_Object
32711>>>
32711>>>        Object oInvt_On_Hand is a cWebForm
32713>>>            Entry_Item Invt.On_Hand
32714>>>            Set piColumnSpan to 0
32715>>>            Set psLabel to "On Hand:"
32716>>>            Set peAlign to alignLeft
32717>>>        End_Object
32718>>>        
32718>>>    End_Object
32719>>>End_Object
32720>    Use DemoTreeView.wo
Including file: DemoTreeView.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoTreeView.wo)
32720>>>Use cWebView.pkg
32720>>>Use cWebForm.pkg
32720>>>Use cWebLabel.pkg
32720>>>Use cWebTreeView.pkg
32720>>>
32720>>>Use Vendor.DD
32720>>>Use Invt.DD
32720>>>Use cWebSpacer.pkg
32720>>>Use cWebHorizontalLine.pkg
32720>>>
32720>>>
32720>>>Object oDemoTreeView is a cWebView
32722>>>    Set psCaption to "TreeView + OnSyncView"
32723>>>    Set piColumnCount to 3
32724>>>    Set pbClearAfterSave to False
32725>>>     
32725>>>    Object oVendor_DD is a Vendor_DataDictionary
32727>>>    End_Object // oVendor_DD
32728>>>
32728>>>    Object oInvt_DD is a Invt_DataDictionary
32730>>>        Set DDO_Server to oVendor_DD
32731>>>        
32731>>>        Procedure Creating
32734>>>            Forward Send Creating
32736>>>            
32736>>>            tWebTreeItem tNode
32736>>>            tWebTreeItem tNode
32736>>>            
32736>>>            //  Add tree item for the item
32736>>>            Move (Trim(Invt.Item_ID))               to tNode.sName
32737>>>            Move (Trim(Invt.Description))           to tNode.sAltText
32738>>>            Move (Trim(Invt.Item_ID))               to tNode.sId
32739>>>            Move (Trim(Vendor.ID))                  to tNode.sParentId
32740>>>            Move False                              to tNode.bLoadChildren
32741>>>            Move False                              to tNode.bFolder
32742>>>            
32742>>>            Send InsertNode of oItemsTree tNode
32743>>>        End_Procedure
32744>>>        
32744>>>        Procedure Deleting
32747>>>            String sId
32747>>>            
32747>>>            Move (Trim(Invt.Item_ID)) to sId
32748>>>            
32748>>>            Forward Send Deleting
32750>>>            
32750>>>            //  Remove node from tree
32750>>>            Send RemoveNode of oItemsTree sId
32751>>>        End_Procedure
32752>>>        
32752>>>        Procedure Update
32755>>>            Forward Send Update
32757>>>            
32757>>>            tWebTreeItem tNode
32757>>>            tWebTreeItem tNode
32757>>>            
32757>>>            //  Update item in tree
32757>>>            Move (Trim(Invt.Item_ID))               to tNode.sName
32758>>>            Move (Trim(Invt.Description))           to tNode.sAltText
32759>>>            Move (Trim(Invt.Item_ID))               to tNode.sId
32760>>>            Move (Trim(Vendor.ID))                  to tNode.sParentId
32761>>>            Move False                              to tNode.bLoadChildren
32762>>>            Move False                              to tNode.bFolder
32763>>>            
32763>>>            Send UpdateNode of oItemsTree tNode
32764>>>        End_Procedure
32765>>>    End_Object // oInvt_DD
32766>>>
32766>>>    Set Main_DD to oInvt_DD
32767>>>    Set Server  to oInvt_DD
32768>>>
32768>>>    Object oLeftPanel is a cWebPanel
32770>>>        Set peRegion to prLeft
32771>>>        Set piWidth to 400
32772>>>        Set piMinWidth to 100
32773>>>        Set pbResizable to True
32774>>>            
32774>>>        Object oItemsTree is a cWebTreeView
32776>>>            Set pbServerOnSelect to True
32777>>>            Set psLabel to "Tree"
32778>>>            
32778>>>            Procedure OnSelect String sId String sValue Integer iLevel
32781>>>                If (iLevel = 1) Begin
32783>>>                    Send Clear of oInvt_DD
32784>>>                    Move sId to Vendor.ID
32785>>>                    Send Find of oVendor_DD EQ Index.1
32786>>>                End
32786>>>>
32786>>>                
32786>>>                If (iLevel = 2) Begin
32788>>>                    Move sId to Invt.Item_ID
32789>>>                    Send Find of oInvt_DD EQ Index.1
32790>>>                End
32790>>>>
32790>>>            End_Procedure
32791>>>            
32791>>>            
32791>>>            Function OnLoadChildNodes String sId String sValue Integer iLevel returns tWebTreeItem[]
32794>>>                tWebTreeItem[] aItems
32794>>>                tWebTreeItem[] aItems
32795>>>                tWebTreeItem tItem
32795>>>                tWebTreeItem tItem
32795>>>                Integer iCount
32795>>>                
32795>>>                Move 0 to iCount
32796>>>                
32796>>>                If (iLevel = 0) Begin   //  At the first level we will show the vendors
32798>>>                    //  Loop through vendors (use Request_Read so we don't change the current record of the DDO)
32798>>>                    Send Request_Read of oVendor_DD FIRST_RECORD Vendor.File_Number Index.1
32799>>>                    While (Found)
32803>>>                        
32803>>>                        //  Add tree item for the vendor
32803>>>                        Move (Trim(Vendor.Name))                to aItems[iCount].sName
32804>>>                        Move (Trim(Vendor.ID))                  to aItems[iCount].sId
32805>>>                        Move True                               to aItems[iCount].bLoadChildren
32806>>>                        Move True                               to aItems[iCount].bFolder
32807>>>//                        Move (SerializeRowID(GetRowID(Vendor))) to aItems[iCount].sValue
32807>>>                                                
32807>>>                        Increment iCount                        
32808>>>                        Send Locate_Next to oVendor_DD
32809>>>                    Loop
32810>>>>
32810>>>                End
32810>>>>
32810>>>                
32810>>>                If (iLevel = 1) Begin
32812>>>                    
32812>>>                    Clear Invt
32813>>>                    
32813>>>                    Move sId to Invt.Vendor_ID
32814>>>                    Find GT Invt by Index.2
32815>>>>
32815>>>                    
32815>>>                    
32815>>>                    
32815>>>                    While (Found and Trim(Invt.Vendor_ID) = sId)
32819>>>                        
32819>>>                        //  Add tree item for the item
32819>>>                        Move (Trim(Invt.Item_ID))               to aItems[iCount].sName
32820>>>                        Move (Trim(Invt.Description))           to aItems[iCount].sAltText
32821>>>                        Move (Trim(Invt.Item_ID))               to aItems[iCount].sId
32822>>>                        Move False                              to aItems[iCount].bLoadChildren
32823>>>                        Move False                              to aItems[iCount].bFolder
32824>>>                        
32824>>>                        Increment iCount
32825>>>                        Find GT invt by Index.2
32826>>>>
32826>>>                    Loop
32827>>>>
32827>>>                    
32827>>>                End
32827>>>>
32827>>>                
32827>>>                Function_Return aItems
32828>>>            End_Function
32829>>>        End_Object
32830>>>    End_Object
32831>>>    
32831>>>    Object oCenterPanel is a cWebPanel
32833>>>        Set peRegion to prCenter
32834>>>        Set piColumnCount to 2
32835>>>        Set piMinWidth to 400
32836>>>        
32836>>>        Object oItem_ID is a cWebForm
32838>>>            Set psLabel to "Invt. Item ID"
32839>>>            Entry_Item Invt.Item_ID
32840>>>            
32840>>>        End_Object // oInvtItem_ID
32841>>>    
32841>>>        Object oDescription is a cWebForm
32843>>>            Set psLabel to "Invt. Description"
32844>>>            Set piColumnSpan to 2
32845>>>            Entry_Item Invt.Description
32846>>>            
32846>>>            Set psValue to "Hi there!"
32847>>>        End_Object // oInvtDescription
32848>>>
32848>>>        Object oDevider1 is a cWebHorizontalLine
32850>>>        End_Object
32851>>>        
32851>>>    
32851>>>        Object oVendorID is a cWebForm
32853>>>            Set psLabel to "Vendor ID"
32854>>>            Entry_Item Vendor.ID
32855>>>        End_Object // oVendorID
32856>>>    
32856>>>        Object oVendorName is a cWebForm
32858>>>            Set psLabel to "Vendor Name"
32859>>>            Set piColumnSpan to 2
32860>>>            Entry_Item Vendor.Name
32861>>>        End_Object // oVendorName
32862>>>    
32862>>>        Object oInvtVendor_Part_ID is a cWebForm
32864>>>            Set psLabel to "Vendor Part ID"
32865>>>            Entry_Item Invt.Vendor_Part_ID
32866>>>        End_Object // oInvtVendor_Part_ID
32867>>>        
32867>>>        Object oDevider2 is a cWebHorizontalLine
32869>>>        End_Object
32870>>>        
32870>>>        Object oInvtUnit_Price is a cWebForm
32872>>>            Set psLabel to "Unit Price"
32873>>>            Entry_Item Invt.Unit_Price
32874>>>        End_Object // oInvtUnit_Price
32875>>>    
32875>>>        Object oInvtOn_Hand is a cWebForm
32877>>>            Set psLabel to "On Hand"
32878>>>            Set piColumnIndex to 1
32879>>>            Entry_Item Invt.On_Hand
32880>>>        End_Object // oInvtOn_Hand
32881>>>    End_Object
32882>>>    
32882>>>    //
32882>>>    //  Only administrators should be able to save in this view.
32882>>>    //
32882>>>    Procedure OnSyncView
32885>>>        Integer iUserRights
32885>>>        Get piUserRights of ghoWebSessionManager to iUserRights
32886>>>        
32886>>>        Set Read_Only_State of oVendor_DD to (iUserRights <= 0)
32887>>>        Set Read_Only_State of oInvt_DD to (iUserRights <= 0)
32888>>>    End_Procedure
32889>>>End_Object
32890>>>
32890>>>
32890>    Use DemoTreeViewCards.wo
Including file: DemoTreeViewCards.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoTreeViewCards.wo)
32890>>>Use cWebView.pkg
32890>>>Use cWebPanel.pkg
32890>>>Use cWebForm.pkg 
32890>>>Use cWebTreeView.pkg
32890>>>Use cWebCardContainer.pkg
32890>>>Use cWebCard.pkg
32890>>>Use cWebCheckBox.pkg
32890>>>Use cWebRadio.pkg
32890>>>Use cWebLabel.pkg
32890>>>Use cWebSpacer.pkg
32890>>>Use cWebHorizontalLine.pkg
32890>>>Use cWebHtmlBox.pkg
32890>>> 
32890>>>// Treeview item IDs
32890>>>// ~~~~~~~~~~~~~~~~~
32890>>>
32890>>>// treeview root level categories
32890>>>Define C_cfOverview     for 0
32890>>>Define C_cfEnvironment  for 10
32890>>>Define C_cfEditor       for 20
32890>>>Define C_cfCodeExplorer for 30
32890>>>Define C_cfDatabase     for 40
32890>>>
32890>>>// treeview sub-pages
32890>>>Define C_cfPage1 for 1
32890>>>Define C_cfPage2 for 2
32890>>>Define C_cfPage3 for 3
32890>>>Define C_cfPage4 for 4
32890>>>
32890>>>
32890>>>Object oDemoTreeViewCards is a cWebView
32892>>>    Set piWidth to 700
32893>>>    Set piHeight to 550
32894>>>    Set psCaption to "Configuration Panel"
32895>>>
32895>>>    Object oLeftPanel is a cWebPanel
32897>>>        Set peRegion to prLeft
32898>>>        Set piWidth to 200
32899>>>
32899>>>        Object oCategoryTree is a cWebTreeView
32901>>>            Set pbServerOnSelect to True
32902>>>            Set psBackgroundColor to "white" 
32903>>>
32903>>>            Function OnLoadChildNodes String sId String sValue Integer iLevel Returns tWebTreeItem[]
32906>>>                tWebTreeItem[] aItems
32906>>>                tWebTreeItem[] aItems
32907>>>                
32907>>>                // Populate Root Level Items
32907>>>                // ~~~~~~~~~~~~~~~~~~~~~~~~~
32907>>>                If (iLevel = 0) Begin
32909>>>                    Move C_cfOverview            to aItems[0].sId
32910>>>                    Move sId                     to aItems[0].sParentId
32911>>>                    Move "Overview"              to aItems[0].sName
32912>>>                    Move False                   to aItems[0].bLoadChildren
32913>>>                    Move True                    to aItems[0].bFolder
32914>>>                    Move "CssStyle/tvFolder.gif" to aItems[0].sIcon
32915>>>                    Move (WebObjectName(oOverviewCard)) to aItems[0].sValue    // Store the Card object name of the card to open
32916>>>
32916>>>                    Move C_cfEnvironment         to aItems[1].sId
32917>>>                    Move sId                     to aItems[1].sParentId
32918>>>                    Move "Environment"           to aItems[1].sName
32919>>>                    Move True                    to aItems[1].bLoadChildren
32920>>>                    Move True                    to aItems[1].bFolder
32921>>>                    Move (WebObjectName(oEnvironmentGeneralCard)) to aItems[1].sValue
32922>>>                    
32922>>>                    Move C_cfEditor              to aItems[2].sId
32923>>>                    Move sId                     to aItems[2].sParentId
32924>>>                    Move "Editor"                to aItems[2].sName
32925>>>                    Move True                    to aItems[2].bLoadChildren
32926>>>                    Move True                    to aItems[2].bFolder
32927>>>                    Move (WebObjectName(oEditorGeneralCard)) to aItems[2].sValue
32928>>>                                               
32928>>>                    Move C_cfCodeExplorer        to aItems[3].sId
32929>>>                    Move sId                     to aItems[3].sParentId
32930>>>                    Move "Code Explorer"         to aItems[3].sName
32931>>>                    Move False                   to aItems[3].bLoadChildren
32932>>>                    Move True                    to aItems[3].bFolder
32933>>>                    Move "CssStyle/tvFolder.gif" to aItems[4].sIcon
32934>>>                    Move (WebObjectName(oCodeExplorerCard)) to aItems[3].sValue
32935>>>                                               
32935>>>                    Move C_cfDatabase            to aItems[4].sId
32936>>>                    Move sId                     to aItems[4].sParentId
32937>>>                    Move "Database"              to aItems[4].sName
32938>>>                    Move False                   to aItems[4].bLoadChildren
32939>>>                    Move True                    to aItems[4].bFolder
32940>>>                    Move "CssStyle/tvFolder.gif" to aItems[4].sIcon
32941>>>                    Move (WebObjectName(oDatabaseCard)) to aItems[4].sValue
32942>>>                End
32942>>>>
32942>>>                Else Begin
32943>>>                    // Populate Sub-Pages
32943>>>                    // ~~~~~~~~~~~~~~~~~~
32943>>>                    Case Begin
32943>>>                        Case (sID = C_cfOverview)
32945>>>                            Case Break
32946>>>                            
32946>>>                        Case (sID = C_cfEnvironment)
32949>>>                            Move (C_cfEnvironment + C_cfPage1) to aItems[0].sId
32950>>>                            Move sId                           to aItems[0].sParentId
32951>>>                            Move "General"                     to aItems[0].sName
32952>>>                            Move False                         to aItems[0].bLoadChildren
32953>>>                            Move False                         to aItems[0].bFolder
32954>>>                            Move (WebObjectName(oEnvironmentGeneralCard)) to aItems[0].sValue    // Store the Card object name of the card to open
32955>>>
32955>>>                            Move (C_cfEnvironment + C_cfPage2) to aItems[1].sId
32956>>>                            Move sId                           to aItems[1].sParentId
32957>>>                            Move "Window Layout"               to aItems[1].sName
32958>>>                            Move False                         to aItems[1].bLoadChildren
32959>>>                            Move False                         to aItems[1].bFolder
32960>>>                            Move (WebObjectName(oEnvironmentWindowLayoutCard)) to aItems[1].sValue
32961>>>                            Case Break
32962>>>                            
32962>>>                        Case (sID = C_cfEditor)
32965>>>                            Move (C_cfEditor + C_cfPage1)      to aItems[0].sId
32966>>>                            Move sId                           to aItems[0].sParentId
32967>>>                            Move "General"                     to aItems[0].sName
32968>>>                            Move False                         to aItems[0].bLoadChildren
32969>>>                            Move False                         to aItems[0].bFolder
32970>>>                            Move (WebObjectName(oEditorGeneralCard)) to aItems[0].sValue
32971>>>
32971>>>                            Move (C_cfEditor + C_cfPage2)      to aItems[1].sId
32972>>>                            Move sId                           to aItems[1].sParentId
32973>>>                            Move "Misc"                        to aItems[1].sName
32974>>>                            Move False                         to aItems[1].bLoadChildren
32975>>>                            Move False                         to aItems[1].bFolder
32976>>>                            Move (WebObjectName(oEditorMiscCard)) to aItems[1].sValue
32977>>>                            Case Break
32978>>>                            
32978>>>                        Case (sID = C_cfCodeExplorer)
32981>>>                            Case Break
32982>>>                        
32982>>>                        Case (sID = C_cfDatabase)
32985>>>                            Case Break
32986>>>                    Case End
32986>>>                End
32986>>>>
32986>>>                
32986>>>                Function_Return aItems
32987>>>            End_Function
32988>>>
32988>>>            Procedure OnSelect String sId String sValue Integer iLevel
32991>>>                Handle hoCard
32991>>>                
32991>>>                Forward Send OnSelect sId sValue iLevel
32993>>>                
32993>>>                If (sValue <> "") Begin
32995>>>                    // Show the card pointed to by sValue
32995>>>                    Get WebObjectByName sValue to hoCard
32996>>>                    
32996>>>                    If (hoCard <> 0) Begin
32998>>>                        Send Show to hoCard
32999>>>                    End
32999>>>>
32999>>>                End
32999>>>>
32999>>>            End_Procedure
33000>>>
33000>>>            Procedure OnLoad
33003>>>                Forward Send OnLoad
33005>>>                Send Select C_cfOverview   // select the "Overview" item by default
33006>>>            End_Procedure
33007>>> 
33007>>>        End_Object       
33008>>>    End_Object
33009>>>    
33009>>>    Object oCenterPanel is a cWebPanel
33011>>>        Object oCardContainer is a cWebCardContainer
33013>>>            Set pbShowCaption to True
33014>>>
33014>>>            Object oOverviewCard is a cWebCard
33016>>>                Set psCaption to "Overview"
33017>>>
33017>>>                Object oWebSpacer2 is a cWebSpacer
33019>>>                End_Object
33020>>>
33020>>>                Object oWebHtmlBox1 is a cWebHtmlBox
33022>>>                    Set piColumnSpan to 0
33023>>>                    Set psHtml to ("This view demonstrates the use of the cWebTreeView control together with cWebCardContainer and cWebCard." ;                                 + "<br><br>Web cards are used to stack panels containing other web controls, one on top of another. " ;                                 + "This demonstrates a style of configuration dialog where the different configuration pages are selected from a tree view." ;                                 + "<br><br>The cWebCardContainer object is used to group cWebCards together. Each cWebCard contains a set of controls to display when that card is shown. " ;                                 + "The cWebTreeView is used to represent the cards hierarchically and navigating the tree nodes will change which card is on top." ;                                 + "<br><br>Lastly, this view demonstrates how to apply application styles to modify the appearance of the tree view. These application styles are defined in the file 'application.css'." ;                                 + "<br><br>The source code for this view can be found in the file 'DemoTreeViewCards.wo'.")
33024>>>                End_Object
33025>>>            End_Object
33026>>>
33026>>>            Object oEnvironmentGeneralCard is a cWebCard
33028>>>                Set psCaption to "Environment - General"
33029>>>
33029>>>                Object oWebSpacer2 is a cWebSpacer
33031>>>                End_Object
33032>>>                
33032>>>                Object oWebCheckbox1 is a cWebCheckbox
33034>>>                    Set psChecked to "Y"
33035>>>                    Set psUnchecked to "N"
33036>>>                    Set psValue to "Y"
33037>>>                    Set piColumnSpan to 0
33038>>>                    Set psCaption to "Load Previous Workspace when starting the Studio"
33039>>>                End_Object
33040>>>                
33040>>>                Object oWebCheckbox2 is a cWebCheckbox
33042>>>                    Set psChecked to "Y"
33043>>>                    Set psUnchecked to "N"
33044>>>                    Set psValue to "Y"
33045>>>                    Set piColumnSpan to 0
33046>>>                    Set psCaption to "Open Dashboard when creating a new Workspace"
33047>>>                End_Object
33048>>>
33048>>>                Object oWebCheckbox3 is a cWebCheckbox
33050>>>                    Set psChecked to "Y"
33051>>>                    Set psUnchecked to "N"
33052>>>                    Set psValue to "Y"
33053>>>                    Set piColumnSpan to 0
33054>>>                    Set psCaption to "Show Designer Resolution Grid"
33055>>>                End_Object
33056>>>
33056>>>                Object oWebCheckbox4 is a cWebCheckbox
33058>>>                    Set psChecked to "Y"
33059>>>                    Set psUnchecked to "N"
33060>>>                    Set psValue to "Y"
33061>>>                    Set piColumnSpan to 0
33062>>>                    Set psCaption to "Save/Restore Workspace Desktop"
33063>>>                End_Object
33064>>>            End_Object
33065>>>
33065>>>            Object oEnvironmentWindowLayoutCard is a cWebCard
33067>>>                Set psCaption to "Environment - Window Layout"
33068>>>
33068>>>                Object oWebSpacer1 is a cWebSpacer
33070>>>                End_Object
33071>>>
33071>>>                Object oWebRadio1 is a cWebRadio
33073>>>                    Set piColumnSpan to 0
33074>>>                    Set psCaption to "Tabbed Window Layout"
33075>>>                End_Object
33076>>>
33076>>>                Object oWebRadio2 is a cWebRadio
33078>>>                    Set piColumnSpan to 0
33079>>>                    Set psCaption to "Multiple Document Interface (MDI) Layout"
33080>>>                End_Object
33081>>>
33081>>>                Object oWebLabel1 is a cWebLabel
33083>>>                    Set psCaption to "Note: You must restart the Studio to apply this change."
33084>>>                End_Object
33085>>>
33085>>>                Object oWebCheckbox5 is a cWebCheckbox
33087>>>                    Set piColumnSpan to 0
33088>>>                    Set psCaption to "Multi-Row Tabbed Windows"
33089>>>                End_Object
33090>>>            End_Object
33091>>>
33091>>>            Object oEditorGeneralCard is a cWebCard
33093>>>                Set psCaption to "Editor - General"
33094>>>
33094>>>                Object oWebSpacer1 is a cWebSpacer
33096>>>                End_Object
33097>>>
33097>>>                Object oWebCheckbox1 is a cWebCheckbox
33099>>>                    Set psChecked to "Y"
33100>>>                    Set psUnchecked to "N"
33101>>>                    Set psValue to "Y"
33102>>>                    Set piColumnSpan to 0
33103>>>                    Set psCaption to "Show CodeSense Lists After a Character is Typed"
33104>>>                End_Object
33105>>>
33105>>>                Object oWebCheckbox2 is a cWebCheckbox
33107>>>                    Set psChecked to "Y"
33108>>>                    Set psUnchecked to "N"
33109>>>                    Set piColumnSpan to 0
33110>>>                    Set psCaption to "Always open files in the Editor by default"
33111>>>                End_Object
33112>>>
33112>>>                Object oWebCheckbox3 is a cWebCheckbox
33114>>>                    Set psChecked to "Y"
33115>>>                    Set psUnchecked to "N"
33116>>>                    Set psValue to "Y"
33117>>>                    Set piColumnSpan to 0
33118>>>                    Set psCaption to "Show find-wrapped message"
33119>>>                End_Object
33120>>>            End_Object
33121>>>
33121>>>            Object oEditorMiscCard is a cWebCard
33123>>>                Set psCaption to "Editor - Settings"
33124>>>
33124>>>                Object oWebSpacer1 is a cWebSpacer
33126>>>                End_Object
33127>>>
33127>>>                Object oWebCheckbox1 is a cWebCheckbox
33129>>>                    Set psChecked to "Y"
33130>>>                    Set psUnchecked to "N"
33131>>>                    Set piColumnSpan to 0
33132>>>                    Set psCaption to "Smooth scrolling"
33133>>>                End_Object
33134>>>
33134>>>                Object oWebCheckbox2 is a cWebCheckbox
33136>>>                    Set psChecked to "Y"
33137>>>                    Set psUnchecked to "N"
33138>>>                    Set psValue to "Y"
33139>>>                    Set piColumnSpan to 0
33140>>>                    Set psCaption to "Show left margin"
33141>>>                End_Object
33142>>>
33142>>>                Object oWebCheckbox3 is a cWebCheckbox
33144>>>                    Set psChecked to "Y"
33145>>>                    Set psUnchecked to "N"
33146>>>                    Set psValue to "Y"
33147>>>                    Set piColumnSpan to 0
33148>>>                    Set psCaption to "Line tooltips on scroll"
33149>>>                End_Object
33150>>>
33150>>>                Object oWebCheckbox4 is a cWebCheckbox
33152>>>                    Set psChecked to "Y"
33153>>>                    Set psUnchecked to "N"
33154>>>                    Set psValue to "Y"
33155>>>                    Set piColumnSpan to 0
33156>>>                    Set psCaption to "Enable virtual space"
33157>>>                End_Object
33158>>>
33158>>>                Object oWebCheckbox5 is a cWebCheckbox
33160>>>                    Set psChecked to "Y"
33161>>>                    Set psUnchecked to "N"
33162>>>                    Set psValue to "Y"
33163>>>                    Set piColumnSpan to 0
33164>>>                    Set psCaption to "Color syntax highlighting"
33165>>>                End_Object
33166>>>
33166>>>                Object oWebCheckbox6 is a cWebCheckbox
33168>>>                    Set psChecked to "Y"
33169>>>                    Set psUnchecked to "N"
33170>>>                    Set psValue to "Y"
33171>>>                    Set piColumnSpan to 0
33172>>>                    Set psCaption to "Show horizontal scrollbar"
33173>>>                End_Object
33174>>>
33174>>>                Object oWebCheckbox7 is a cWebCheckbox
33176>>>                    Set psChecked to "Y"
33177>>>                    Set psUnchecked to "N"
33178>>>                    Set piColumnSpan to 0
33179>>>                    Set psCaption to "One click URL Navigation"
33180>>>                End_Object
33181>>>
33181>>>                Object oWebCheckbox8 is a cWebCheckbox
33183>>>                    Set psChecked to "Y"
33184>>>                    Set psUnchecked to "N"
33185>>>                    Set piColumnSpan to 0
33186>>>                    Set psCaption to "Copy RTF text to clipboard"
33187>>>                End_Object
33188>>>
33188>>>                Object oWebCheckbox9 is a cWebCheckbox
33190>>>                    Set psChecked to "Y"
33191>>>                    Set psUnchecked to "N"
33192>>>                    Set psValue to "Y"
33193>>>                    Set piColumnSpan to 0
33194>>>                    Set psCaption to "Brace matching"
33195>>>                End_Object
33196>>>            End_Object
33197>>>
33197>>>            Object oCodeExplorerCard is a cWebCard
33199>>>                Set psCaption to "Code Explorer"
33200>>>                Set piColumnCount to 2
33201>>>
33201>>>                Object oWebSpacer1 is a cWebSpacer
33203>>>                End_Object
33204>>>
33204>>>                Object oWebCheckbox1 is a cWebCheckbox
33206>>>                    Set psChecked to "Y"
33207>>>                    Set psUnchecked to "N"
33208>>>                    Set psValue to "Y"
33209>>>                    Set piColumnSpan to 1
33210>>>                    Set psCaption to "Display Classes"
33211>>>                End_Object
33212>>>
33212>>>                Object oWebCheckbox2 is a cWebCheckbox
33214>>>                    Set psChecked to "Y"
33215>>>                    Set psUnchecked to "N"
33216>>>                    Set piColumnSpan to 1
33217>>>                    Set piColumnIndex to 1
33218>>>                    Set psCaption to "Display Import Class Protocols"
33219>>>                End_Object
33220>>>
33220>>>                Object oWebCheckbox3 is a cWebCheckbox
33222>>>                    Set psChecked to "Y"
33223>>>                    Set psUnchecked to "N"
33224>>>                    Set psValue to "Y"
33225>>>                    Set piColumnSpan to 1
33226>>>                    Set psCaption to "Display Methods"
33227>>>                End_Object
33228>>>
33228>>>                Object oWebCheckbox4 is a cWebCheckbox
33230>>>                    Set psChecked to "Y"
33231>>>                    Set psUnchecked to "N"
33232>>>                    Set piColumnSpan to 1
33233>>>                    Set piColumnIndex to 1
33234>>>                    Set psCaption to "Display ActiveX Resources"
33235>>>                End_Object
33236>>>
33236>>>                Object oWebCheckbox5 is a cWebCheckbox
33238>>>                    Set psChecked to "Y"
33239>>>                    Set psUnchecked to "N"
33240>>>                    Set psValue to "Y"
33241>>>                    Set piColumnSpan to 1
33242>>>                    Set psCaption to "Display Properties"
33243>>>                End_Object
33244>>>
33244>>>                Object oWebCheckbox6 is a cWebCheckbox
33246>>>                    Set psChecked to "Y"
33247>>>                    Set psUnchecked to "N"
33248>>>                    Set piColumnSpan to 1
33249>>>                    Set piColumnIndex to 1
33250>>>                    Set psCaption to "Display Entry_Item Lists"
33251>>>                End_Object
33252>>>
33252>>>                Object oWebCheckbox7 is a cWebCheckbox
33254>>>                    Set psChecked to "Y"
33255>>>                    Set psUnchecked to "N"
33256>>>                    Set psValue to "Y"
33257>>>                    Set piColumnSpan to 1
33258>>>                    Set psCaption to "Display Objects"
33259>>>                End_Object
33260>>>
33260>>>                Object oWebCheckbox8 is a cWebCheckbox
33262>>>                    Set psChecked to "Y"
33263>>>                    Set psUnchecked to "N"
33264>>>                    Set piColumnSpan to 1
33265>>>                    Set piColumnIndex to 1
33266>>>                    Set psCaption to "Display Entry_Item Statements"
33267>>>                End_Object
33268>>>
33268>>>                Object oWebCheckbox9 is a cWebCheckbox
33270>>>                    Set psChecked to "Y"
33271>>>                    Set psUnchecked to "N"
33272>>>                    Set piColumnSpan to 1
33273>>>                    Set psCaption to "Display Uses"
33274>>>                End_Object
33275>>>
33275>>>                Object oWebCheckbox10 is a cWebCheckbox
33277>>>                    Set psChecked to "Y"
33278>>>                    Set psUnchecked to "N"
33279>>>                    Set psValue to "Y"
33280>>>                    Set piColumnSpan to 1
33281>>>                    Set piColumnIndex to 1
33282>>>                    Set psCaption to "Display External Functions"
33283>>>                End_Object
33284>>>
33284>>>                Object oWebCheckbox11 is a cWebCheckbox
33286>>>                    Set psChecked to "Y"
33287>>>                    Set psUnchecked to "N"
33288>>>                    Set piColumnSpan to 1
33289>>>                    Set psCaption to "Display Enum_Lists"
33290>>>                End_Object
33291>>>
33291>>>                Object oWebCheckbox12 is a cWebCheckbox
33293>>>                    Set psChecked to "Y"
33294>>>                    Set psUnchecked to "N"
33295>>>                    Set psValue to "Y"
33296>>>                    Set piColumnSpan to 1
33297>>>                    Set piColumnIndex to 1
33298>>>                    Set psCaption to "Display To Do Items"
33299>>>                End_Object
33300>>>
33300>>>                Object oWebCheckbox13 is a cWebCheckbox
33302>>>                    Set psChecked to "Y"
33303>>>                    Set psUnchecked to "N"
33304>>>                    Set piColumnSpan to 1
33305>>>                    Set psCaption to "Display Constant Declarations"
33306>>>                End_Object
33307>>>
33307>>>                Object oWebCheckbox14 is a cWebCheckbox
33309>>>                    Set psChecked to "Y"
33310>>>                    Set psUnchecked to "N"
33311>>>                    Set piColumnSpan to 1
33312>>>                    Set psCaption to "Display Struct Declarations"
33313>>>                End_Object
33314>>>
33314>>>                Object oWebCheckbox15 is a cWebCheckbox
33316>>>                    Set psChecked to "Y"
33317>>>                    Set psUnchecked to "N"
33318>>>                    Set piColumnSpan to 1
33319>>>                    Set psCaption to "Display Legacy Menus"
33320>>>                End_Object
33321>>>            End_Object
33322>>>
33322>>>            Object oDatabaseCard is a cWebCard
33324>>>                Set psCaption to "Database"
33325>>>
33325>>>                Object oWebSpacer1 is a cWebSpacer
33327>>>                End_Object
33328>>>
33328>>>                Object oWebHorizontalLine1 is a cWebHorizontalLine
33330>>>                End_Object
33331>>>
33331>>>                Object oWebLabel2 is a cWebLabel
33333>>>                    Set psCaption to "Table Explorer:"
33334>>>                End_Object
33335>>>
33335>>>                Object oWebRadio1 is a cWebRadio
33337>>>                    Set piColumnSpan to 0
33338>>>                    Set psCaption to "Sort by Table Name"
33339>>>                End_Object
33340>>>
33340>>>                Object oWebRadio2 is a cWebRadio
33342>>>                    Set piColumnSpan to 0
33343>>>                    Set psCaption to "Sort by Table Number"
33344>>>                End_Object
33345>>>
33345>>>                Object oWebHorizontalLine2 is a cWebHorizontalLine
33347>>>                End_Object
33348>>>
33348>>>                Object oWebLabel3 is a cWebLabel
33350>>>                    Set psCaption to "Table Editor:"
33351>>>                End_Object
33352>>>
33352>>>                Object oWebCheckbox1 is a cWebCheckbox
33354>>>                    Set psChecked to "Y"
33355>>>                    Set psUnchecked to "N"
33356>>>                    Set psValue to "Y"
33357>>>                    Set piColumnSpan to 1
33358>>>                    Set psCaption to "Never Confirm Saves"
33359>>>                End_Object
33360>>>
33360>>>                Object oWebHorizontalLine3 is a cWebHorizontalLine
33362>>>                End_Object
33363>>>
33363>>>                Object oWebLabel4 is a cWebLabel
33365>>>                    Set psCaption to "Data Dictionaries:"
33366>>>                End_Object
33367>>>
33367>>>                Object oWebCheckbox2 is a cWebCheckbox
33369>>>                    Set psChecked to "Y"
33370>>>                    Set psUnchecked to "N"
33371>>>                    Set psValue to "Y"
33372>>>                    Set piColumnSpan to 1
33373>>>                    Set psCaption to "Use Legacy Data Dictionary Naming Convention"
33374>>>                End_Object
33375>>>            End_Object
33376>>>        End_Object
33377>>>    End_Object 
33378>>>
33378>>>End_Object
33379>    Use DemoCards.wo
Including file: DemoCards.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoCards.wo)
33379>>>Use cWebView.pkg
33379>>>Use cWebForm.pkg
33379>>>Use cWebEdit.pkg
33379>>>Use cWebCombo.pkg
33379>>>Use cWebButton.pkg
33379>>>Use cWebTabContainer.pkg
33379>>>Use cWebTabPage.pkg
33379>>>Use cWebPanel.pkg
33379>>>Use cWebCheckbox.pkg
33379>>>
33379>>>Use Customer.DD
33379>>>Use SalesP.dd
33379>>>Use OrderHea.dd
33379>>>Use cWebRadio.pkg
33379>>>Use cWebLabel.pkg
33379>>>
33379>>>Object oDemoCards is a cWebView
33381>>>
33381>>>    Object Customer_DD is a Customer_DataDictionary
33383>>>    End_Object    // Customer_DD
33384>>>    Set Main_DD to Customer_DD
33385>>>    Set Server to Customer_DD
33386>>>    
33386>>>    Set piColumnCount to 3
33387>>>    Set psCaption to "Cards"
33388>>>    
33388>>>    Set psCSSClass to "CustomerView"
33389>>>    Set piWidth to 800
33390>>>    Set Verify_Save_Msg to 0   
33391>>>    
33391>>>    Object oCustomer_Number is a cWebForm
33393>>>        Set psLabel to "Customer Num:" 
33394>>>        Entry_Item Customer.Customer_Number
33395>>>    End_Object
33396>>>    
33396>>>    Object oCustomer_Name is a cWebForm
33398>>>        Set psLabel to "Name:"
33399>>>        Set piColumnIndex to 1
33400>>>        Set piColumnSpan to 2
33401>>>        Entry_Item Customer.Name
33402>>>    End_Object    // oCustomer_Name
33403>>>    
33403>>>    Object oCustomer_Status is a cWebCheckbox
33405>>>        Set psLabel to "Active: "
33406>>>        Set pbShowLabel to True
33407>>>        Entry_Item Customer.Status
33408>>>    End_Object
33409>>>    
33409>>>    Object oCardLayout is a cWebCardContainer
33411>>>        Set piColumnSpan to 3
33412>>>        
33412>>>        Set pbServerOnCardChange to True
33413>>>        // This shows how to use OnCardChange. Update the current tab each time there is a change
33413>>>        // and set the the next and previous buttons' enabled state as needed.
33413>>>        Procedure OnCardChange String sNewSelectedTab String sPrevSelectedTab
33416>>>            Handle hoCard
33416>>>            String sCaption
33416>>>            
33416>>>            Get CurrentCard to hoCard
33417>>>            
33417>>>            If (hoCard > 0) Begin
33419>>>                WebGet psCaption of hoCard to sCaption
33420>>>                
33420>>>                WebSet psCaption of oCurrentTabLbl to ("Current tab: " + sCaption)                
33421>>>                
33421>>>                WebSet pbEnabled of oNextBtn to (hoCard <> oCommentsCard)
33422>>>                WebSet pbEnabled of oPreviousBtn to (hoCard <> oAddressCard)
33423>>>            End
33423>>>>
33423>>>            Else Begin
33424>>>                WebSet psCaption of oCurrentTabLbl to ("Current tab: unknown")
33425>>>            End
33425>>>>
33425>>>            
33425>>>            
33425>>>        End_Procedure
33426>>>        
33426>>>        Object oAddressCard is a cWebCard
33428>>>            Set psCaption to "Address"
33429>>>            Set piColumnCount to 3
33430>>>            
33430>>>            Object oCustomer_Address is a cWebForm
33432>>>                Entry_Item Customer.Address
33433>>>                Set psLabel to "Street Address:"
33434>>>                Set piColumnSpan to 2
33435>>>            End_Object    // oCustomer_Address
33436>>>        
33436>>>            Object oCustomer_City is a cWebForm
33438>>>                Entry_Item Customer.City
33439>>>                Set psLabel to "City:"
33440>>>            End_Object    // oCustomer_City
33441>>>        
33441>>>            Object oCustomer_State is a cWebCombo
33443>>>                Entry_Item Customer.State
33444>>>                Set psLabel to "State:"
33445>>>                Set piColumnIndex to 1   // 1
33446>>>                Set peLabelAlign to 1
33447>>>            End_Object    // oCustomer_State
33448>>>        
33448>>>            Object oCustomer_Zip is a cWebForm
33450>>>                Entry_Item Customer.Zip
33451>>>                Set psLabel to "Zip / Postal Code:"
33452>>>                Set piColumnIndex to 2
33453>>>            End_Object    // oCustomer_Zip
33454>>>        
33454>>>            Object oCustomer_Phone_number is a cWebForm
33456>>>                Entry_Item Customer.Phone_Number
33457>>>                Set psLabel to "Phone Number:"
33458>>>                Set piColumnIndex to 0
33459>>>            End_Object    // oCustomer_Phone_number
33460>>>        
33460>>>            Object oCustomer_Fax_number is a cWebForm
33462>>>                Entry_Item Customer.Fax_Number
33463>>>                Set psLabel to "Fax Number:"
33464>>>                Set piColumnIndex to 1
33465>>>            End_Object    // oCustomer_Fax_number
33466>>>        
33466>>>            Object oCustomer_Email_address is a cWebForm
33468>>>                Entry_Item Customer.EMail_Address
33469>>>                Set psLabel to "E-Mail Address:"
33470>>>                Set piColumnIndex to 2
33471>>>            End_Object    // oCustomer_Email_address
33472>>>            
33472>>>        End_Object
33473>>>        
33473>>>        Object oBalancesCard is a cWebCard
33475>>>            Set psCaption to "Balances"
33476>>>            Set piColumnCount to 3
33477>>>            
33477>>>            Object oCustomer_Credit_Limit is a cWebForm
33479>>>                Entry_Item Customer.Credit_limit
33480>>>                Set psLabel to "Credit Limit:"
33481>>>                Set piColumnIndex to 0
33482>>>            End_Object    // oCustomer_Credit_Limit
33483>>>        
33483>>>            Object oCustomer_Purchases is a cWebForm
33485>>>                Entry_Item Customer.Purchases
33486>>>                Set psLabel to "Total Purchases:"
33487>>>            End_Object    // oCustomer_Purchases
33488>>>        
33488>>>            Object oCustomer_Balance is a cWebForm
33490>>>                Entry_Item Customer.Balance
33491>>>                Set psLabel to "Balance Due:"
33492>>>            End_Object    // oCustomer_Balance
33493>>>            
33493>>>        End_Object
33494>>>        
33494>>>        
33494>>>        Object oCommentsCard is a cWebCard
33496>>>            Set psCaption to "Comments"
33497>>>            
33497>>>            Object oCustomer_Comments is a cWebEdit
33499>>>                Entry_Item Customer.Comments
33500>>>                Set psLabel to "Comments:"
33501>>>                Set psCSSClass to "BigBlueField"
33502>>>                Set pbFillHeight to True
33503>>>            End_Object    // oCustomer_Comments
33504>>>
33504>>>
33504>>>        End_Object     
33505>>>
33505>>>    End_Object
33506>>>
33506>>>    
33506>>>    Object oAddressBtn is a cWebButton
33508>>>        Set psCaption to 'Address Card'
33509>>>    
33509>>>        Procedure OnClick
33512>>>            Send Show of oAddressCard
33513>>>        End_Procedure        
33514>>>    End_Object
33515>>>    
33515>>>    Object oBalancesBtn is a cWebButton
33517>>>        Set psCaption to 'Balances Card'
33518>>>        Set piColumnIndex to 1
33519>>>    
33519>>>        Procedure OnClick
33522>>>            Send Show of oBalancesCard
33523>>>        End_Procedure
33524>>>        
33524>>>    End_Object
33525>>>    
33525>>>    Object oCommentsBtn is a cWebButton
33527>>>        Set psCaption to 'Comments Card'
33528>>>        Set piColumnIndex to 2
33529>>>    
33529>>>        Procedure OnClick
33532>>>            Send Show of oCommentsCard        
33533>>>        End_Procedure        
33534>>>    End_Object  
33535>>>    
33535>>>    
33535>>>    Object oPreviousBtn is a cWebButton
33537>>>        Set psCaption to 'Previous Card'
33538>>>        Set pbEnabled to False
33539>>>    
33539>>>        Procedure OnClick
33542>>>            Send PreviousCard of oCardLayout
33543>>>        End_Procedure      
33544>>>    End_Object
33545>>>
33545>>>
33545>>>    Object oNextBtn is a cWebButton
33547>>>        Set psCaption to 'Next Card'
33548>>>        Set piColumnIndex to 2
33549>>>    
33549>>>        Procedure OnClick
33552>>>            Send NextCard of oCardLayout
33553>>>        End_Procedure      
33554>>>    End_Object
33555>>>
33555>>>        
33555>>>    Object oBorderChk is a cWebCheckbox
33557>>>        Set psCaption to "Card Border"
33558>>>        
33558>>>        Set pbServerOnChange to True
33559>>>        Procedure OnChange String sNewValue String sOldValue
33562>>>            Boolean bChecked
33562>>>            
33562>>>            Get GetChecked to bChecked
33563>>>            
33563>>>            WebSet pbShowBorder of oCardLayout to bChecked
33564>>>        End_Procedure
33565>>>    End_Object
33566>>>    
33566>>>    
33566>>>    Object oLabelChk is a cWebCheckbox
33568>>>        Set psCaption to "Card Captions"
33569>>>        
33569>>>        Set pbServerOnChange to True
33570>>>        Procedure OnChange String sNewValue String sOldValue
33573>>>            Boolean bChecked
33573>>>            
33573>>>            Get GetChecked to bChecked
33574>>>            
33574>>>            WebSet pbShowCaption of oCardLayout to bChecked
33575>>>        End_Procedure
33576>>>    End_Object
33577>>>    
33577>>>    Object oCurrentTabLbl is a cWebLabel
33579>>>        Set psCaption to "Current card: Address"
33580>>>    End_Object
33581>>>
33581>>>
33581>>>    
33581>>>End_Object // oCustomer
33582>    Use DemoPanels.wo
Including file: DemoPanels.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoPanels.wo)
33582>>>Use cWebView.pkg
33582>>>Use cWebForm.pkg
33582>>>Use cWebButton.pkg
33582>>>Use cWebTabContainer.pkg
33582>>>Use cWebTabPage.pkg
33582>>>Use cWebPanel.pkg
33582>>>Use cWebCombo.pkg
33582>>>Use cWebEdit.pkg
33582>>>
33582>>>Use Customer.DD
33582>>>Use SalesP.dd
33582>>>Use OrderHea.dd
33582>>>Use Vendor.dd
33582>>>
33582>>>Object oDemoPanels is a cWebView
33584>>>    Set piColumnCount to 10
33585>>>    Set psCaption to "Panels + Allow Access"
33586>>>    Set piWidth to 700
33587>>>    Set pbFillHeight to True
33588>>>    
33588>>>
33588>>>    Object oVendor_DD is a Vendor_DataDictionary
33590>>>    End_Object 
33591>>>
33591>>>    Set Main_DD to oVendor_DD
33592>>>    Set Server  to oVendor_DD
33593>>>
33593>>>
33593>>>    Object oWebTopPanel is a cWebPanel
33595>>>        Set peRegion to prTop
33596>>>        Set psBackgroundColor to "#DDDDDD"
33597>>>        
33597>>>        Set piHeight to 100
33598>>>    End_Object 
33599>>>    
33599>>>    Object oWebLeftPanel is a cWebPanel
33601>>>        Set peRegion to prLeft
33602>>>        Set psBackgroundColor to "#CCCCCC"
33603>>>        
33603>>>        Set piWidth to 100
33604>>>    End_Object 
33605>>>    
33605>>>    
33605>>>    Object oWebMainPanel is a cWebPanel
33607>>>        Set peRegion to prCenter
33608>>>        Set psBackgroundColor to "#EEEEEE"
33609>>>        
33609>>>        Object oForm is a cWebForm
33611>>>            Set psLabel to "Form 1"
33612>>>            
33612>>>        End_Object
33613>>>            
33613>>>    End_Object 
33614>>>    
33614>>>    Object oWebRightPanel is a cWebPanel
33616>>>        Set peRegion to prRight
33617>>>        Set psBackgroundColor to "#BBBBBB"
33618>>>        
33618>>>        
33618>>>        Set piWidth to 100
33619>>>    End_Object 
33620>>>    
33620>>>    Object oWebBottomPanel is a cWebPanel
33622>>>        Set peRegion to prBottom
33623>>>        Set psBackgroundColor to "#AAAAAA"
33624>>>        
33624>>>        Set piHeight to 100
33625>>>    End_Object 
33626>>>    
33626>>>    //
33626>>>    //  Only administrators should be able to access this view.
33626>>>    //
33626>>>    Function AllowAccess Returns Boolean
33629>>>        Boolean bAccess
33629>>>        Integer iUserRights
33629>>>        
33629>>>        Forward Get AllowAccess to bAccess
33631>>>        
33631>>>        If (bAccess) Begin
33633>>>            Get piUserRights of ghoWebSessionManager to iUserRights
33634>>>            
33634>>>            If (iUserRights < 1) Begin
33636>>>                Move False to bAccess
33637>>>            End
33637>>>>
33637>>>        End
33637>>>>
33637>>>        Function_Return bAccess
33638>>>    End_Function
33639>>>End_Object // oCustomer
33640>    Use DemoFileUpload.wo
Including file: DemoFileUpload.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoFileUpload.wo)
33640>>>// C:\Projects\VDF\DataFlex 18.0\Examples\WebOrder\AppSrc\DemoFileUpload.wo
33640>>>// DemoFileUpload
33640>>>//
33640>>>
33640>>>Use cWebView.pkg
33640>>>Use cWebPanel.pkg
33640>>>Use cWebFileUploadButton.pkg
33640>>>Use cWebFileUploadForm.pkg
33640>>>Use cWebLabel.pkg
33640>>>Use cWebButton.pkg
33640>>>Use cWebHorizontalLine.pkg
33640>>>
33640>>>Use cWebAppUserDataDictionary.dd
33640>>>
33640>>>Object oDemoFileUpload is a cWebView
33642>>>    Set piColumnCount to 10
33643>>>    Set psCaption to "File Upload"
33644>>>    Set piWidth to 700
33645>>>    
33645>>>    Procedure CleanUp Integer eMode
33648>>>        String sPath
33648>>>        
33648>>>        If (eMode = cmYes) Begin
33650>>>            //  Use default upload folder
33650>>>            Get UploadFolder of ghoWebApp True to sPath
33651>>>            
33651>>>            Move (sPath + "\*.*") to sPath
33652>>>            
33652>>>            EraseFile sPath
33653>>>>
33653>>>        End
33653>>>>
33653>>>    End_Procedure
33654>>>    WebPublishProcedure CleanUp
33655>>>    
33655>>>    Object oWebTopPanel is a cWebPanel
33657>>>        Set peRegion to prTop
33658>>>        Set piHeight to 160
33659>>>        Set psBackgroundColor to "#DDDDDD"
33660>>>        Set piColumnCount to 10
33661>>>
33661>>>        Object oWebLabel1 is a cWebLabel
33663>>>            Set piColumnSpan to 0
33664>>>            Set psCaption to "File upload form, which has its drop zone expanded to the entire panel (phoDropZone)."
33665>>>        End_Object
33666>>>        
33666>>>        
33666>>>        
33666>>>        Object oWebFile1 is a cWebFileUploadForm
33668>>>            Set piColumnSpan to 0
33669>>>            Set psLabel to "File:"
33670>>>            
33670>>>//            Set pbAutoStart to True 
33670>>>    
33670>>>            Function OnFileUpload String sFileName Integer iBytes String sMime Returns String
33673>>>                String sPath
33673>>>                
33673>>>                //  Use default upload folder
33673>>>                Get UploadFolder of ghoWebApp True to sPath
33674>>>                
33674>>>                Move (sPath + "\" + sFileName) to sPath
33675>>>                
33675>>>                Function_Return sPath
33676>>>            End_Function
33677>>>            
33677>>>            Procedure OnFileFinished String sFileName String sLocalPath
33680>>>                Send ShowYesNo oDemoFileUpload (RefProc(CleanUp)) (SFormat("Succesfully uploaded %1! Do you want to clear the upload folder?", sFileName)) ("Finished") cmYes
33681>>>            End_Procedure
33682>>>            
33682>>>            Set phoDropZone to oWebTopPanel
33683>>>        End_Object
33684>>>
33684>>>        Object oWebButton1 is a cWebButton
33686>>>            Set piColumnSpan to 2
33687>>>            Set psCaption to "Show existing file"
33688>>>        
33688>>>            Procedure OnClick
33691>>>                 String sPath
33691>>>                
33691>>>                //  Determine local path based on workspace setting
33691>>>                Get psDataPath of (phoWorkspace(ghoApplication)) to sPath
33692>>>                
33692>>>                Move (sPath + "\orderdtl.dat") to sPath
33693>>>                
33693>>>                Send DisplayExistingFile of oWebFile1 sPath
33694>>>            End_Procedure
33695>>>        End_Object
33696>>>        
33696>>>        
33696>>>        Object oWebButton2 is a cWebButton
33698>>>            Set piColumnIndex to 2
33699>>>            Set piColumnSpan to 2
33700>>>            Set psCaption to "Clear file"
33701>>>            
33701>>>            Procedure OnClick
33704>>>                Send ClearDisplay of oWebFile1
33705>>>                
33705>>>            End_Procedure
33706>>>        End_Object
33707>>>    End_Object
33708>>>    
33708>>>
33708>>>    
33708>>>
33708>>>    Object oWebMainPanel is a cWebPanel
33710>>>        Set piColumnCount to 10
33711>>>
33711>>>        Object oWebLabel5 is a cWebLabel
33713>>>            Set piColumnSpan to 0
33714>>>            Set psCaption to "File upload form with pbAutoStart set to False and a file filter set to only accept images using psAccept."
33715>>>        End_Object
33716>>>        
33716>>>        
33716>>>
33716>>>        Object oWebFileUploader2 is a cWebFileUploadForm
33718>>>            Set piColumnSpan to 8
33719>>>            Set psLabel to "File:"
33720>>>            Set psAccept to "image/*,.jpg,.png,.bmp,.gif" // Note that older browsers do not support filtering on mime types
33721>>>            Set pbAutoStart to False
33722>>>            Set pbShowMime to True
33723>>>            
33723>>>//            Set pbAutoStart to True 
33723>>>            //  Called for each file upload to generate the local path where the file is stored.
33723>>>            Function OnFileUpload String sFileName Integer iBytes String sMime Returns String
33726>>>                String sPath
33726>>>                
33726>>>                //  Use default upload folder
33726>>>                Get UploadFolder of ghoWebApp True to sPath
33727>>>                
33727>>>                Move (sPath + "\" + sFileName) to sPath
33728>>>                
33728>>>                Function_Return sPath
33729>>>            End_Function
33730>>>            
33730>>>            Procedure OnFileFinished String sFileName String sLocalPath
33733>>>                Send ShowYesNo oDemoFileUpload (RefProc(CleanUp)) (SFormat("Succesfully uploaded '%1'! Do you want to clear the upload folder?", sLocalPath)) ("Finished") cmYes
33734>>>            End_Procedure
33735>>>        End_Object
33736>>>
33736>>>        Object oWebButton3 is a cWebButton
33738>>>            Set piColumnSpan to 2
33739>>>            Set psCaption to "Start Upload"
33740>>>            Set piColumnIndex to 8
33741>>>        
33741>>>            Procedure OnClick
33744>>>                Send StartUpload of oWebFileUploader2
33745>>>            End_Procedure
33746>>>        End_Object
33747>>>
33747>>>        Object oWebHorizontalLine4 is a cWebHorizontalLine
33749>>>        End_Object
33750>>>
33750>>>        Object oWebLabel2 is a cWebLabel
33752>>>            Set piColumnSpan to 0
33753>>>            Set psCaption to "File upload form, which has pbShowDialog set to True, so that the upload process is shown in a modal dialog."
33754>>>        End_Object
33755>>>
33755>>>        Object oWebFileUploadForm1 is a cWebFileUploadForm
33757>>>            Set piColumnSpan to 0
33758>>>            Set psLabel to "file"
33759>>>            Set pbShowDialog to True
33760>>>            
33760>>>            //  Called for each file upload to generate the local path where the file is stored.
33760>>>            Function OnFileUpload String sFileName Integer iBytes String sMime Returns String
33763>>>                String sPath
33763>>>                
33763>>>                //  Use default upload folder
33763>>>                Get UploadFolder of ghoWebApp True to sPath
33764>>>                
33764>>>                Move (sPath + "\" + sFileName) to sPath
33765>>>                
33765>>>                Function_Return sPath
33766>>>            End_Function
33767>>>        End_Object
33768>>>
33768>>>        
33768>>>        
33768>>>
33768>>>        Object oWebHorizontalLine2 is a cWebHorizontalLine
33770>>>        End_Object
33771>>>
33771>>>        Object oWebLabel3 is a cWebLabel
33773>>>            Set piColumnSpan to 0
33774>>>            Set psCaption to "File upload button, allowing multiple files to be uploaded at once. Shows a log message on the console for every uploaded file after entire upload (all files) is finished."
33775>>>        End_Object
33776>>>        
33776>>>                
33776>>>        
33776>>>        Object oFileUpload is a cWebFileUploadButton
33778>>>            Set piColumnSpan to 3
33779>>>            Set psCaption to "Upload File(s)"
33780>>>            
33780>>>            Property Integer piCount 0
33784>>>            
33784>>>            
33784>>>            Function OnFileUpload String sFileName Integer iBytes String sMime Returns String
33787>>>                String sPath
33787>>>                
33787>>>                //  Use default upload folder
33787>>>                Get UploadFolder of ghoWebApp True to sPath
33788>>>                
33788>>>                Move (sPath + "\" + sFileName) to sPath
33789>>>                
33789>>>                Function_Return sPath
33790>>>            End_Function
33791>>>            
33791>>>            Procedure OnFileFinished String sFileName String sLocalPath
33794>>>                Integer iCount
33794>>>                
33794>>>                WebGet piCount to iCount
33795>>>                Increment iCount
33796>>>                WebSet piCount to iCount
33797>>>                Send ClientLog (SFormat("File %1 saved as %2", sFileName, sLocalPath))
33798>>>            End_Procedure
33799>>>            
33799>>>            Procedure OnUploadFinished
33802>>>                Integer iCount
33802>>>                
33802>>>                WebGet piCount to iCount
33803>>>                WebSet piCount to 0
33804>>>                
33804>>>                Send ShowYesNo oDemoFileUpload (RefProc(CleanUp)) (SFormat("Succesfully uploaded %1 files! Do you want to delete them?", iCount)) ("Finished") cmYes
33805>>>            End_Procedure
33806>>>        End_Object
33807>>>        
33807>>>         Object oWebHorizontalLine3 is a cWebHorizontalLine
33809>>>        End_Object
33810>>>
33810>>>        Object oWebLabel4 is a cWebLabel
33812>>>            Set piColumnSpan to 0
33813>>>            Set psCaption to "File upload button that allows multiple files to be uploaded at once. Shows a log message on the console for every uploaded file after each file, because pbNotifyIndividualFile is set to True."
33814>>>        End_Object
33815>>>        
33815>>>                
33815>>>        
33815>>>        Object oFileUploadBtn2 is a cWebFileUploadButton
33817>>>            Set piColumnSpan to 3
33818>>>            Set psCaption to "Upload File(s)"
33819>>>            Set pbNotifyIndividualFile to True
33820>>>            
33820>>>            Property Integer piCount 0
33824>>>            
33824>>>            
33824>>>            Function OnFileUpload String sFileName Integer iBytes String sMime Returns String
33827>>>                String sPath
33827>>>                
33827>>>                //  Use default upload folder
33827>>>                Get UploadFolder of ghoWebApp True to sPath
33828>>>                
33828>>>                Move (sPath + "\" + sFileName) to sPath
33829>>>                
33829>>>                Function_Return sPath
33830>>>            End_Function
33831>>>            
33831>>>            Procedure OnFileFinished String sFileName String sLocalPath
33834>>>                Integer iCount
33834>>>                
33834>>>                WebGet piCount to iCount
33835>>>                Increment iCount
33836>>>                WebSet piCount to iCount
33837>>>                Send ClientLog (SFormat("File %1 saved as %2", sFileName, sLocalPath))
33838>>>            End_Procedure
33839>>>            
33839>>>            Procedure OnUploadFinished
33842>>>                Integer iCount
33842>>>                
33842>>>                WebGet piCount to iCount
33843>>>                WebSet piCount to 0
33844>>>                
33844>>>                Send ShowYesNo oDemoFileUpload (RefProc(CleanUp)) (SFormat("Succesfully uploaded %1 files! Do you want to delete them?", iCount)) ("Finished") cmYes
33845>>>            End_Procedure
33846>>>        End_Object
33847>>>        
33847>>>    End_Object 
33848>>>End_Object 
33849>    Use DemoSuggestionForm.wo
Including file: DemoSuggestionForm.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoSuggestionForm.wo)
33849>>>Use cWebView.pkg
33849>>>Use cWebPanel.pkg
33849>>>Use cWebForm.pkg 
33849>>>Use cWebSuggestionForm.pkg
33849>>>Use Customer.DD
33849>>>Use Vendor.DD
33849>>>Use cWebHorizontalLine.pkg
33849>>>Use cWebLabel.pkg
33849>>>
33849>>>Object oDemoSuggestionForm is a cWebView
33851>>>    Object oVendor_DD is a Vendor_DataDictionary
33853>>>    End_Object
33854>>>
33854>>>    Object oCustomer_DD is a Customer_DataDictionary
33856>>>        Procedure Field_defaults
33859>>>            Forward Send Field_Defaults
33861>>>            Set Field_Changed_Value   Field Customer.State to ""
33862>>>        End_Procedure
33863>>>    End_Object
33864>>>
33864>>>    Set Main_DD to oCustomer_DD
33865>>>    Set Server to oCustomer_DD
33866>>>    
33866>>>    Send AddDDOStructure oVendor_DD
33867>>>
33867>>>    Set piWidth to 700
33868>>>    Set psCaption to "Suggestion Form"
33869>>>    
33869>>>
33869>>>    // Your DDO structure will go here
33869>>>
33869>>>    Object oWebMainPanel is a cWebPanel
33871>>>        Set piColumnCount to 12
33872>>>
33872>>>        Object oWebLabel1 is a cWebLabel
33874>>>            Set piColumnSpan to 0
33875>>>            
33875>>>            Set psCaption to "Data bound, incremental, starting at character 1"
33876>>>            Set peAlign to alignCenter
33877>>>        End_Object
33878>>>
33878>>>        Object oWebSuggestionForm2 is a cWebSuggestionForm
33880>>>            Entry_Item Customer.Customer_Number
33881>>>            Set piColumnSpan to 4
33882>>>            Set psLabel to "Customer Number:"
33883>>>            Set piStartAtChar to 1
33884>>>        End_Object
33885>>>
33885>>>        Object oWebSuggestionForm1 is a cWebSuggestionForm
33887>>>            Entry_Item Customer.Name
33888>>>            Set piColumnSpan to 7
33889>>>            Set psLabel to "Customer Name:"
33890>>>            Set piStartAtChar to 1
33891>>>        End_Object
33892>>>
33892>>>        Object oWebLabel3 is a cWebLabel
33894>>>            Set psCaption to "Validation Table, incremental, starting at character 1"
33895>>>            Set piColumnSpan to 0
33896>>>            Set peAlign to alignCenter
33897>>>        End_Object
33898>>>
33898>>>        Object oWebSuggestionForm4 is a cWebSuggestionForm
33900>>>            Entry_Item Customer.State
33901>>>            Set piColumnSpan to 6
33902>>>            Set psLabel to "Customer State:"
33903>>>            Set peSuggestionMode to smValidationTable
33904>>>            Set piStartAtChar to 1
33905>>>        End_Object
33906>>>
33906>>>        Object oWebHorizontalLine1 is a cWebHorizontalLine
33908>>>        End_Object
33909>>>        
33909>>>        
33909>>>        Object oWebLabel2 is a cWebLabel
33911>>>            Set piColumnSpan to 0
33912>>>            
33912>>>            Set psCaption to "Data bound, full text, starting at character 2"
33913>>>            Set peAlign to alignCenter
33914>>>        End_Object
33915>>>
33915>>>        Object oWebSuggestionForm3 is a cWebSuggestionForm
33917>>>            Entry_Item Vendor.Name
33918>>>            Set Server to oVendor_DD
33919>>>            Set piColumnSpan to 7
33920>>>            Set pbFullText to True
33921>>>            Set psLabel to "Vendor name:"
33922>>>        End_Object
33923>>>        
33923>>>        
33923>>>    End_Object 
33924>>>
33924>>>End_Object
33925>    Use DemoColumnTypes.wo
Including file: DemoColumnTypes.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoColumnTypes.wo)
33925>>>Use cWebView.pkg
33925>>>Use cWebPanel.pkg
33925>>>Use cWebForm.pkg 
33925>>>Use Customer.DD
33925>>>Use cWebList.pkg
33925>>>Use cWebColumn.pkg
33925>>>Use cWebColumnLink.pkg
33925>>>Use cWebColumnButton.pkg
33925>>>Use cWebGroup.pkg
33925>>>Use cWebRadio.pkg
33925>>>Use cWebColumnImage.pkg
Including file: cWebColumnImage.pkg    (C:\Program Files (x86)\DataFlex 18.2\Pkg\cWebColumnImage.pkg)
33925>>>>>Use cWebColumn_mixin.pkg
33925>>>>>Use cWebBaseDEO.pkg
33925>>>>>
33925>>>>>// Used to represent each column of a cWebGrid or cWebLookup control.
33925>>>>>Class cWebColumnImage is a cWebBaseDEO
33926>>>>>    Import_Class_Protocol cWebColumn_mixin
33927>>>>>    
33927>>>>>    Procedure Construct_Object
33929>>>>>        Forward Send Construct_Object
33931>>>>>        
33931>>>>>        Send Define_cWebColumn_Mixin
33932>>>>>                
33932>>>>>        Property String psImageUrl "" 
33935>>>>>        Property String psImageCSSClass ""
33938>>>>>        
33938>>>>>        Property Integer pePosition wiStretchHoriz //   Allows dynamic image positioning. Note that piImageWidth and piImageHeight must be set for this to work.
33941>>>>>        
33941>>>>>        Property Boolean pbDynamic False
33944>>>>>        Property Boolean pbImageByCSS False
33947>>>>>        
33947>>>>>        Property Integer piImageWidth 0
33950>>>>>        Property Integer piImageHeight 0
33953>>>>>        
33953>>>>>        Property Boolean pbServerOnClick False
33956>>>>>        Property String psClientOnClick ""
33959>>>>>        
33959>>>>>        Property String[] paImgOptions
33960>>>>>        
33960>>>>>        //  Sorting on a image column wouldn't make sense
33960>>>>>        Set pbSortable to False
33961>>>>>        
33961>>>>>        Set psJSClass to "df.WebColumnImage"
33962>>>>>    End_Procedure
33963>>>>> 
33963>>>>>    Procedure LoadGridCell tWebCell ByRef tCell
33965>>>>>        Boolean bMulti
33965>>>>>        String[] aEmpty
33966>>>>>        
33966>>>>>        Set paImgOptions to aEmpty
33967>>>>>        
33967>>>>>        Get pbDynamic to bMulti
33968>>>>>        If (bMulti) Begin
33970>>>>>            Send OnDefineImages
33971>>>>>            Get paImgOptions to tCell.aOptions
33972>>>>>        End
33972>>>>>>
33972>>>>>        
33972>>>>>        // Give a chance to add custom tooltips & CSS Classnames
33972>>>>>        Send OnDefineTooltip (&tCell.sTooltip)
33973>>>>>        Send OnDefineCssClass (&tCell.sCssClassName)
33974>>>>>    End_Procedure
33975>>>>>    
33975>>>>>    Procedure OnDefineImages
33977>>>>>        
33977>>>>>    End_Procedure
33978>>>>>    
33978>>>>>    Procedure OnClick String sImage String sRowId
33980>>>>>        
33980>>>>>    End_Procedure
33981>>>>>    
33981>>>>>    Procedure AddImage String sUrl
33983>>>>>        String[] aImages
33984>>>>>        
33984>>>>>        Get paImgOptions to aImages
33985>>>>>        
33985>>>>>        Move sUrl to aImages[SizeOfArray(aImages)]
33986>>>>>        
33986>>>>>        Set paImgOptions to aImages
33987>>>>>    End_Procedure
33988>>>>>    
33988>>>>>    Procedure End_Construct_Object
33990>>>>>        WebPublishProcedure OnClick
33991>>>>>        
33991>>>>>        Forward Send End_Construct_Object
33993>>>>>    End_Procedure
33994>>>>>
33994>>>>>End_Class
33995>>>Use cWebCheckBox.pkg
33995>>>Use cWebColumnCheckbox.pkg
33995>>>Use DemoCustomerDialog.wo
Including file: DemoCustomerDialog.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\DemoCustomerDialog.wo)
33995>>>>>//
33995>>>>>//  This shows the basic structure of a modal dialog. It explains where the controls go and how to 
33995>>>>>//  initialize it (PopupTheDialog & OnShow). The DialogResult method explains how to return data 
33995>>>>>//  from your dialog. The commented oOpenDialog_btn is an example of a button that opens this dialog. 
33995>>>>>//  This button would be placed on another view.
33995>>>>>//
33995>>>>>//    Object oOpenDialog_btn is a cWebButton
33995>>>>>//        Set psCaption to "Open Dialog"
33995>>>>>//        
33995>>>>>//        Procedure OnClick
33995>>>>>//            Send PopupTheDialog of oWebModalDialog Self "Param 1" "Param 2"
33995>>>>>//        End_Procedure
33995>>>>>//        
33995>>>>>//        Procedure OnCloseModalDialog Handle hoModalDialog
33995>>>>>//            String sResult
33995>>>>>//            
33995>>>>>//            Get DialogResult of hoModalDialog to sResult
33995>>>>>//        End_Procedure
33995>>>>>//    End_Object
33995>>>>>//
33995>>>>>
33995>>>>>
33995>>>>>Use cWebModalDialog
33995>>>>>Use cWebPanel.pkg
33995>>>>>Use cWebButton.pkg
33995>>>>>Use cWebForm.pkg
33995>>>>>Use cWebTabContainer.pkg
33995>>>>>Use cWebTabPage.pkg
33995>>>>>Use Customer.DD
33995>>>>>Use cWebCombo.pkg
33995>>>>>Use cWebEdit.pkg
33995>>>>>
33995>>>>>Object oDemoCustomerDialog is a cWebModalDialog
33997>>>>>    Object oCustomer_DD is a Customer_DataDictionary
33999>>>>>    End_Object
34000>>>>>
34000>>>>>    Set Main_DD to oCustomer_DD
34001>>>>>    Set Server to oCustomer_DD
34002>>>>>
34002>>>>>    Set psCaption to "Edit Customer"
34003>>>>>    Set piMinWidth to 600
34004>>>>>    Set piMinHeight to 350
34005>>>>>    Set pbServerOnSubmit to True    // enable the OnSubmit event
34006>>>>>    
34006>>>>>    Object oMainPanel is a cWebPanel
34008>>>>>        Set piColumnCount to 12
34009>>>>>
34009>>>>>        Object oCustomer_Customer_Number is a cWebForm
34011>>>>>            Entry_Item Customer.Customer_Number
34012>>>>>            Set piColumnSpan to 5
34013>>>>>            Set psLabel to "Number:"
34014>>>>>            Set piLabelOffset to 80
34015>>>>>        End_Object
34016>>>>>
34016>>>>>        Object oCustomer_Name is a cWebForm
34018>>>>>            Entry_Item Customer.Name
34019>>>>>            Set piColumnSpan to 0
34020>>>>>            Set psLabel to "Name:"
34021>>>>>            Set piColumnIndex to 5
34022>>>>>            Set piLabelOffset to 80
34023>>>>>        End_Object
34024>>>>>
34024>>>>>        Object oTabContainer is a cWebTabContainer
34026>>>>>            Set pbFillHeight to True
34027>>>>>            Object oAddressTab is a cWebTabPage
34029>>>>>                Set psCaption to "Address"
34030>>>>>                Set piColumnCount to 12
34031>>>>>
34031>>>>>                Object oCustomer_Address is a cWebForm
34033>>>>>                    Entry_Item Customer.Address
34034>>>>>                    Set piColumnSpan to 12
34035>>>>>                    Set psLabel to "Street Address:"
34036>>>>>                End_Object
34037>>>>>
34037>>>>>                Object oCustomer_City is a cWebForm
34039>>>>>                    Entry_Item Customer.City
34040>>>>>                    Set piColumnSpan to 6
34041>>>>>                    Set psLabel to "City / State / Zip:"
34042>>>>>                End_Object
34043>>>>>
34043>>>>>                Object oCustomer_State is a cWebCombo
34045>>>>>                    Entry_Item Customer.State
34046>>>>>                    Set piColumnSpan to 3
34047>>>>>                    Set psLabel to "State:"
34048>>>>>                    Set piColumnIndex to 6
34049>>>>>                    Set pbShowLabel to False
34050>>>>>                End_Object
34051>>>>>
34051>>>>>                Object oCustomer_Zip is a cWebForm
34053>>>>>                    Entry_Item Customer.Zip
34054>>>>>                    Set piColumnSpan to 3
34055>>>>>                    Set psLabel to "Zip/Postal Code:"
34056>>>>>                    Set pbShowLabel to False
34057>>>>>                    Set piColumnIndex to 9
34058>>>>>                End_Object
34059>>>>>
34059>>>>>                Object oCustomer_Phone_Number is a cWebForm
34061>>>>>                    Entry_Item Customer.Phone_Number
34062>>>>>                    Set piColumnSpan to 6
34063>>>>>                    Set psLabel to "Phone Number:"
34064>>>>>                End_Object
34065>>>>>
34065>>>>>                Object oCustomer_Fax_Number is a cWebForm
34067>>>>>                    Entry_Item Customer.Fax_Number
34068>>>>>                    Set piColumnSpan to 6
34069>>>>>                    Set psLabel to "Fax Number:"
34070>>>>>                    Set piColumnIndex to 6
34071>>>>>                End_Object
34072>>>>>
34072>>>>>                Object oCustomer_EMail_Address is a cWebForm
34074>>>>>                    Entry_Item Customer.EMail_Address
34075>>>>>                    Set piColumnSpan to 8
34076>>>>>                    Set psLabel to "E-Mail Address:"
34077>>>>>                End_Object
34078>>>>>                
34078>>>>>            End_Object
34079>>>>>
34079>>>>>            Object oBalanceTab is a cWebTabPage
34081>>>>>                Set psCaption to "Balance"
34082>>>>>                Set piColumnCount to 12
34083>>>>>
34083>>>>>                Object oCustomer_Credit_Limit is a cWebForm
34085>>>>>                    Entry_Item Customer.Credit_Limit
34086>>>>>                    Set piColumnSpan to 7
34087>>>>>                    Set psLabel to "Credit Limit:"
34088>>>>>                End_Object
34089>>>>>
34089>>>>>                Object oCustomer_Purchases is a cWebForm
34091>>>>>                    Entry_Item Customer.Purchases
34092>>>>>                    Set piColumnSpan to 7
34093>>>>>                    Set psLabel to "Total Purchases:"
34094>>>>>                End_Object
34095>>>>>
34095>>>>>                Object oCustomer_Balance is a cWebForm
34097>>>>>                    Entry_Item Customer.Balance
34098>>>>>                    Set piColumnSpan to 7
34099>>>>>                    Set psLabel to "Balance Due:"
34100>>>>>                End_Object
34101>>>>>                
34101>>>>>            End_Object
34102>>>>>
34102>>>>>            Object oCommentsTab is a cWebTabPage
34104>>>>>                Set psCaption to "Comments"
34105>>>>>                Set piColumnCount to 12
34106>>>>>
34106>>>>>                Object oCustomer_Comments is a cWebEdit
34108>>>>>                    Entry_Item Customer.Comments
34109>>>>>                    Set piColumnSpan to 0
34110>>>>>                    Set psLabel to "Comments:"
34111>>>>>                    Set pbFillHeight to True
34112>>>>>                    Set pbShowLabel to False
34113>>>>>                End_Object
34114>>>>>                
34114>>>>>            End_Object
34115>>>>>        End_Object
34116>>>>>        
34116>>>>>        
34116>>>>>    End_Object 
34117>>>>>    
34117>>>>>    Object oBottomPanel is a cWebPanel
34119>>>>>        Set piColumnCount to 6
34120>>>>>        Set peRegion to prBottom
34121>>>>>
34121>>>>>        Object oOkButton is a cWebButton
34123>>>>>            Set psCaption to C_$OK
34124>>>>>            Set piColumnSpan to 1
34125>>>>>            Set piColumnIndex to 4
34126>>>>>
34126>>>>>            Procedure OnClick
34129>>>>>                Send Ok
34130>>>>>            End_Procedure
34131>>>>>        End_Object 
34132>>>>>
34132>>>>>        Object oCancelButton is a cWebButton
34134>>>>>            Set psCaption to C_$Cancel
34135>>>>>            Set piColumnSpan to 1
34136>>>>>            Set piColumnIndex to 5
34137>>>>>
34137>>>>>            Procedure OnClick
34140>>>>>                Send Cancel
34141>>>>>            End_Procedure
34142>>>>>        End_Object 
34143>>>>>    End_Object 
34144>>>>>
34144>>>>>    Procedure OnSubmit
34147>>>>>        Send Ok
34148>>>>>    End_Procedure
34149>>>>>    
34149>>>>>    Procedure Ok
34152>>>>>        Boolean bErr
34152>>>>>        
34152>>>>>        //  Do some calculations / saves / validations here ..
34152>>>>>        Get Request_Validate of oCustomer_DD to bErr
34153>>>>>        If (not(bErr)) Begin
34155>>>>>            Send Request_Save of oCustomer_DD
34156>>>>>            
34156>>>>>            //  Note that we only forward send if we saved succesfully
34156>>>>>            Forward Send Ok
34158>>>>>        End
34158>>>>>>
34158>>>>>    End_Procedure
34159>>>>>
34159>>>>>    Procedure Cancel
34162>>>>>        Forward Send Cancel
34164>>>>>    End_Procedure
34165>>>>>    
34165>>>>>    
34165>>>>>    //  PopupCustomerDialog:
34165>>>>>    //
34165>>>>>    //  Custom popup method that stores the customer RowId in a web property before calling Show.
34165>>>>>    Procedure PopupCustomerDialog  Handle hReturnObj String sCustomerRowID
34168>>>>>        // Initialize any object properites as needed via WebSet
34168>>>>>        WebSet psCustomerRowID to sCustomerRowID
34170>>>>>        
34170>>>>>        // Invoke the modal dialog    
34170>>>>>        Send Popup hReturnObj
34171>>>>>    End_Procedure
34172>>>>>    
34172>>>>>    Property String psCustomerRowID ""  //  Used to store the customer RowId between PopupCustomerDialog and OnShow
34176>>>>>    
34176>>>>>    Set pbServerOnShow to True
34177>>>>>    
34177>>>>>    
34177>>>>>    //  OnShow:
34177>>>>>    //
34177>>>>>    //  Called by the Framework each time the dialog is displayed. We need to find the right customer here.
34177>>>>>    Procedure OnShow
34180>>>>>        String sRowID
34180>>>>>        RowID rRowID
34180>>>>>        
34180>>>>>        //  Find your records here
34180>>>>>        WebGet psCustomerRowID to sRowID
34181>>>>>        
34181>>>>>        Move (DeserializeRowID(sRowID)) to rRowID
34182>>>>>        If (not(IsNullRowID(rRowID))) Begin
34184>>>>>            Send FindByRowId of oCustomer_DD Customer.File_Number rRowID
34185>>>>>        End
34185>>>>>>
34185>>>>>        Else Begin
34186>>>>>            Send Clear of oCustomer_DD
34187>>>>>        End
34187>>>>>>
34187>>>>>        
34187>>>>>        WebSet psCustomerRowID to ""
34188>>>>>    End_Procedure
34189>>>>>    
34189>>>>>    
34189>>>>>
34189>>>>>End_Object
34190>>>
34190>>>Object oDemoColumnTypes is a cWebView
34192>>>    Object oCustomer_DD is a Customer_DataDictionary
34194>>>    End_Object
34195>>>
34195>>>    Set Main_DD to oCustomer_DD
34196>>>    Set Server to oCustomer_DD
34197>>>
34197>>>    Set piWidth to 700
34198>>>    Set psCaption to "Demo Column Types"
34199>>>    Set piHeight to 600
34200>>>
34200>>>    // Your DDO structure will go here
34200>>>
34200>>>    Object oWebMainPanel is a cWebPanel
34202>>>        Set piColumnCount to 12
34203>>>
34203>>>        Object oWebList1 is a cWebList
34205>>>            Set pbFillHeight to True
34206>>>
34206>>>            Object oSingleBtnCol is a cWebColumnButton
34208>>>                Set piWidth to 35
34209>>>                Set psCaption to ""
34210>>>                Set psButtonCaption to "Edit"
34211>>>                Set pbRender to False
34212>>>                
34212>>>                Procedure OnClick String sButton String sRowId
34215>>>                    Send ShowCustomer sRowId
34216>>>                End_Procedure
34217>>>            End_Object
34218>>>
34218>>>            Object oDynamicBtnCol is a cWebColumnButton
34220>>>                Set piWidth to 80
34221>>>                Set pbDynamic to True
34222>>>                Set pbRender to False
34223>>>                
34223>>>                //  Called for each row to define the buttons that need to be displayed.
34223>>>                Procedure OnDefineButtons
34226>>>                    //  Use AddButton to define a button (sID, sCaption, sCSSClass)
34226>>>                    Send AddButton "E" "Edit" ""
34227>>>                    
34227>>>                    //  The Global buffer contains the right record for data aware lists
34227>>>                    If (Customer.Status = "Y") Begin
34229>>>                        Send AddButton "D" "Deactivate" ""
34230>>>                    End
34230>>>>
34230>>>                End_Procedure
34231>>>
34231>>>                Procedure OnClick String sButton String sRowId
34234>>>                    Forward Send OnClick sButton sRowId
34236>>>                    
34236>>>                    If (sButton = "E") Begin
34238>>>                        Send ShowCustomer sRowId
34239>>>                    End
34239>>>>
34239>>>                    Else If (sButton = "D") Begin
34242>>>                        Send DeactivateCustomer sRowID
34243>>>                    End
34243>>>>
34243>>>                End_Procedure
34244>>>            End_Object
34245>>>
34245>>>            Object oStaticImageCol is a cWebColumnImage
34247>>>                Set piWidth to 20
34248>>>                Set psImageUrl to "Images/Order.png"
34249>>>                Set psCaption to "Icon"
34250>>>                Set pbRender to False
34251>>>
34251>>>                Procedure OnClick String sImage String sRowId
34254>>>                    Forward Send OnClick sImage sRowId
34256>>>                    
34256>>>                    Send ShowInfoBox "You've clicked the image!"
34257>>>                End_Procedure
34258>>>            End_Object
34259>>>
34259>>>            Object oDynamicImageCol is a cWebColumnImage
34261>>>                Set piWidth to 20
34262>>>                Set pbDynamic to True
34263>>>                Set psCaption to "Icons"
34264>>>                Set pbServerOnClick to True
34265>>>                
34265>>>                Procedure OnDefineImages
34268>>>                    Forward Send OnDefineImages
34270>>>                    
34270>>>                    Send AddImage "Images/Order.png"
34271>>>                    
34271>>>                    If (Customer.Balance >  4000) Begin
34273>>>                        Send AddImage "Images/CDRom.png"
34274>>>                    End
34274>>>>
34274>>>                End_Procedure
34275>>>
34275>>>                Procedure OnClick String sImage String sRowId
34278>>>                    Forward Send OnClick sImage sRowId
34280>>>                    
34280>>>                    Send ShowInfoBox ("You've clicked on image '" + sImage + "'!")
34281>>>                End_Procedure
34282>>>                
34282>>>                
34282>>>            End_Object
34283>>>
34283>>>
34283>>>            Object oCustomer_Customer_Number is a cWebColumn
34285>>>                Entry_Item Customer.Customer_Number
34286>>>                Set psCaption to "Number"
34287>>>                Set piWidth to 30
34288>>>            End_Object
34289>>>
34289>>>            Object oCustomer_Name is a cWebColumnLink
34291>>>                Entry_Item Customer.Name
34292>>>                Set psCaption to "Customer Name"
34293>>>                Set piWidth to 100
34294>>>
34294>>>                Procedure OnClick String sRowID String sCellValue
34297>>>                    Send ShowCustomer sRowId
34298>>>                End_Procedure
34299>>>            End_Object
34300>>>
34300>>>            Object oCustomer_City is a cWebColumn
34302>>>                Entry_Item Customer.City
34303>>>                Set psCaption to "City"
34304>>>                Set piWidth to 50
34305>>>                
34305>>>                Set psCSSClass to "DemoColumnCity"
34306>>>            End_Object
34307>>>
34307>>>            Object oCustomer_Balance is a cWebColumn
34309>>>                Entry_Item Customer.Balance
34310>>>                Set psCaption to "Balance"
34311>>>                Set piWidth to 50
34312>>>
34312>>>                Procedure OnDefineCssClass String  ByRef sCSSClass
34315>>>                    Forward Send OnDefineCssClass (&sCSSClass)
34317>>>                    
34317>>>                    If (Customer.Balance < 1000) Begin
34319>>>                        Move "DemoColLow" to sCSSClass
34320>>>                    End
34320>>>>
34320>>>                    Else If (Customer.Balance > 5000) Begin
34323>>>                        Move "DemoColHigh" to sCSSClass
34324>>>                    End
34324>>>>
34324>>>                    Else Begin
34325>>>                        Move "DemoColMedium" to sCSSClass
34326>>>                    End
34326>>>>
34326>>>                End_Procedure
34327>>>            End_Object
34328>>>
34328>>>            Object oCustomer_Status is a cWebColumnCheckBox
34330>>>                Entry_Item Customer.Status
34331>>>                Set psCaption to "Status"
34332>>>                Set piWidth to 30
34333>>>            End_Object
34334>>>        End_Object
34335>>>
34335>>>        Object oWebGroup1 is a cWebGroup
34337>>>            Set psCaption to "Options"
34338>>>            Set piColumnCount to 12
34339>>>
34339>>>            Object oBtnRadio1 is a cWebRadio
34341>>>                Set piColumnSpan to 4
34342>>>                Set psCaption to "Single delete button"
34343>>>                Set psRadioValue to "SINGLE_BUTTON"
34344>>>                Set pbServerOnChange to True
34345>>>
34345>>>                Procedure OnChange String sNewValue String sOldValue
34348>>>                    Forward Send OnChange sNewValue sOldValue
34350>>>                    
34350>>>                    Send UpdateUI
34351>>>                End_Procedure
34352>>>                
34352>>>            End_Object
34353>>>
34353>>>            Object oImgRadio1 is a cWebRadio
34355>>>                Set piColumnSpan to 4
34356>>>                Set psCaption to "Static image"
34357>>>                Set psRadioValue to "STATIC_IMAGE"
34358>>>                Set piColumnIndex to 4
34359>>>            End_Object
34360>>>
34360>>>            Object oColorCheckbox is a cWebCheckbox
34362>>>                Set piColumnSpan to 4
34363>>>                Set psCaption to "Color balance"
34364>>>                Set pbServerOnChange to True
34365>>>                Set piColumnIndex to 8
34366>>>
34366>>>                Procedure OnChange String sNewValue String sOldValue
34369>>>                    Forward Send OnChange sNewValue sOldValue
34371>>>                    
34371>>>                    Send UpdateUI
34372>>>                End_Procedure
34373>>>            End_Object
34374>>>
34374>>>            Object oBtnRadio2 is a cWebRadio
34376>>>                Set piColumnSpan to 4
34377>>>                Set psCaption to "Dynamic buttons"
34378>>>                Set psRadioValue to "DYNAMIC_BUTTONS"
34379>>>            End_Object
34380>>>
34380>>>            Object oImgRadio2 is a cWebRadio
34382>>>                Set piColumnSpan to 4
34383>>>                Set psCaption to "Dynamic images"
34384>>>                Set psRadioValue to "DYNAMIC_IMAGE"
34385>>>                Set piColumnIndex to 4
34386>>>            End_Object
34387>>>            
34387>>>            Object oShowSelectedCheckbox is a cWebCheckbox
34389>>>                Set piColumnSpan to 4
34390>>>                Set psCaption to "Selected row"
34391>>>                Set pbServerOnChange to True
34392>>>                Set piColumnIndex to 8
34393>>>
34393>>>                Procedure OnChange String sNewValue String sOldValue
34396>>>                    Forward Send OnChange sNewValue sOldValue
34398>>>                    
34398>>>                    Send UpdateUI
34399>>>                End_Procedure
34400>>>            End_Object
34401>>>        End_Object
34402>>>    End_Object 
34403>>>    
34403>>>    
34403>>>    //  OnLoad:
34403>>>    //
34403>>>    //  Initializes the view.
34403>>>    Procedure OnLoad
34406>>>        Forward Send OnLoad
34408>>>        
34408>>>        //  Initialize UI based on settings
34408>>>        Send UpdateUI        
34409>>>        
34409>>>        //  Find first customer to trigger list fill
34409>>>        Send Find of oCustomer_DD FIRST_RECORD Index.1
34410>>>        
34410>>>    End_Procedure
34411>>>
34411>>>    
34411>>>    //  UpdateUI:
34411>>>    //
34411>>>    //  Updates the user interface according to the radio and checkbox settings.
34411>>>    Procedure UpdateUI
34414>>>        String sRadio
34414>>>        Boolean bChecked
34414>>>        
34414>>>        //  Hide / show columns based on radio settings
34414>>>        WebGet psValue of oBtnRadio1 to sRadio
34415>>>        
34415>>>        WebSet pbRender of oSingleBtnCol to (sRadio = "SINGLE_BUTTON")
34416>>>        WebSet pbRender of oDynamicBtnCol to (sRadio = "DYNAMIC_BUTTONS")
34417>>>        WebSet pbRender of oStaticImageCol to (sRadio = "STATIC_IMAGE")
34418>>>        WebSet pbRender of oDynamicImageCol to (sRadio = "DYNAMIC_IMAGE")
34419>>>        
34419>>>        //  Add / remove CSS class based on checkbox
34419>>>        Get GetChecked of oColorCheckbox to bChecked
34420>>>        If (bChecked) Begin
34422>>>            WebSet psCSSClass of oCustomer_Balance to "DemoColumnBalance"
34423>>>        End
34423>>>>
34423>>>        Else Begin
34424>>>            WebSet psCSSClass of oCustomer_Balance to "" 
34425>>>        End
34425>>>>
34425>>>        
34425>>>        //  Update pbShowSelected based on checkbox
34425>>>        Get GetChecked of oShowSelectedCheckbox to bChecked
34426>>>        WebSet pbShowSelected of oWebList1 to bChecked
34427>>>    End_Procedure
34428>>>    
34428>>>    
34428>>>        
34428>>>    //  ShowCustomer:
34428>>>    //
34428>>>    //  Shows the customer dialog, passing this view as the return object and the customer RowId.
34428>>>    Procedure ShowCustomer String sRowID
34431>>>        Send PopupCustomerDialog of oDemoCustomerDialog Self sRowID
34432>>>    End_Procedure
34433>>>    
34433>>>    
34433>>>    //  OnCloseModalDialog:
34433>>>    //
34433>>>    //  Called by the customer dialog when it is closed, so we can refresh the list.
34433>>>    Procedure OnCloseModalDialog Handle hoModalDialog
34436>>>        Send GridRefresh of oWebList1
34437>>>    End_Procedure
34438>>>    
34438>>>    
34438>>>    
34438>>>    
34438>>>    //  ExecDeactivateCustomer:
34438>>>    //
34438>>>    //  Callback handler for the ShowYesNo displayed by DeactivateCustomer. If yes is clicked,
34438>>>    //  the customer will be deactivated.
34438>>>    Procedure ExecDeactivateCustomer Integer eResult
34441>>>        If (eResult = cmYes) Begin
34443>>>            Set Field_Changed_Value of oCustomer_DD Field Customer.Status to "N"
34444>>>            Send Request_Save of oCustomer_DD
34445>>>            
34445>>>            Send GridRefresh of oWebList1
34446>>>        End
34446>>>>
34446>>>    End_Procedure
34447>>>    
34447>>>    WebPublishProcedure ExecDeactivateCustomer
34448>>>    
34448>>>    
34448>>>    //  DeactivateCustomer:
34448>>>    //
34448>>>    //  Deactivates the customer after displaying a confirmation dialog.
34448>>>    Procedure DeactivateCustomer String sRowID
34451>>>        RowID rRowID
34451>>>        
34451>>>        //  Make sure the right customer is in the buffer
34451>>>        Move (DeserializeRowID(sRowID)) to rRowID
34452>>>        If (not(IsNullRowID(rRowID))) Begin
34454>>>            Send FindByRowId of oCustomer_DD Customer.File_Number rRowID
34455>>>            
34455>>>            //  Show Confirmation  
34455>>>            Send ShowYesNo Self (RefProc(ExecDeactivateCustomer)) (SFormat("Do you want to deactivate customer '%1'?", Trim(Customer.Name))) "Confirm"
34456>>>        End
34456>>>>
34456>>>    End_Procedure
34457>>>    
34457>>>    
34457>>>
34457>>>End_Object
34458>    
34458>    Use CustomerXML.wo
Including file: CustomerXML.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\CustomerXML.wo)
34458>>>Use cWebService.pkg
34458>>>Use DataDict.pkg
34458>>>Use Customer.DD
34458>>>
34458>>>Object oCustXML is a cWebService
34460>>>
34460>>>    // The main purpose of this sample is to show how data can be passed in and out
34460>>>    // as non-specified XML.
34460>>>    // When writing your functions, always consider using structs and arrays first. These data
34460>>>    // types could represent a simpler solution for the users and fewer lines of code
34460>>>    // in your function.
34460>>>    
34460>>>    // psDocumentation provides high level documentation of your web service. Clients using
34460>>>    // this service will see and use this documentation.
34460>>>    Set psDocumentation to ;        ("This uses a web service to return a list of customers and to pass a " + ;          "list of customers with items marked for delete. It is expected that the " + ;          "client using this will know what the format of the XML document must be")
34461>>>    
34461>>>    Set psServiceName to "CustomerXML"
34462>>>    Set psServiceURI to "http://tempuri.org/"
34463>>>    Set psServiceTitle to "Customer XML Service"
34464>>>
34464>>>    Object Customer_DD is a Customer_DataDictionary
34466>>>        Send DefineAllExtendedFields
34467>>>    End_Object    // Customer_DD
34468>>>
34468>>>    Set Main_DD to Customer_DD
34469>>>
34469>>>    Function CustomerXMLList Returns XmlHandle
#REM SEND REGISTERINTERFACE |CI7089 "get_CustomerXMLList" "Returns XmlHandle" "Returns an XML document of all customers (Name, Number, State)."
34473>>>       Integer bOk
34473>>>       Handle hoXML hoRoot hoEle hoXML1 hoRoot1
34473>>>       Handle hoCustomerDD
34473>>>       String sName sNumber sState sNamespace
34473>>>    
34473>>>       Move Customer_dd to hoCustomerDD
34474>>>    
34474>>>       // namespace to use for document
34474>>>       Move "http://www.dataaccess.com/Test/CustomerList" to sNameSpace
34475>>>    
34475>>>       // create XML document / Create root node
34475>>>       Get Create (RefClass(cXMLDomDocument)) to hoXML
34476>>>       // Create the Root element named CustomerList
34476>>>       Get CreateDocumentElementNS Of hoXML sNameSpace "CustomerList" To hoRoot
34477>>>       // now go through all customer records
34477>>>       Send Clear of hoCustomerDD
34478>>>       Send Find of hoCustomerDD ge 2
34479>>>       While (found)
34483>>>           // get name, number and state to strings
34483>>>           Move (trim(Customer.Name))    To sName
34484>>>           Move Customer.Customer_Number To sNumber
34485>>>           Move (trim(Customer.State))   To sState
34486>>>           // for each customer create customer node with child elements
34486>>>           Get AddElementNS Of hoRoot sNameSpace "Customer" "" To hoEle
34487>>>              Send AddElementNS Of hoEle sNameSpace "Name"   sName
34488>>>              Send AddElementNS Of hoEle sNameSpace "Number" sNumber
34489>>>              Send AddElementNS Of hoEle sNameSpace "State"  sState
34490>>>           Send Destroy Of hoEle
34491>>>           Send Find of hoCustomerDD gt 2
34492>>>       Loop
34493>>>>
34493>>>       Function_Return hoXML
34494>>>    End_Function
34495>>>    
34495>>>    // Pass XML customer document and parse it.
34495>>>    // Delete marked customers. Return an XML document containing a new list of customers.
34495>>>    Function DelCustomerXMLList XmlHandle CustomerList Returns XmlHandle
#REM SEND REGISTERINTERFACE |CI7090 "get_DelCustomerXMLList" "XmlHandle CustomerList Returns XmlHandle" "Passed a customer XML with delete atrributes. Deletes all customers and returns a new list."
34499>>>       Handle  hoCustomerDD
34499>>>       Handle  hoRoot hoCust
34499>>>       Handle  hoRetXml hoRetRoot hoRetCust
34499>>>       String  sDel sNumber sNs
34499>>>       Boolean bDelete
34499>>>    
34499>>>       If not CustomerList function_return 0
34502>>>    
34502>>>       Move Customer_DD to hoCustomerDD
34503>>>    
34503>>>       // namespaceURI of in and out XML doc
34503>>>       Move "http://www.dataaccess.com/Test/CustomerList" to sNs
34504>>>    
34504>>>       // this will be our return document
34504>>>       Get Create (RefClass(cXmlDomDocument)) to hoRetXml
34505>>>       Get CreateDocumentElementNS of hoRetXml sNs "CustomerList" to hoRetRoot
34506>>>    
34506>>>       // go through node list looking for customers to delete
34506>>>       Get DocumentElement of CustomerList to hoRoot
34507>>>       Get ChildElementNS of hoRoot sNs "Customer" to hoCust
34508>>>       While hoCust
34512>>>    
34512>>>           // if attribute "Delete" is "Y", we will delete it
34512>>>           Get AttributeValue Of hoCust "Delete" To sDel
34513>>>           Move (sDel="Y") to bDelete
34514>>>           If (bDelete) Begin
34516>>>                // attempt to delete customer
34516>>>                Get ChildElementValueNS Of hoCust sNs "Number" To sNumber
34517>>>                Send Clear of hoCustomerDD
34518>>>                Move sNumber to Customer.Customer_Number
34519>>>                Send Find of hoCustomerDD eq 1
34520>>>                If (found) Begin
34522>>>                    // This is commented out because this is a test.
34522>>>                    // We will remove the customer from the XML list,
34522>>>                    // but not from the database table.
34522>>>                    // This allows the sample to be run over and over.
34522>>>    
34522>>>                    //Send Request_delete of hoCustomerDD
34522>>>                    //If (err) begin
34522>>>                    //    Move False to bDelete
34522>>>                    //end
34522>>>                End
34522>>>>
34522>>>           End
34522>>>>
34522>>>           // if not deleted, add the customer node to the return document
34522>>>           If not bDelete begin
34524>>>               Get CloneNode of hoCust true to hoRetCust          // clone node and all children
34525>>>               Get AppendNode of hoRetRoot hoRetCust to hoRetCust // append to return doc
34526>>>               Send destroy of hoRetCust
34527>>>           End
34527>>>>
34527>>>           //
34527>>>           Get NextElementNS of hoCust sNs "Customer" to hoCust
34528>>>       Loop
34529>>>>
34529>>>       // note that both the passed XML document and the return document
34529>>>       // will automatically be destroyed by the web service handler
34529>>>       Function_Return hoRetXML
34530>>>    End_Function
34531>>>
34531>>>End_Object    // oCustXML
34532>    Use CustomerAndOrderInfo.wo
Including file: CustomerAndOrderInfo.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\CustomerAndOrderInfo.wo)
34532>>>// Structures used by the services
34532>>>
34532>>>// Customer Information
34532>>>// This structure matches the structure of the Customer table
34532>>>struct tCustomerInfo
34532>>>    integer iCustNumber
34532>>>    string  sName
34532>>>    string  sCustAddress
34532>>>    string  sCity
34532>>>    string  sState
34532>>>    string  sZip
34532>>>    string  sPhoneNumber
34532>>>    string  sFaxNumber
34532>>>    string  sEmailAddress
34532>>>    real    rCreditLimit
34532>>>    real    rPurchases
34532>>>    real    rBalance
34532>>>    string  sComments
34532>>>    string  sStatus
34532>>>end_struct
34532>>>
34532>>>// These next two structures do not match the structure of the Customer table exactly
34532>>>// It is an example of structures that could have been determined by some other source (e.g. an industry group)
34532>>>
34532>>>// Customer Address
34532>>>struct tCustAddress
34532>>>    string  sCustAddress
34532>>>    string  sCity
34532>>>    string  sState
34532>>>    string  sZip
34532>>>end_struct
34532>>>
34532>>>// New Customer
34532>>>struct tNewCustomer
34532>>>    string          sFirstName
34532>>>    string          sMiddleName
34532>>>    string          sLastName
34532>>>    tCustAddress    Address
34532>>>    tCustAddress    Address
34532>>>    string          sPhoneNumber
34532>>>    string          sFaxNumber
34532>>>    string          sEmailAddress
34532>>>end_struct
34532>>>
34532>>>// Order Detail
34532>>>struct tOrderDet
34532>>>    string  sItemID
34532>>>    integer iQty
34532>>>    real    rUnitPrice
34532>>>    real    rPrice
34532>>>end_struct
34532>>>
34532>>>// Order
34532>>>struct tOrder
34532>>>    integer     iOrderNumber
34532>>>    integer     iCustNumber
34532>>>    date        dOrdDate
34532>>>    string      sTerms
34532>>>    string      sShipVia
34532>>>    string      sOrderedBy
34532>>>    string      sSalesPerson
34532>>>    real        rOrderTotal
34532>>>    tOrderDet[] ArrayOfDetails
34532>>>    tOrderDet[] ArrayOfDetails
34532>>>end_struct
34532>>>
34532>>>// Order Summary
34532>>>struct tOrderSummary
34532>>>    integer iOrderNumber
34532>>>    date    dOrderDate
34532>>>    real    rOrderTotal
34532>>>end_struct
34532>>>
34532>>>Use cWebService.pkg
34532>>>Use DataDict.pkg
34532>>>Use VENDOR.DD
34532>>>Use INVT.DD
34532>>>Use CUSTOMER.DD
34532>>>Use SALESP.DD
34532>>>Use OrderHea.DD
34532>>>Use ORDERDTL.DD
34532>>>
34532>>>Object oCustOrderWebService is a cWebService
34534>>>
34534>>>    // psDocumentation provides high level documentation of your web service. Clients using
34534>>>    // this service will see and use this documentation.
34534>>>    set psDocumentation to ;        ("This DataFlex Web Service provides information on Customers " +;         "and their orders. You can also use this service to update Customer information, " +;         "create new Customers and retrieve a list of Customers.")
34535>>>    
34535>>>    Set psServiceName to "CustomerAndOrderInfo"
34536>>>    Set psServiceURI to "http://tempuri.org/"
34537>>>    Set psServiceTitle to "Customer and Order Information Service"
34538>>>
34538>>>    Object Vendor_DD is a Vendor_DataDictionary
34540>>>        Send DefineAllExtendedFields
34541>>>    End_Object    // Vendor_DD
34542>>>
34542>>>    Object Invt_DD is a Invt_DataDictionary
34544>>>        Set DDO_Server to Vendor_DD
34545>>>        Send DefineAllExtendedFields
34546>>>    End_Object    // Invt_DD
34547>>>
34547>>>    Object Customer_DD is a Customer_DataDictionary
34549>>>        Send DefineAllExtendedFields
34550>>>    End_Object    // Customer_DD
34551>>>
34551>>>    Object Salesp_DD is a Salesp_DataDictionary
34553>>>        Send DefineAllExtendedFields
34554>>>    End_Object    // Salesp_DD
34555>>>
34555>>>    Object OrderHea_DD is a OrderHea_DataDictionary
34557>>>        Set DDO_Server to Customer_DD
34558>>>        Set DDO_Server to Salesp_DD
34559>>>        Set Constrain_File to Customer.File_Number
34560>>>        Send DefineAllExtendedFields
34561>>>    End_Object    // OrderHea_DD
34562>>>
34562>>>    Object OrderDtl_DD is a OrderDtl_DataDictionary
34564>>>        Set DDO_Server to OrderHea_DD
34565>>>        Set DDO_Server to Invt_DD
34566>>>        Set Constrain_File to OrderHea.File_Number
34567>>>        Send DefineAllExtendedFields
34568>>>    End_Object    // OrderDtl_DD
34569>>>
34569>>>    Set Main_DD to Customer_DD
34570>>>
34570>>>    // Function GetOrdersForCustomer:
34570>>>    // Searches the OrderHea table for specified customer number and returns order numbers
34570>>>    //
34570>>>    // This demonstrates how to build and return data in an array based on a fundamental data type (array of integers)
34570>>>    //
34570>>>    // iCustNum - Customer number
34570>>>    // iArrayOfOrderNumbers - Array containing Order numbers for iCustNum
34570>>>    Function GetOrdersForCustomer integer iCustNum returns Integer[]
#REM SEND REGISTERINTERFACE |CI7091 "get_GetOrdersForCustomer" "integer iCustNum returns Integer[]" "Searches for order number in the OrderHea file for specified customer number and returns order numbers."
34574>>>        Integer[] iArrayOfOrderNumbers
34575>>>        Handle hoCustomerDD hoOrderHeaDD
34575>>>        Integer iCount iOldConstraint iNewConst
34575>>>    
34575>>>        Move 0 to iCount
34576>>>    
34576>>>        // Validate Customer Number
34576>>>        Move Customer_DD to hoCustomerDD
34577>>>        Send Clear of hoCustomerDD
34578>>>        Move iCustNum to Customer.Customer_number
34579>>>        Send Find of hoCustomerDD EQ 1
34580>>>    
34580>>>        // Find Orders for iCustNum
34580>>>        If (Found) Begin
34582>>>            Move OrderHea_DD to hoOrderHeaDD
34583>>>            Send Find of hoOrderHeaDD first_record 1
34584>>>    
34584>>>            While (Found)
34588>>>                Move OrderHea.Order_number to iArrayOfOrderNumbers[iCount]
34589>>>    
34589>>>                Send Find of hoOrderHeaDD GT 1
34590>>>                Increment iCount
34591>>>            Loop
34592>>>>
34592>>>    
34592>>>        end
34592>>>>
34592>>>        else Begin
34593>>>            Send WebServiceException "Customer number not found."
34594>>>            Function_Return
34595>>>        end
34595>>>>
34595>>>    
34595>>>        Function_Return iArrayOfOrderNumbers
34596>>>    End_Function  // GetOrdersForCustomer
34597>>>    
34597>>>    // Function ChangeCustomerAddress:
34597>>>    // Change address for customer
34597>>>    //
34597>>>    // This demonstrates how to pass and use simple struct data
34597>>>    //
34597>>>    // NewCustomerAddress - New Customer Address
34597>>>    // bSuccess - Boolean indicating if the new address was changed successfully or not
34597>>>    Function ChangeCustomerAddress integer iCustNum tCustAddress NewCustomerAddress returns Boolean
#REM SEND REGISTERINTERFACE |CI7092 "get_ChangeCustomerAddress" "integer iCustNum tCustAddress NewCustomerAddress returns Boolean" "Change address for customer."
34601>>>        boolean bSuccess
34601>>>        handle hDD
34601>>>    
34601>>>        move False to bSuccess
34602>>>    
34602>>>        move Customer_DD to hDD
34603>>>        send clear of hDD
34604>>>        move iCustNum to Customer.Customer_number
34605>>>        send find of hDD EQ 1
34606>>>    
34606>>>        if (found) begin
34608>>>            // Move values from structure to DD buffer
34608>>>            set field_changed_value  of hDD FIELD Customer.Address to NewCustomerAddress.sCustAddress
34609>>>            set field_changed_value  of hDD FIELD Customer.City    to NewCustomerAddress.sCity
34610>>>            set field_changed_value  of hDD FIELD Customer.State   to NewCustomerAddress.sState
34611>>>            set field_changed_value  of hDD FIELD Customer.Zip     to NewCustomerAddress.sZip
34612>>>    
34612>>>            // Save record
34612>>>            send Request_Save of hDD
34613>>>            move (not(Err)) to bSuccess
34614>>>        end
34614>>>>
34614>>>    
34614>>>        Function_Return bSuccess
34615>>>    End_Function  // ChangeCustomerAddress
34616>>>    
34616>>>    // Function CreateNewCustomer:
34616>>>    // Add new customer to Customer table
34616>>>    //
34616>>>    // This demonstrates how to pass and use more complex struct data,
34616>>>    // where the struct contains an element that is itself another struct
34616>>>    //
34616>>>    // NewCustomer - New Customer
34616>>>    // iSuccess - Integer containing the customer number, if the new customer was added successfully
34616>>>    // or -1 if customer was not added
34616>>>    Function CreateNewCustomer tNewCustomer NewCustomer returns Integer
#REM SEND REGISTERINTERFACE |CI7093 "get_CreateNewCustomer" "tNewCustomer NewCustomer returns Integer" "Add new customer to Customer table."
34620>>>        integer iSuccess
34620>>>        handle hDD
34620>>>        string sName
34620>>>    
34620>>>        move Customer_DD to hDD
34621>>>        send clear of hDD
34622>>>    
34622>>>        // Move values from structure to DD buffer
34622>>>        move (NewCustomer.sFirstName * NewCustomer.sMiddleName * NewCustomer.sLastName) to sName
34623>>>        set field_changed_value  of hDD FIELD Customer.Name          to sName
34624>>>        set field_changed_value  of hDD FIELD Customer.Address       to NewCustomer.Address.sCustAddress
34625>>>        set field_changed_value  of hDD FIELD Customer.City          to NewCustomer.Address.sCity
34626>>>        set field_changed_value  of hDD FIELD Customer.State         to NewCustomer.Address.sState
34627>>>        set field_changed_value  of hDD FIELD Customer.Zip           to NewCustomer.Address.sZip
34628>>>        set field_changed_value  of hDD FIELD Customer.Phone_number  to NewCustomer.sPhoneNumber
34629>>>        set field_changed_value  of hDD FIELD Customer.Fax_number    to NewCustomer.sFaxNumber
34630>>>        set field_changed_value  of hDD FIELD Customer.Email_address to NewCustomer.sEmailAddress
34631>>>
34631>>>        // note that the default for credit_limit is already set in the DD
34631>>>        set field_changed_value  of hDD FIELD Customer.Purchases     to 0
34632>>>        set field_changed_value  of hDD FIELD Customer.Balance       to 0
34633>>>        set field_changed_value  of hDD FIELD Customer.Comments      to "New Customer"
34634>>>        set field_changed_value  of hDD FIELD Customer.Status        to "Y"  // Active by default
34635>>>    
34635>>>        // Save record
34635>>>        send request_save of hDD
34636>>>        if (not(Err)) move Customer.Customer_Number to iSuccess
34639>>>        else move -1 to iSuccess
34641>>>    
34641>>>        Function_Return iSuccess
34642>>>    End_Function  // CreateNewCustomer
34643>>>    
34643>>>    // Function GetCustomerInfo:
34643>>>    // Searches for customer number in the Customer table and returns customer details
34643>>>    //
34643>>>    // This demonstrates how to build and return data in a simple struct
34643>>>    //
34643>>>    // iCustNum - Customer number
34643>>>    // OneCustomer - Structure containing Customer Information from Customer Table
34643>>>    Function GetCustomerInfo integer iCustNum returns tCustomerInfo
#REM SEND REGISTERINTERFACE |CI7094 "get_GetCustomerInfo" "integer iCustNum returns tCustomerInfo" "Searches for customer number in the Customer table and returns customer details."
34647>>>        tCustomerInfo OneCustomer
34647>>>        tCustomerInfo OneCustomer
34647>>>        handle hDD
34647>>>    
34647>>>        move Customer_DD to hDD
34648>>>        send clear of hDD
34649>>>        move iCustNum to Customer.Customer_number
34650>>>        send find of hDD EQ 1
34651>>>    
34651>>>        if (found) begin
34653>>>            move Customer.Customer_Number to OneCustomer.iCustNumber
34654>>>            move Customer.Name            to OneCustomer.sName
34655>>>            move Customer.Address         to OneCustomer.sCustAddress
34656>>>            move Customer.City            to OneCustomer.sCity
34657>>>            move Customer.State           to OneCustomer.sState
34658>>>            move Customer.Zip             to OneCustomer.sZip
34659>>>            move Customer.Phone_number    to OneCustomer.sPhoneNumber
34660>>>            move Customer.Fax_number      to OneCustomer.sFaxNumber
34661>>>            move Customer.Email_address   to OneCustomer.sEmailAddress
34662>>>            move Customer.Credit_limit    to OneCustomer.rCreditLimit
34663>>>            move Customer.Purchases       to OneCustomer.rPurchases
34664>>>            move Customer.Balance         to OneCustomer.rBalance
34665>>>            move Customer.Comments        to OneCustomer.sComments
34666>>>            move Customer.Status          to OneCustomer.sStatus
34667>>>        end
34667>>>>
34667>>>        else begin
34668>>>            send WebServiceException "Customer number not found."
34669>>>            Function_Return
34670>>>        End
34670>>>>
34670>>>    
34670>>>        Function_Return OneCustomer
34671>>>    End_Function  // GetCustomerInfo
34672>>>    
34672>>>    // Function GetCustomerInfoList:
34672>>>    // Reads customer table and returns an array with a list of customers
34672>>>    //
34672>>>    // This demonstrates how to build and return data in an array of structs
34672>>>    //
34672>>>    // ArrayOfCustomers - Array containing Customer from Customer table
34672>>>    Function GetCustomerInfoList returns tCustomerInfo[]
#REM SEND REGISTERINTERFACE |CI7095 "get_GetCustomerInfoList" "returns tCustomerInfo[]" "Reads customer table and returns an array with a list of customers."
34676>>>        tCustomerInfo[] ArrayOfCustomers
34676>>>        tCustomerInfo[] ArrayOfCustomers
34677>>>        handle hoCustomerDD
34677>>>        integer iCount
34677>>>    
34677>>>        move 0 to iCount
34678>>>        move Customer_dd to hoCustomerDD
34679>>>    
34679>>>        // now go through all customer records
34679>>>        send clear of hoCustomerDD
34680>>>        send find of hoCustomerDD GE 2
34681>>>        while (found)
34685>>>            move Customer.Customer_Number to ArrayOfCustomers[iCount].iCustNumber
34686>>>            move Customer.Name            to ArrayOfCustomers[iCount].sName
34687>>>            move Customer.Address         to ArrayOfCustomers[iCount].sCustAddress
34688>>>            move Customer.City            to ArrayOfCustomers[iCount].sCity
34689>>>            move Customer.State           to ArrayOfCustomers[iCount].sState
34690>>>            move Customer.Zip             to ArrayOfCustomers[iCount].sZip
34691>>>            move Customer.Phone_number    to ArrayOfCustomers[iCount].sPhoneNumber
34692>>>            move Customer.Fax_number      to ArrayOfCustomers[iCount].sFaxNumber
34693>>>            move Customer.Email_address   to ArrayOfCustomers[iCount].sEmailAddress
34694>>>            move Customer.Credit_limit    to ArrayOfCustomers[iCount].rCreditLimit
34695>>>            move Customer.Purchases       to ArrayOfCustomers[iCount].rPurchases
34696>>>            move Customer.Balance         to ArrayOfCustomers[iCount].rBalance
34697>>>            move Customer.Comments        to ArrayOfCustomers[iCount].sComments
34698>>>            move Customer.Status          to ArrayOfCustomers[iCount].sStatus
34699>>>    
34699>>>            send find of hoCustomerDD GT 2
34700>>>            increment iCount
34701>>>        Loop
34702>>>>
34702>>>    
34702>>>        Function_Return ArrayOfCustomers
34703>>>    End_Function  // CustomerList
34704>>>    
34704>>>    // Function GetOrderSummaryForCustomer:
34704>>>    // Searches for order number in the OrderHea table for specified customer number and returns
34704>>>    // order number, date and total.
34704>>>    //
34704>>>    // This demonstrates how to build and return data in an array of structs
34704>>>    //
34704>>>    // iCustNum - Customer number
34704>>>    // ArrayOfOrdersSum - Array containing OrderSummary for iCustNum
34704>>>    Function GetOrderSummaryForCustomer integer iCustNum returns tOrderSummary[]
#REM SEND REGISTERINTERFACE |CI7096 "get_GetOrderSummaryForCustomer" "integer iCustNum returns tOrderSummary[]" "Searches for order number in the OrderHea table for specified customer number and returns order number, date and total."
34708>>>        tOrderSummary[] ArrayOfOrdersSum
34708>>>        tOrderSummary[] ArrayOfOrdersSum
34709>>>        handle hDD
34709>>>        integer iCount iOldConstraint
34709>>>    
34709>>>        move 0 to iCount
34710>>>    
34710>>>        // Validate Customer Number
34710>>>        move Customer_DD to hDD
34711>>>        send clear of hDD
34712>>>        move iCustNum to Customer.Customer_number
34713>>>        send find of hDD EQ 1
34714>>>    
34714>>>        // Find Orders for iCustNum
34714>>>        if (found) begin
34716>>>            move OrderHea_DD to hDD
34717>>>            send find of hDD first_record 1
34718>>>    
34718>>>            while (found)
34722>>>                move OrderHea.Order_number to ArrayOfOrdersSum[iCount].iOrderNumber
34723>>>                move OrderHea.Order_Date   to ArrayOfOrdersSum[iCount].dOrderDate
34724>>>                move OrderHea.Order_Total  to ArrayOfOrdersSum[iCount].rOrderTotal
34725>>>    
34725>>>                send find of hDD GT 1
34726>>>                increment iCount
34727>>>            loop
34728>>>>
34728>>>    
34728>>>        end
34728>>>>
34728>>>        else begin
34729>>>            send WebServiceException "Customer number not found."
34730>>>            Function_Return
34731>>>    
34731>>>        end
34731>>>>
34731>>>    
34731>>>        Function_Return ArrayOfOrdersSum
34732>>>    End_Function  // GetOrderSummaryForCustomer
34733>>>    
34733>>>    // Function GetOrderInfo:
34733>>>    // Searches for order number in the OrderHea table and returns order header and details
34733>>>    //
34733>>>    // This demonstrates how to build and return data in complex structs.
34733>>>    // This struct contains a member that is an array of structs
34733>>>    //
34733>>>    // iOrdNum - Order number
34733>>>    // OneOrder - Structure containing Order header and details
34733>>>    Function GetOrderInfo integer iOrdNum returns tOrder
#REM SEND REGISTERINTERFACE |CI7097 "get_GetOrderInfo" "integer iOrdNum returns tOrder" "Searches for order number in the OrderHea table and returns order header and details."
34737>>>        tOrder OneOrder
34737>>>        tOrder OneOrder
34737>>>        handle hDD
34737>>>        integer iCount iOldConstraint
34737>>>        Boolean bHasRecord
34737>>>    
34737>>>        move 0 to iCount
34738>>>    
34738>>>        move OrderHea_DD to hDD
34739>>>    
34739>>>        // OrderHea_DD is constrained by Customer. In order to find all orders,
34739>>>        // not only the ones belonging to the current Customer in the DD buffer,
34739>>>        // we need to remove the constraint. Here we:
34739>>>        // save the current constraint
34739>>>        get constrain_file of hDD to iOldConstraint
34740>>>        // remove the constraint
34740>>>        set constrain_file of hDD to 0
34741>>>        // enforce the new rule, i.e. no constraint
34741>>>        send rebuild_constraints of hDD
34742>>>    
34742>>>        send clear of hDD
34743>>>        move iOrdNum to OrderHea.Order_number
34744>>>        send find of hDD EQ 1
34745>>>    
34745>>>        // restore the default constraint to whatever it was
34745>>>        set constrain_file of hDD to iOldConstraint
34746>>>        send rebuild_constraints of hDD
34747>>>    
34747>>>        get HasRecord of hDD to bHasRecord
34748>>>        if (bHasRecord) begin
34750>>>    
34750>>>            move OrderHea.Order_Number    to OneOrder.iOrderNumber
34751>>>            move OrderHea.Customer_Number to OneOrder.iCustNumber
34752>>>            move OrderHea.Order_Date      to OneOrder.dOrdDate
34753>>>            move OrderHea.Terms           to OneOrder.sTerms
34754>>>            move OrderHea.Ship_Via        to OneOrder.sShipVia
34755>>>            move OrderHea.Ordered_By      to OneOrder.sOrderedBy
34756>>>            move OrderHea.Salesperson_ID  to OneOrder.sSalesPerson
34757>>>            move OrderHea.Order_Total     to OneOrder.rOrderTotal
34758>>>    
34758>>>            move OrderDtl_DD to hDD
34759>>>            send find of hDD first_record 1
34760>>>            while (found)
34764>>>                move OrderDtl.Item_id        to OneOrder.ArrayOfDetails[iCount].sItemID
34765>>>                move OrderDtl.Qty_ordered    to OneOrder.ArrayOfDetails[iCount].iQty
34766>>>                move OrderDtl.Price          to OneOrder.ArrayOfDetails[iCount].rUnitPrice
34767>>>                move OrderDtl.Extended_price to OneOrder.ArrayOfDetails[iCount].rPrice
34768>>>    
34768>>>                send find of hDD GT 1
34769>>>                increment iCount
34770>>>            loop
34771>>>>
34771>>>    
34771>>>        end
34771>>>>
34771>>>        else begin
34772>>>            send WebServiceException "Order number not found."
34773>>>            Function_Return
34774>>>        end
34774>>>>
34774>>>    
34774>>>        Function_Return OneOrder
34775>>>    End_Function  // GetOrderInfo
34776>>>
34776>>>End_Object    // oCustOrderWebService
34777>    Use TestService.wo
Including file: TestService.wo    (A:\git\bagunca_aprendendo\visualdataflex\WebOrder\AppSrc\TestService.wo)
34777>>>Use cWebService.pkg
34777>>>Use DataDict.pkg
34777>>>Use VENDOR.DD
34777>>>Use INVT.DD
34777>>>Use CUSTOMER.DD
34777>>>Use SALESP.DD
34777>>>Use OrderHea.DD
34777>>>Use OrderDtl.DD
34777>>>
34777>>>Object oTestService is a cWebService
34779>>>
34779>>>    Set psDocumentation to ;        ("This is a Test Web Service. It contains a few simple operations " +;         "demonstrating how to create a DataFlex Web Service. "+;         "To test any of these web services using your web browser, simply follow "+;         "the link below for the specified service. "+;         "You can also view the WSDL for this service by accessing the link to "+;         "Service Description below. To create a new Web Service operation, simply "+;         "add a function in the oTestService Web Service object and select Publish. "+;         "To learn more about creating Web Services in DataFlex, please see the "+;         "Web Services section in the DataFlex Help.")
34780>>>
34780>>>    Set psServiceName to "TestService"
34781>>>    Set psServiceURI to "http://www.visualdataflex.com/examples/testservice"
34782>>>    Set psServiceTitle to "DataFlex Test Web Service"
34783>>>    Set psDescription to "Test Web Service"
34784>>>
34784>>>    Object Vendor_DD is a Vendor_DataDictionary
34786>>>        Send DefineAllExtendedFields
34787>>>    End_Object    // Vendor_DD
34788>>>
34788>>>    Object Invt_DD is a Invt_DataDictionary
34790>>>        Set DDO_Server to Vendor_DD
34791>>>        Send DefineAllExtendedFields
34792>>>    End_Object    // Invt_DD
34793>>>
34793>>>    Object Customer_DD is a Customer_DataDictionary
34795>>>        Send DefineAllExtendedFields
34796>>>    End_Object    // Customer_DD
34797>>>
34797>>>    Object Salesp_DD is a Salesp_DataDictionary
34799>>>        Send DefineAllExtendedFields
34800>>>    End_Object    // Salesp_DD
34801>>>
34801>>>    Object OrderHea_DD is a OrderHea_DataDictionary
34803>>>        Set DDO_Server to Customer_DD
34804>>>        Set DDO_Server to Salesp_DD
34805>>>        Send DefineAllExtendedFields
34806>>>    End_Object    // OrderHea_DD
34807>>>
34807>>>    Object OrderDtl_DD is a OrderDtl_DataDictionary
34809>>>        Set DDO_Server to OrderHea_DD
34810>>>        Set DDO_Server to Invt_DD
34811>>>        Send DefineAllExtendedFields
34812>>>    End_Object    // OrderDtl_DD
34813>>>
34813>>>    Set Main_DD to Invt_DD
34814>>>
34814>>>    Function SayHello String sName Returns String
#REM SEND REGISTERINTERFACE |CI7098 "get_SayHello" "String sName Returns String" "Returns a hello message using the name passed as the string."
34818>>>        String sReturn
34818>>>             
34818>>>        Move ("Hello," * sName +".") to sReturn
34819>>>        
34819>>>        Function_Return sReturn
34820>>>    End_Function
34821>>>    
34821>>>    Function Welcome String sName Returns String
#REM SEND REGISTERINTERFACE |CI7099 "get_Welcome" "String sName Returns String" "Returns a welcome message using the name passed as the string and IIS server variables."
34825>>>        String sReturn
34825>>>        String sIPAddr sServer sLocalAddr
34825>>>        
34825>>>        Get ServerVariable "REMOTE_ADDR" to sIpAddr   
34826>>>        Get ServerVariable "SERVER_NAME" to sServer
34827>>>        Get ServerVariable "LOCAL_ADDR" to sLocalAddr
34828>>>             
34828>>>        Move ("Hello," * sName + ". This is" * sServer) to sReturn
34829>>>        Move (sReturn * ". I see you're from" * sIPAddr * ". Welcome to" * sLocalAddr +"!") to sReturn
34830>>>        
34830>>>        Function_Return sReturn
34831>>>    End_Function    
34832>>>    
34832>>>    Function Echo String echoString Returns String
#REM SEND REGISTERINTERFACE |CI7100 "get_Echo" "String echoString Returns String" "Echoes back the string passed."
34836>>>        Function_Return echoString
34837>>>    End_Function
34838>>>
34838>>>    Function AddNumber Real number1 Real number2 Returns Real
#REM SEND REGISTERINTERFACE |CI7101 "get_AddNumber" "Real number1 Real number2 Returns Real" "Adds two numbers and returns the result."
34842>>>        Function_Return (number1+number2)
34843>>>    End_Function
34844>>>
34844>>>    Function PriceQuote String itemID Returns Number
#REM SEND REGISTERINTERFACE |CI7102 "get_PriceQuote" "String itemID Returns Number" "Looks up the price of a particular inventory item. Example item identifiers, DT, GOLD, MAPS, OBM, RUNMTR."
34848>>>        Send Clear of Invt_DD
34849>>>        Move itemID to Invt.Item_id
34850>>>        Send Find of Invt_DD eq 1
34851>>>        If (Not(Found)) Begin
34853>>>            //If the inventory item cannot be found, raise a web service exception
34853>>>            Send WebServiceException ("Unknown inventory item '"+itemID+"'")
34854>>>            Function_Return
34855>>>        End
34855>>>>
34855>>>        Function_Return Invt.Unit_price
34856>>>    End_Function
34857>>>
34857>>>    Function EstimatedOrderDeliveryDate Integer customerNumber Integer orderNumber Returns Date
#REM SEND REGISTERINTERFACE |CI7103 "get_EstimatedOrderDeliveryDate" "Integer customerNumber Integer orderNumber Returns Date" "Looks up an order and returns the delivery date. Example: customer number 1 and order number 101."
34861>>>        Send Clear of OrderHea_DD
34862>>>        Move customerNumber to OrderHea.Customer_number
34863>>>        Move orderNumber to OrderHea.Order_number
34864>>>        Send Find of OrderHea_DD eq 2
34865>>>        If (Not(Found)) Begin
34867>>>            //If the order cannot be found, we raise a web service exception
34867>>>            Send WebServiceException "The specified order number, or order number/customer number combination, is invalid"
34868>>>            Function_Return
34869>>>        End
34869>>>>
34869>>>
34869>>>        //We don't actually have a delivery date field in the database
34869>>>        //so we'll simply use the order date for this sample and add 30 days to it
34869>>>        Function_Return (OrderHea.Order_date + 30)
34870>>>    End_Function
34871>>>
34871>>>    Function ItemsSoldToDate String itemID Returns Integer
#REM SEND REGISTERINTERFACE |CI7104 "get_ItemsSoldToDate" "String itemID Returns Integer" "Calculates the total number of items sold. Example: item identifiers, DT, GOLD, MAPS, OBM, RUNMTR."
34875>>>        Integer total
34875>>>        //We'll do a simple brute force search through the database
34875>>>        //and calculate the total number of items sold.
34875>>>        //It's a bit naive, but it will do for this example
34875>>>        Send Clear of OrderDtl_DD
34876>>>        Send Find of OrderDtl_DD ge 1
34877>>>        While (Found)
34881>>>            If (OrderDtl.Item_id = Uppercase(itemId));                Increment total
34884>>>            Send Find of OrderDtl_DD gt 1
34885>>>        Loop
34886>>>>
34886>>>        Function_Return total
34887>>>    End_Function
34888>>>
34888>>>End_Object    // oTestService
34889>    
34889>    
34889>    // Generates a string of 40 random characters between ASCII 33 & ASCII 126
34889>    // This should produce a unique string suitable for a 16 character encryption key.
34889>    // Excludes the ;"' characters
34889>    // Used by WebApps to give the psEncryptPassword property a unique value.
34889>    Function GenerateEncryptString Returns String
34892>        Integer i iASCII
34892>        String sChar sKey
34892>        
34892>        For i from 0 to 39
34898>            Move (Random(93)) to iASCII
34899>            Move (iASCII + 34) to iASCII
34900>            
34900>            If (iASCII = 34 or iASCII = 39 or iASCII = 59) Begin
34902>                Increment iASCII
34903>            End
34903>            
34903>            Move (Character(iASCII)) to sChar
34904>            Move (sKey + sChar) to sKey
34905>        Loop
34906>        
34906>        Function_Return sKey
34907>    End_Function
34908>
34908>
34908>    Procedure InitPassword
34911>        // Note to the developer: For security purposes each installation of the WebOrder workspace must
34911>        // contain a unique value for the framework's encryption key. This value is stored in the cWebApp
34911>        // object's psEncryptPassword property.
34911>        //
34911>        // To ensure each running installation of WebOrder is different we have modified the Web App's OnLoad
34911>        // event to generate a random psEncryptPassword value the first time that the web app is run. This 
34911>        // value is then used and is stored in the OrdSys system table so that it does not get re-generated
34911>        // in subsequent instances of this web application.
34911>        //
34911>        // Since WebOrder is installed and run automatically when you install DataFlex we are required to 
34911>        // ensure that the encryption password cannot be guessed. Normally you would not need, or want, 
34911>        // to Use this technique in your own web applications. Instead you would manually set psEncryptPassword
34911>        // to a trusted, unique value for each web application that you deploy.
34911>        
34911>        
34911>        // Test if an encryption password has already been generated.
34911>        If (Trim(OrdSys.EncryptPassword) = "") Begin
34913>            Reread OrdSys
34917>            // Just in case another instance wrote to OrdSys.EncryptPassword in the millisecond
34917>            // between the above two lines of code we will test this value again
34917>            If (Trim(OrdSys.EncryptPassword) = "") Begin
34919>                Get GenerateEncryptString to OrdSys.EncryptPassword
34920>                SaveRecord OrdSys
34921>            End
34921>            Unlock
34922>        End
34922>
34922>        Set psEncryptPassword to (Trim(OrdSys.EncryptPassword))
34923>    End_Procedure
34924>    
34924>    Send InitPassword
34925>End_Object
34926>
34926>Send StartWebApp of oWebApp
34927>
Summary
Memory Available: 2147483646
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 21480
Total Resources: 0
Total Commands : 34926
Total Windows  : 1
Total Pages    : 1
Static Data    : 356039
Message area   : 252888
Total Blocks   : 14369
