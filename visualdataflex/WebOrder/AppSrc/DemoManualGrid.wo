Use cWebView.pkg
Use cWebPanel.pkg
Use cWebForm.pkg 
Use cWebGrid.pkg
Use cWebColumn.pkg
Use cWebLabel.pkg
Use cWebButton.pkg
Use cWebHtmlBox.pkg

Object oDemoManualGrid is a cWebView
    Set piWidth to 750
    Set psCaption to "Manual Grid"
    
    Set piColumnCount to 10

    Object oGrid is a cWebGrid
        Set pbFillHeight to True

        Set pbDataAware to False
        Set pbOfflineEditing to True
        
        Set pbColumnSortable to True
        Set piSortColumn to 0
        
        Object oArtistCol is a cWebColumn
            Set psCaption to "Artist"
            Set piWidth to 100
        End_Object
        
        Object oAlbumCol is a cWebColumn
            Set psCaption to "Album"
            Set piWidth to 100
        End_Object

        Object oSizeCol is a cWebColumn
            Set psCaption to "Size"
            Set peDataType to typeNumber
            Set piWidth to 40
            Set psMask to ",*0.0 MB"
            
            Set piPrecision to 1
            Set piMaxLength to 10
        End_Object

        Object oLengthCol is a cWebColumn
            Set psCaption to "Length"
            Set peDataType to typeNumber
            Set piWidth to 40
            Set psMask to ",*0.00 M"
            
            
            Set piMaxLength to 10
            Set piPrecision to 2
        End_Object
        
        Procedure OnManualLoadData tWebRow[] ByRef aTheRows String ByRef sCurrentRowID
            Integer iHigh
            
            Get LoadDataFromFile (&aTheRows) to iHigh
        End_Procedure 
        
        Procedure OnProcessDataSet tWebRow[] aData Integer eOperation Integer iSelectedRowIndex
            Send SaveDataToFile aData
            
            Send ShowInfoBox ("Saved " + String(SizeOfArray(aData)) + " lines!") "Confirm"
        End_Procedure
        
        Procedure OnLoad
            Forward Send OnLoad
            
            Send GridRefresh
        End_Procedure
    End_Object

    Object oWebButton1 is a cWebButton
        Set piColumnSpan to 0
        Set psCaption to "Save Data!"
    
        Procedure OnClick
            Send ProcessDataSet of oGrid 342
        End_Procedure
    End_Object
    
    Object oDescriptionLabel is a cWebHtmlBox
        Set psHtml to "<h1>Loading</h1><p>The data shown inside the grid is manually loaded from a CSV file. The <b>pbDataAware</b> property is set to False, so that it is manually loaded and doesn't try to find and save on DDOs. The grid is triggered to fill itself by calling <b>GridRefresh</b> and, because <b>pbDataAware</b> is False, this causes <b>OnManualLoadData</b> to be called. The data is put in an array of <b>tWebRow</b> structs received by reference. The first string in the aValues array is the unique for each row, it is required to provide such an unique ID. The <b>ConvertToClient</b> function can be used to convert values to right format understood by the JavaScript engine.</p><h1>Saving</h1><p>Saving is done for the entire set at once. It is triggered by calling <b>ProcessDataSet</b>, which tells the client to send all rows to the server in a new call. This new call fires the <b>OnProcessDataSet</b> event that gets the data in an array of tWebRow structs. The <b>ConvertFromClient</b> function can be used to convert values back to native DataFlex types.</p>"
        Set piColumnSpan to 0
    End_Object
        
    Function LoadDataFromFile tWebRow[] ByRef aTheRows Returns Integer
        String sArtist sAlbum sTrash
        Number nSize nLength 
        Integer iID iNum iDecSep iHighest
        
        
        Direct_Input "ManualData.Csv"
        
        Get_Attribute DF_DECIMAL_SEPARATOR to iDecSep
        Set_Attribute DF_DECIMAL_SEPARATOR to (Ascii("."))
        
        Move 0 to iNum
        Move 0 to iHighest
        Repeat
            Readln iID sArtist sAlbum nSize nLength sTrash
            
            If (Trim(sArtist) <> "") Begin
                //  Decode data                             
                Move iID                                    to aTheRows[iNum].sRowID
                Move sArtist                                to aTheRows[iNum].aCells[0].sValue
                Move sAlbum                                 to aTheRows[iNum].aCells[1].sValue
                Move (ConvertToClient(typeNumber, nSize))   to aTheRows[iNum].aCells[2].sValue
                Move (ConvertToClient(typeNumber, nLength)) to aTheRows[iNum].aCells[3].sValue
                
                If (iID > iHighest) Begin
                    Move iID to iHighest                        
                End
                
                Increment iNum                                
            End
        Until (SeqEof)// or iNum > 3)
        
        Set_Attribute DF_DECIMAL_SEPARATOR to iDecSep
        
        Close_Input
        
        WebSet piHighest to iHighest
                
        Function_Return iHighest
    End_Function
    
    { WebProperty = True }
    Property Integer piHighest 0
    
    Procedure SaveDataToFile tWebRow[] aData
        //Send ShowInfoBox (SFormat("We are going to save %1 rows!", SizeOfArray(aData))) ("Yeeh!")
        Integer iChOut iTo iRow iCol iDecSep iID iHigh
        String sArtist sAlbum
        Number nSize nLength 
        
        WebGet piHighest to iHigh
        
        Get_Attribute DF_DECIMAL_SEPARATOR to iDecSep
        Set_Attribute DF_DECIMAL_SEPARATOR to (Ascii("."))
        
        EraseFile "Albums.csv"
        
        Move (Seq_New_Channel()) to iChOut
        Direct_Output channel iChOut "ManualData.csv"
        
        Move (SizeOfArray(aData) - 1) to iTo
        
        For iRow from 0 to iTo
            If (Left(aData[iRow].sRowID, 4) = "new_") Begin
                //  Autonumber
                Increment iHigh
                Move iHigh to iID
            End
            Else Begin
                Move (aData[iRow].sRowID) to iID
            End
            
            //  Encode data
            Move (Replaces('"', aData[iRow].aCells[0].sValue, '\"'))           to sArtist
            Move (Replaces('"', aData[iRow].aCells[1].sValue, '\"'))           to sAlbum
            Move (ConvertFromClient(typeNumber, aData[iRow].aCells[2].sValue)) to nSize
            Move (ConvertFromClient(typeNumber, aData[iRow].aCells[3].sValue)) to nLength
                
            Writeln channel iChOut '"' iID '","' sArtist '","' sAlbum '","' nSize '","' nLength '"'
        Loop
        
        Close_Output channel iChOut
        Send Seq_Release_Channel iChOut
        
        Set_Attribute DF_DECIMAL_SEPARATOR to iDecSep
    End_Procedure

End_Object
